{"version":3,"file":"common.js","mappings":";;;;;;;;AAAA;AACA;AAKA;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5IA;;AAIA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BA;AACA;AACA;AACA;AAOA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAsCA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AAUA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;ACpGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAKA;AAAA;AACA;AAGA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;AAEA;AAEA;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7BA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAUA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AAAA;AAUA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AA4EA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AAAA;AAAA;AA3HA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAEA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;AAEA;AAEA;AAmBA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAmBA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAPA;AASA;AACA;AACA;AAXA;AAaA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AAnBA;AAAA;AAAA;AAuBA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAoBA;AAAA;AAAA;AAEA;AAGA;AAEA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAIA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AAGA;AACA;AAGA;AAAA;AASA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAGA;AAAA;AAEA;AAmBA;;;;;;;;;;;;;;;;;AC/bA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAkrFA;AACA;AAAA;AAAA;AAAA;AAuFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AA5GA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtBA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;AC3KA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AAUA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;AC7EA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClKA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAIA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AA1DA;AAAA;AAAA;AA4DA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAHA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAeA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AClOA;AAcA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxCA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AAGA;AACA;AAEA;AAGA;AAGA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvLA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AAIA;AAEA;;;;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AAAA;AACA;AACA;AAAA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;ACXA;;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;ACtBA;;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AAEA;AACA;AACA;AAAA;;AAEA;AACA;AAAA;AAEA;AACA;AAAA;;AAEA;AACA;AAAA;AAEA;AACA;AAAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAkBA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AA5LA;AACA;AACA;AACA;AA4LA;;;;;;;;;;;;;;;;;;;;;ACvUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;;AAGA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AA1BA;AACA;AACA;AACA;AA0BA;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AA5HA;AACA;AACA;AACA;AA4HA;;;;;;;;;;;;;;;;;;;;;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAaA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAjDA;AACA;AACA;AACA;AAiDA;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAlLA;AACA;AACA;AACA;AAkLA;;;;;;;;;;;;;;;;;;;;;ACrUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAhOA;AACA;AACA;AACA;AAgOA;;;;;;;;;;;;;;;;;;;;;AC7XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AA7FA;AACA;AACA;AACA;AA6FA;;;;;;;;;;;;;;;;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;AACA;AACA;AACA;;AAgBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAiBA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AAhOA;AACA;AACA;AACA;AAgOA;;;;;;;;;;;;;;;;;;;;;;AC7XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACjBA;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAgCA;AAAA;AACA;AAAA;AAAA;AAGA;AAHA;AAAA;AAAA;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAqCA;AAAA;AACA;AAAA;AAAA;AAGA;AAHA;AAAA;AAAA;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAyCA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAPA;AASA;AACA;AACA;AAXA;AAaA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AAnBA;AAoBA;AApBA;AAAA;AAAA;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAeA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AARA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AATA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AAMA;AAEA;AAGA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAKA;AAEA;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAmBA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACpCA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;;AAEA;;AAEA;;AAgCA;AAAA;AAAA;AAAA;AACA;AAAA;AAeA;AAXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAIA;AAEA;AACA;AAEA;AAFA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAVA;AAWA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAvDA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAbA;AAAA;AAAA;;AAeA;AACA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhCA;AAAA;AAAA;AAiCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAnCA;AAAA;AAAA;AAqCA;AAAA;AACA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvNA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAXA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9BA;AAAA;AAAA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAbA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA7BA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAEA;AACA;AACA;;AAsBA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrHA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA","sources":["webpack://wechat-app-hrbust/._config_utils_formData.js","webpack://wechat-app-hrbust/._src_app.config.ts","webpack://wechat-app-hrbust/._src_components_@with-share_index.tsx","webpack://wechat-app-hrbust/._src_components_Avatar_Avatar.tsx","webpack://wechat-app-hrbust/._src_components_Avatar_index.ts","webpack://wechat-app-hrbust/._src_components_ImageCache_index.tsx","webpack://wechat-app-hrbust/._src_components_Time_Time.tsx","webpack://wechat-app-hrbust/._src_components_Time_index.ts","webpack://wechat-app-hrbust/._src_components_captcha-modal_index.tsx","webpack://wechat-app-hrbust/._src_components_cropper_index.tsx","webpack://wechat-app-hrbust/._src_components_index.ts","webpack://wechat-app-hrbust/._src_components_loading_index.tsx","webpack://wechat-app-hrbust/._src_components_loading_withLoading.tsx","webpack://wechat-app-hrbust/._src_components_publisher-title_index.tsx","webpack://wechat-app-hrbust/._src_components_resource-item_ResourceItem.tsx","webpack://wechat-app-hrbust/._src_components_resource-item_index.ts","webpack://wechat-app-hrbust/._src_components_wxml2canvas_index.tsx","webpack://wechat-app-hrbust/._src_components_wxml2canvas_utils_draw.js","webpack://wechat-app-hrbust/._src_components_wxml2canvas_utils_utils.js","webpack://wechat-app-hrbust/._src_components_wxml2canvas_utils_widget.js","webpack://wechat-app-hrbust/._src_components_wxml2canvas_utils_xml-parser.js","webpack://wechat-app-hrbust/._src_redux_actions_common.ts","webpack://wechat-app-hrbust/._src_redux_actions_global.ts","webpack://wechat-app-hrbust/._src_redux_actions_user.ts","webpack://wechat-app-hrbust/._src_redux_reducers_common.ts","webpack://wechat-app-hrbust/._src_redux_reducers_global.ts","webpack://wechat-app-hrbust/._src_redux_reducers_index.ts","webpack://wechat-app-hrbust/._src_redux_reducers_user.ts","webpack://wechat-app-hrbust/._src_redux_store_index.ts","webpack://wechat-app-hrbust/._src_services_common.ts","webpack://wechat-app-hrbust/._src_services_pdd.ts","webpack://wechat-app-hrbust/._src_services_user.ts","webpack://wechat-app-hrbust/._src_services2_api_CommentApi.ts","webpack://wechat-app-hrbust/._src_services2_api_ConfigApi.ts","webpack://wechat-app-hrbust/._src_services2_api_MediaApi.ts","webpack://wechat-app-hrbust/._src_services2_api_MessageApi.ts","webpack://wechat-app-hrbust/._src_services2_api_ResourceApi.ts","webpack://wechat-app-hrbust/._src_services2_api_SaleWallApi.ts","webpack://wechat-app-hrbust/._src_services2_api_UserApi.ts","webpack://wechat-app-hrbust/._src_services2_api_WallApi.ts","webpack://wechat-app-hrbust/._src_services2_api_api.ts","webpack://wechat-app-hrbust/._src_services2_index.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse200.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2001.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse20010.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse20011.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse20012.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse20013.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse20014.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2001FromUserInfoCustomAvatarUrl.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2002.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2003.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2003Result.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2004.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2005.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2005Result.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2006.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2007.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2008.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse2009.ts","webpack://wechat-app-hrbust/._src_services2_model_InlineResponse200Result.ts","webpack://wechat-app-hrbust/._src_services2_model_models.ts","webpack://wechat-app-hrbust/._src_utils_ajax_ajax.ts","webpack://wechat-app-hrbust/._src_utils_ajax_axios.ts","webpack://wechat-app-hrbust/._src_utils_ajax_consts.ts","webpack://wechat-app-hrbust/._src_utils_ajax_index.ts","webpack://wechat-app-hrbust/._src_utils_ajax_new-ajax.ts","webpack://wechat-app-hrbust/._src_utils_dateFormat.ts","webpack://wechat-app-hrbust/._src_utils_image.ts","webpack://wechat-app-hrbust/._src_utils_index.ts","webpack://wechat-app-hrbust/._src_utils_login.ts","webpack://wechat-app-hrbust/._src_utils_request.ts","webpack://wechat-app-hrbust/._src_utils_router.ts"],"sourcesContent":["// eslint-disable-next-line import/no-commonjs\nfunction FormData(){\n\n}\n\n\nmodule.exports = FormData\n","export const router = {\n  // 分包，pages 主包目前只放 tab 签的四个主页面，其它功能页面都放入 subPackages 中\n  pages: {\n    index: 'index/index', // 首页\n    // campus: 'campus/index', // 校园\n    // discover: 'discover/index', // 发现\n    account: 'account/index', // 个人中心\n    shop: 'shop/index', // 校园购\n    resource: 'resource/index', // 资源分享首页\n    // 'pages/course',\n    // 'pages/courseDetail',\n    // 'pages/choiceTrem',\n    // 'pages/christmas/christmasIndex',\n    // 'pages/christmas/imageeditor',\n    // 'pages/christmas/combine',\n    // 'pages/guoqi/index',\n    // 'pages/guoqi/combine',\n    // 'pages/guoqi/imageeditor',\n    // 'pages/wifi',\n    // 'pages/combine/combine'\n  },\n  pages2: {\n    login: 'login/index', // 登录页面\n    course: 'course/index', // 课表主页面\n    courseTerm: 'course-term/index', // 课表，选择学期页面\n    courseDetail: 'course-detail/index', // 课表，课程详情页\n    webview: 'webview/index', // 公共 webview 承载页面\n    exam: 'exam/index', // 考试查询\n    grade: 'grade/index', // 成绩查询\n    gradeShare: 'grade/share/index', // 成绩查询\n    yingxin: 'yingxin/index', // 新生查询\n    news: 'news/index', // 教务新闻\n    classroom: 'classroom/index', // 空教室查询\n    classroomList: 'classroom-list/index', // 空教室查询结果\n    pddSearch: 'pdd-search/index', // 品多多搜索页面,\n  },\n  pages3: {\n    accountEdit: 'account-edit/index', // 个人中心，编辑个人信息页面\n    aboutme: 'aboutme/index', // 关于我们\n    // schoolAnniversary: 'school-anniversary/index', // 70 周年校庆\n    community: 'community/index', // 社区首页\n    createWall: 'community/create-wall/index', // 创建表白墙\n    wallDetail: 'community/wall-detail/index', // 表白墙详情\n    createSaleWall: 'community/create-sale-wall/index', // 创建卖舍友\n    saleWallDetail: 'community/sale-wall-detail/index', // 卖舍友详情\n    message: 'community/message/index', // 消息页面\n    myWall: 'community/my-wall/index', // 我的表白墙\n    mySaleWall: 'community/my-sale-wall/index', // 我的卖舍友\n    search: 'community/search/index', // 搜索\n    otherAccount: 'community/account/index', // 其他用户主页\n    // games: 'community/resource/index', // 资源分享首页\n    resourceDetail: 'community/resource-detail/index', // 资源分享详情\n    searchResource: 'community/search-resource/index', // 资源分享搜索\n  },\n}\n\nexport const pages = Object.keys(router.pages).map(\n  (path) => `pages/${router.pages[path]}`\n)\n\nexport type Routers = {\n  [key in keyof (typeof router)['pages']]: string\n} & {\n  [key in keyof (typeof router)['pages2']]: string\n} & {\n  [key in keyof (typeof router)['pages3']]: string\n}\n\nexport const routes: Routers = Object.keys(router).reduce((r, packageName) => {\n  Object.keys(router[packageName]).forEach((routerName) => {\n    r[routerName] = `/${packageName}/${router[packageName][routerName]}`\n  })\n  return r\n}, {} as Routers)\n\nexport default {\n  pages,\n  subPackages: [\n    {\n      root: 'pages2',\n      pages: Object.values(router.pages2),\n    },\n    {\n      root: 'pages3',\n      pages: Object.values(router.pages3),\n    },\n  ],\n  tabBar: {\n    custom: true,\n    borderStyle: 'black',\n    color: '#ccc',\n    selectedColor: '#000',\n    backgroundColor: '#fff',\n    list: [\n      {\n        pagePath: 'pages/index/index',\n        text: '首页',\n        iconPath: 'assets/icon/home.png',\n        selectedIconPath: 'assets/icon/home_selected.png',\n      },\n      {\n        pagePath: 'pages/resource/index',\n        text: '资源分享',\n        iconPath: 'assets/icon/campus.png',\n        selectedIconPath: 'assets/icon/campus_selected.png',\n      },\n      // {\n      //   pagePath: 'pages/discover/index',\n      //   text: 'Soul',\n      //   iconPath: 'assets/icon/find.png',\n      //   selectedIconPath: 'assets/icon/find_selected.png'\n      // },\n      {\n        pagePath: 'pages/shop/index',\n        text: '优惠购',\n        iconPath: 'assets/icon/shop.png',\n        selectedIconPath: 'assets/icon/shop_selected.png',\n      },\n      {\n        pagePath: 'pages/account/index',\n        text: '我',\n        iconPath: 'assets/icon/account.png',\n        selectedIconPath: 'assets/icon/account_selected.png',\n      },\n    ],\n  },\n\n  window: {\n    backgroundTextStyle: 'light',\n    navigationBarBackgroundColor: '#ffffff',\n    navigationBarTitleText: '理工喵',\n    navigationBarTextStyle: 'black',\n  },\n\n  plugins: {\n    waimai: {\n      version: '1.1.0',\n      provider: 'wx05e29bcb0dd5320e',\n    },\n  },\n}\n","// 微信分享高阶组件\n\nimport React, { ComponentClass } from 'react'\nimport Taro from '@tarojs/taro'\nimport { getCurrentPageUrl } from '@/utils'\n\nexport type Options = {\n  title?: string\n  imageUrl?: string\n  path?: string\n  query?: string\n}\n\nconst defaultOptions = {\n  title: '理工喵',\n  imageUrl: '',\n  path: 'pages/index/index',\n  query: ''\n}\n\nfunction withShare(opts: Options = defaultOptions) {\n  return function demoComponent(WrappedComponent: ComponentClass) {\n    return class WithShare extends WrappedComponent {\n      async componentWillMount() {\n        // console.log('componentWillMount')\n        // Taro.showShareMenu({\n        //   withShareTicket: true,\n        //   // @ts-ignore\n        //   menus: ['shareAppMessage', 'shareTimeline']\n        // })\n      }\n\n      $setShareInfo?: () => Options\n      _shareOptions?: Options\n\n      // 点击分享的那一刻会进行调用\n      onShareAppMessage() {\n        return this.getShareInfo()\n      }\n\n      onShareTimeline() {\n        const { title, imageUrl, query } = this.getShareInfo()\n        return {\n          title,\n          query,\n          imageUrl\n        }\n      }\n\n      getShareInfo = () => {\n        // let { title, imageUrl, path = null } = opts;\n        let options = { ...opts }\n        console.log(\n          this.$setShareInfo,\n          'this.$setShareInfo',\n          this.$setShareInfo?.(),\n          this._shareOptions\n        )\n\n        if (this._shareOptions) {\n          options = {\n            ...options,\n            ...(this._shareOptions || {})\n          }\n        }\n        // 从继承的组件获取配置\n        if (this.$setShareInfo && typeof this.$setShareInfo === 'function') {\n          // opts = this.$setShareInfo()\n          options = {\n            ...options,\n            ...(this.$setShareInfo || {})\n          }\n        }\n\n        const { title, path = getCurrentPageUrl(), imageUrl, query } = options\n\n        return {\n          title,\n          path,\n          imageUrl,\n          query\n        }\n      }\n\n      render() {\n        // return <WrappedComponent />\n        return super.render()\n      }\n    }\n  }\n}\n\nexport default withShare\n","import React, { useCallback } from 'react'\nimport { View, Image, Text } from '@tarojs/components'\nimport cn from 'classnames'\nimport { UserState } from '@/redux/reducers/user'\nimport { getCdnUrl } from '@/utils'\nimport { goPage, routes } from '@/utils/router'\nimport './Avatar.less'\n\nconst prefix = 'component-avatar'\n\nexport function NickName(props: {\n  className?: string\n  customName?: string\n  nickName?: string\n  isPublisher?: boolean\n  tags?: string[]\n}) {\n  const { customName, nickName, className = '', tags = [] } = props\n  const name = customName || nickName\n  return name ? (\n    <View className={`${prefix}__name ${className}`}>\n      <Text user-select>{name}</Text>\n      {tags.length > 0 && <Text className={`${prefix}__tag`}>{tags[0]}</Text>}\n      {/* {isPublisher ? '(我)' : ''} */}\n    </View>\n  ) : null\n}\n\nexport default function Avatar(\n  props: UserState['userInfo'] & {\n    className?: string\n    avatarSize?: string\n    onClick?: () => void\n    onClickType?: 'preview' | 'jump'\n    isPublisher?: boolean\n    userTags?: string[]\n  }\n) {\n  const {\n    _id,\n    isPublisher,\n    avatarUrl = '',\n    customAvatarUrl,\n    customName,\n    nickName,\n    className,\n    avatarSize = '70rpx',\n    onClick,\n    onClickType,\n    userTags\n  } = props\n\n  const avatar = customAvatarUrl ? getCdnUrl(customAvatarUrl) : avatarUrl\n\n  const onAvatarClick = useCallback(\n    e => {\n      if (!onClick && !onClickType) {\n        return\n      }\n      e.stopPropagation()\n      if (onClickType === 'preview') {\n        wx.previewMedia({\n          current: 0,\n          sources: [\n            {\n              url: avatar,\n              type: 'image'\n            }\n          ],\n          showmenu: true\n        })\n      } else if (onClickType === 'jump') {\n        // TODO: 跳转到个人主页\n        goPage(`${routes.otherAccount}?id=${_id}`)\n      } else {\n        onClick?.()\n      }\n    },\n    [_id, avatar, onClick, onClickType]\n  )\n\n  return (\n    <View className={cn(prefix, className)} onClick={onAvatarClick}>\n      <Image\n        className={`${prefix}__image`}\n        src={avatar}\n        mode=\"aspectFill\"\n        style={{\n          width: avatarSize,\n          height: avatarSize\n        }}\n      ></Image>\n      <NickName\n        customName={customName}\n        nickName={nickName}\n        isPublisher={isPublisher}\n        tags={userTags}\n      ></NickName>\n    </View>\n  )\n}\n","export { default } from './Avatar'\nexport * from './Avatar'\n","import { useEffect, useState } from 'react'\nimport { Image } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\n\nexport const uuid = (): string =>\n  'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0\n    const v = c === 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16).toUpperCase()\n  })\n\nconst IMAGE_CACHE_KEY = 'image_cache_key'\n\ninterface ImageProps {\n  src: string\n  className: string\n}\n\nfunction url2Base64(url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: url.replace('http://', 'https://'),\n      responseType: 'arraybuffer', //最关键的参数，设置返回的数据格式为arraybuffer\n      success: (res) => {\n        //把arraybuffer转成base64\n        const base64 = wx.arrayBufferToBase64(res.data as any)\n\n        //不加上这串字符，在页面无法显示的哦\n        // base64 = 'data:image/jpeg;base64,' + base64\n        //打印出base64字符串，可复制到网页校验一下是否是你选择的原图片呢\n        console.log(base64)\n        resolve(base64)\n      },\n      fail: (res) => {\n        console.log(res)\n        reject()\n      },\n    })\n  })\n}\n\nexport default function ImageCache(props: ImageProps) {\n  const { className, src } = props\n  const [displaySrc, setDisplaySrc] = useState('')\n  useEffect(() => {\n    async function handler() {\n      const FileSystemManager = Taro.getFileSystemManager()\n\n      // 获取缓存，看有没有\n      const imageCacheMap = JSON.parse(\n        Taro.getStorageSync(IMAGE_CACHE_KEY) || '{}'\n      )\n\n      if (imageCacheMap[src]) {\n        // 拿到缓存直接使用缓存文件地址\n        const base64 = FileSystemManager.readFileSync(\n          `${wx.env.USER_DATA_PATH}/${imageCacheMap[src]}`,\n          'base64'\n        ) as string\n\n        console.info('load image from disk')\n        return setDisplaySrc(base64)\n      }\n\n      const id = uuid()\n\n      // 拉取图片 base64\n      const base64 = await url2Base64(src)\n\n      // 这里处理缓存逻辑，节省开销\n      FileSystemManager.writeFile({\n        filePath: `${wx.env.USER_DATA_PATH}/${id}`,\n        data: base64,\n        encoding: 'base64',\n        success(res) {\n          console.log(res)\n          // 写入缓存\n          imageCacheMap[src] = id\n          Taro.setStorageSync(IMAGE_CACHE_KEY, JSON.stringify(imageCacheMap))\n          setDisplaySrc(base64)\n        },\n        fail() {\n          // 失败直接使用原图片地址\n          setDisplaySrc(src)\n        },\n      })\n    }\n    handler()\n  }, [src])\n\n  if (!displaySrc) {\n    return\n  }\n  return (\n    <Image src={`data:image/jpeg;base64,${displaySrc}`} className={className} />\n  )\n}\n","import React from 'react'\nimport { View } from '@tarojs/components'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/zh-cn'\nimport './Time.less'\n\ndayjs.locale('zh-cn') // 全局使用\n\ndayjs.extend(relativeTime)\n\nconst prefix = 'component-time'\n\nexport default function Time(props: {\n  time?: string | number\n  className?: string\n  type?: 'relative' | 'absolute'\n}) {\n  const { time, className = '', type = 'absolute' } = props\n  if (!time) {\n    return null\n  }\n  return (\n    <View className={`${prefix} ${className}`}>\n      {type === 'absolute'\n        ? dayjs(time).fromNow()\n        : dayjs(time).format('YYYY年MM月DD日 HH:mm')}\n    </View>\n  )\n}\n","export { default } from './Time'\n","import React, { useCallback, useState } from 'react'\nimport { View, Image } from '@tarojs/components'\nimport { AtModal, AtModalContent, AtModalHeader, AtInput, AtButton } from 'taro-ui'\nimport { getCaptcha } from '@/services/user'\nimport { cError } from '@/utils'\n\nimport './index.less'\n\ntype Props = {\n  captchaImage: string\n  onSubmit?: (value: string) => void\n  isOpened: boolean\n}\n\ntype IProps = Props\n\nexport default function CaptchaModal(props: IProps) {\n  const { onSubmit, isOpened } = props\n\n  const [captcha, setCaptcha] = useState<string>('')\n  const [captchaImage, setCaptchaImage] = useState<string>('')\n  const onInputChange = useCallback((value) => {\n    setCaptcha(value)\n  }, [])\n\n  const onCaptchaClick = useCallback(async () => {\n    const [err, res] = await cError(getCaptcha())\n\n    !err && setCaptchaImage(res.data.captcha)\n  }, [])\n\n  const onConfirm = useCallback(() => {\n    onSubmit && onSubmit(captcha)\n    setCaptcha('')\n  }, [onSubmit, captcha])\n\n  return (\n    <AtModal isOpened={isOpened} className=\"captcha-modal\" closeOnClickOverlay={false}>\n      <AtModalHeader>请输入验证码</AtModalHeader>\n      {/* input 优先级最高，modal 隐藏了，input 也无法隐藏 */}\n      {\n        isOpened && <AtModalContent>\n          <View className=\"dialog-body\">\n            <View className=\"input-wrapper\">\n              <AtInput\n                name=\"value\"\n                title=\"验证码\"\n                type=\"text\"\n                value={captcha}\n                onChange={onInputChange}\n                placeholder=\"请输入验证码\"\n                placeholderClass=\"placeholder\"\n                className=\"captcha-input\"\n              >\n                <Image className=\"captcha-image\" onClick={onCaptchaClick} src={captchaImage || props.captchaImage} />\n              </AtInput>\n            </View>\n            <View style=\"width: 160px; height: 50px\">\n            </View>\n          </View>\n          <AtButton className=\"login-button\" disabled={!captcha} type=\"primary\" onClick={onConfirm}>确定</AtButton>\n        </AtModalContent>\n      }\n    </AtModal>\n  )\n}\n","import React, { Component } from 'react'\nimport Taro from '@tarojs/taro'\nimport WeCropper from 'we-cropper'\nimport { Canvas, View } from '@tarojs/components'\n\ntype Props = {\n  options: any\n  src: string\n  onReady: (cropper: WeCropper) => void\n}\n\ntype State = {}\n\nconst device = Taro.getSystemInfoSync()\n\nconst width = device.windowWidth / 2\nconst height = device.windowWidth / 2\n\nconst defaultOptions = {\n  id: 'cropper',\n  targetId: 'targetCropper',\n  pixelRatio: device.pixelRatio,\n  width,\n  height,\n  scale: 2.5,\n  zoom: 8,\n  cut: {\n    x: (width - 150) / 2,\n    y: (height - 150) / 2,\n    width: 150,\n    height: 150,\n  },\n  boundStyle: {\n    color: '#04b00f',\n    mask: 'rgba(0,0,0,0.1)',\n    lineWidth: 1,\n  },\n}\n\nexport default class Cropper extends Component<Props, State> {\n  static defaultProps = {\n    options: defaultOptions,\n  }\n\n  async componentDidMount() {\n    await this.init()\n\n    this.props.onReady(this.cropper)\n    const { src } = this.props\n    if (src) {\n      this.cropper.pushOrign(src)\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.src !== this.props.src) {\n      this.cropper.removeImage()\n      nextProps.src && this.pushOrign(nextProps.src)\n    }\n  }\n\n  cropper: WeCropper\n\n  init = () => {\n    return new Promise((resolve) => {\n      const { options } = this.props\n      const { id, targetId } = options\n      const option = {\n        ...options,\n        ctx: Taro.createCanvasContext(id),\n        targetCtx: Taro.createCanvasContext(targetId),\n      }\n\n      this.cropper = new WeCropper(option)\n        .on('ready', (ctx) => {\n          console.info('on crooper ready')\n          resolve()\n          // this.cropper.pushOrign('https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKRkuxbeB7jJuFGnuksXL01xjWMQEkaLyTaBFpy2hmiaxBl2apZrMM0NgiaicRZMiaLWPscyKIJwczj0w/132')\n        })\n        .on('beforeImageLoad', (ctx) => {\n          console.info('before picture loaded, i can do something')\n          console.info('current canvas context:', ctx)\n          // Taro.showToast({\n          //   title: '上传中',\n          //   icon: 'loading',\n          //   duration: 20000,\n          // })\n          Taro.showLoading()\n        })\n        .on('imageLoad', (ctx) => {\n          console.info('picture loaded')\n          console.info('current canvas context:', ctx)\n          // Taro.hideToast()\n          Taro.hideLoading()\n        })\n    })\n  }\n\n  // 这里是一个自定义方法\n  touchStart = (e) => {\n    this.cropper.touchStart(e)\n  }\n\n  touchMove = (e) => {\n    this.cropper.touchMove(e)\n  }\n\n  touchEnd = (e) => {\n    this.cropper.touchEnd(e)\n  }\n\n  pushOrign = (src) => {\n    this.cropper.pushOrign(src)\n  }\n\n  updateCanvas = () => {\n    this.cropper.updateCanvas()\n  }\n\n  getCropperBase64 = (fn) => {\n    return this.cropper.getCropperBase64(fn)\n  }\n\n  getCropperImage = (opt, fn) => {\n    const option = Object.assign(\n      {\n        // 传入自定义组件上下文\n        componentContext: this,\n      },\n      opt\n    )\n    return this.cropper.getCropperImage(option, fn)\n  }\n\n  render() {\n    const { options } = this.props\n\n    return (\n      <View>\n        <Canvas\n          type=\"t\"\n          canvasId={options.id}\n          className=\"cropper\"\n          disableScroll\n          onTouchStart={this.touchStart}\n          onTouchMove={this.touchMove}\n          onTouchEnd={this.touchEnd}\n          style={`width:${options.width}px;height:${options.height}px;background-color: rgba(0, 0, 0, 0.2)`}\n        />\n        <Canvas\n          type=\"t\"\n          canvasId={options.targetId}\n          className=\"cropper\"\n          disableScroll\n          style={`position: fixed; top: -${\n            options.width * options.pixelRatio\n          }px; left: -${options.height * options.pixelRatio}px; width:${\n            options.width * options.pixelRatio\n          }px;height:${options.height * options.pixelRatio}px;`}\n        />\n      </View>\n    )\n  }\n}\n","export { default as Loading } from './loading'\nexport { default as withLoading } from './loading/withLoading'\nexport { default as CaptchaModal } from './captcha-modal'\nexport { default as Wxml2canvas } from './wxml2canvas'\nexport { default as Cropper } from './cropper'\nexport { default as withShare } from './@with-share'\n","import React from 'react'\nimport { View, Image } from '@tarojs/components'\nimport cn from 'classnames'\nimport loadingImg from './res/loading.gif'\n\nimport './index.less'\n\ntype Props = {\n  loadingStyle?: string,\n  loading?: boolean,\n}\n\ntype IProps = Props\n\nexport default function Loading(props: IProps) {\n  const { loadingStyle = '', loading = false } = props\n  if (!loading) {\n    return null\n  }\n  return (\n    <View className={cn('global-loading', loadingStyle === 'padding' ? 'loadingPadding' : 'loadingScreen')}>\n      <Image className=\"image\" src={loadingImg} />\n      <View className=\"text\">喵儿，加载中...</View>\n    </View>\n  )\n}\n","import React, { Component, Fragment } from 'react'\nimport Loading from '.'\n\nexport default function withLoading(WrappedComponent) {\n  return class extends Component {\n    state = {\n      loading: false\n    }\n\n    changeLoading = (loading: boolean) => {\n      this.setState({\n        loading,\n      })\n    }\n\n    render() {\n      const { loading } = this.state\n      return <Fragment>\n        <Loading loading={loading}></Loading>\n        <WrappedComponent {...this.props} changeLoading={this.changeLoading} />\n      </Fragment>\n    }\n  }\n}\n","import React from 'react'\nimport { View } from '@tarojs/components'\nimport dayjs from 'dayjs'\nimport cn from 'classnames'\nimport Avatar from '@/components/Avatar'\nimport Time from '@/components/Time'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport 'dayjs/locale/zh-cn'\nimport './index.less'\n\ndayjs.locale('zh-cn') // 全局使用\n\ndayjs.extend(relativeTime)\n\nconst prefix = 'wall'\n\ntype UserInfo = {\n  avatarUrl?: string\n  nickName?: string\n}\ntype Props = {\n  publisher?: {\n    userInfo?: UserInfo\n    _id?: string\n    tags?: string[]\n  }\n  isPublisher?: boolean\n  time?: string | number\n  className?: string\n  timeType?: 'relative' | 'absolute'\n  userTags?: string[]\n}\n\nexport default function PublisherTitle(props: Props) {\n  const {\n    publisher,\n    time,\n    className,\n    timeType = 'absolute',\n    isPublisher\n  } = props\n\n  return (\n    <View className={cn(`${prefix}__publisher`, className)}>\n      <Avatar\n        {...publisher?.userInfo}\n        onClickType=\"jump\"\n        _id={publisher?._id}\n        isPublisher={isPublisher}\n        userTags={publisher?.tags}\n      ></Avatar>\n\n      <Time time={time} type={timeType}></Time>\n    </View>\n  )\n}\n","import React, { Fragment, useCallback, useEffect, useState } from 'react'\nimport { APIS } from '@/services2'\nimport { withRequest, copy, showToast } from '@/utils'\nimport { Image, View, Text, Ad } from '@tarojs/components'\nimport { AtButton, AtCard } from 'taro-ui'\nimport Taro from '@tarojs/taro'\n\nimport CommentIcon from '@/assets/community-imgs/comment.png'\nimport LikeIcon from '@/assets/community-imgs/like.png'\nimport ViewIcon from '@/assets/community-imgs/view.png'\nimport LikeSelectedIcon from '@/assets/community-imgs/like_selected.png'\nimport PublisherTitle from '@/components/publisher-title'\nimport './ResourceItem.less'\n\ninterface IResourceProps {\n  timeType?: 'relative' | 'absolute'\n  data: GetApiResultType<typeof APIS.ResourceApi.apiResourceListGet>[0]\n  onClick?: () => void\n  showDelete?: boolean\n  showHotComments?: boolean\n  showDetail?: boolean\n  onShowAd?: (callback: Function) => void\n  showTop?: boolean\n}\n\nconst prefix = 'resource-item'\n\nexport enum ResourceTag {\n  /**\n   * 电影、电视剧\n   * Movie\n   * Film\n   */\n  MOVIE = 'movie',\n  /**\n   * 游戏\n   * Game\n   */\n  GAME = 'game',\n  /**\n   * 学习资源\n   * Study\n   */\n  STUDY = 'study',\n}\n\nexport const resourceInfo = {\n  [ResourceTag.MOVIE]: {\n    name: '影视',\n  },\n  [ResourceTag.GAME]: {\n    name: '游戏',\n  },\n  [ResourceTag.STUDY]: {\n    name: '学习',\n  },\n}\n\nexport enum ResourceDownloadType {\n  /**\n   * 百度网盘\n   */\n  BAIDU,\n  /**\n   * 阿里网盘\n   */\n  ALIYUN,\n  /**\n   * 天翼网盘\n   */\n  TIANYI,\n  /**\n   * 夸克\n   */\n  QUARK,\n  /**\n   * 其它\n   */\n  OTHER,\n}\n\nconst downLoadInfo = [\n  {\n    name: '百度网盘',\n  },\n  {\n    name: '阿里网盘',\n  },\n  {\n    name: '天翼网盘',\n  },\n  {\n    name: '夸克网盘',\n  },\n  {\n    name: '其它',\n  },\n]\n\nexport default function Resource(props: IResourceProps) {\n  const {\n    data: {\n      // photos = [],\n      // to,\n      publisher,\n      // content,\n      likeCount,\n      isLike,\n      _id,\n      createdAt,\n      commentCount,\n      // isPublisher,\n      name,\n      nameEn,\n      description,\n      hotComments = [],\n      downloadUrl,\n      tag = [],\n      viewCount,\n      top,\n    } = {},\n    timeType,\n    onClick,\n    // showDelete = false,\n    showHotComments = false,\n    showDetail = false,\n    onShowAd,\n    showTop = false,\n  } = props\n\n  const [localIsLike, setLocalIsLike] = useState(isLike)\n  const [localIsLikeCount, setLocalIsLikeCount] = useState(likeCount || 0)\n  // const [showDownLoadUrlSheet, setShowDownLoadUrlSheet] = useState(false)\n  const [showDownloadDetail, setShowDownloadDetail] = useState(false)\n  // const [showDownLoadDetailModal, setDownLoadDetailModal] = useState(false)\n  // const [modalContent, setModalContent] = useState<{\n  //   url: string\n  //   downloadType: ResourceDownloadType\n  //   password?: string\n  //   decompressionPassword?: string\n  // }>()\n\n  useEffect(() => {\n    setLocalIsLike(isLike)\n    setLocalIsLikeCount(likeCount || 0)\n  }, [isLike, likeCount])\n\n  // const onImageClick = useCallback((index: number, e) => {\n  //   e.stopPropagation()\n  //   // @ts-ignore\n  //   wx.previewMedia({\n  //     current: index,\n  //     sources: photos.map(item => ({\n  //       url: getCdnUrl(item),\n  //       type: 'image'\n  //     })),\n  //     showmenu: true\n  //   })\n  // }, [])\n\n  const onLikeClick = useCallback(\n    async (e) => {\n      e.stopPropagation()\n      if (!_id) {\n        return\n      }\n\n      const [err] = await withRequest(APIS.ResourceApi.apiResourceLikeIdPut)({\n        id: _id,\n      })\n\n      // 本地变更\n      if (!err) {\n        setLocalIsLike(!localIsLike)\n        setLocalIsLikeCount(localIsLikeCount + (localIsLike ? -1 : 1))\n      }\n    },\n    [_id, localIsLike, localIsLikeCount]\n  )\n\n  // const onDelete = useCallback(() => {\n  //   Taro.showModal({\n  //     title: '确认删除这条动态？',\n  //     content: '删除后无法找回，请谨慎操作。',\n  //     success: async res => {\n  //       if (res.confirm) {\n  //         const [err] = await withRequest(APIS.WallApi.apiWallIdDelete)({\n  //           id: _id || ''\n  //         })\n  //         if (!err) {\n  //           showToast({\n  //             title: '删除成功',\n  //             icon: 'success',\n  //             finished: () => {\n  //               Taro.navigateBack()\n  //             }\n  //           })\n  //         }\n  //       }\n  //     }\n  //   })\n  // }, [_id])\n\n  const onGetUrl = () => {\n    onShowAd?.(onShowDownloadDetail)\n  }\n\n  // const toggleDownLoadUrlSheet = useCallback(() => {\n  //   setShowDownLoadUrlSheet(!showDownLoadUrlSheet)\n  // }, [showDownLoadUrlSheet])\n\n  // const onDownLoadItemClick = (index: number) => {\n  //   if (!downloadUrl) {\n  //     return\n  //   }\n  //   copy(downloadUrl[index].url)\n  //   showToast({\n  //     title: '复制成功，请粘贴到浏览器打开'\n  //   })\n  //   onShowDownloadDetail()\n  // }\n\n  const onShowDownloadDetail = () => {\n    setShowDownloadDetail(true)\n    showToast({\n      title: '获取成功',\n    })\n  }\n\n  // TODO: 举报投诉逻辑\n  const onComplaint = () => {\n    Taro.showModal({\n      title: '投诉成功',\n      content: '理工喵已收到投诉，会尽快在核实后进行处理。',\n      success: function (res) {\n        if (res.confirm) {\n          console.log('用户点击确定')\n        } else if (res.cancel) {\n          console.log('用户点击取消')\n        }\n      },\n    })\n  }\n\n  return (\n    <View className={prefix} onClick={onClick}>\n      {!showDetail && tag.length > 0 && (\n        <View className={`${prefix}-tags`}>\n          {tag.map((item) => (\n            <View className={`${prefix}-tags__tag`} key={item}>\n              {resourceInfo[item].name}\n            </View>\n          ))}\n        </View>\n      )}\n\n      <PublisherTitle\n        time={createdAt}\n        publisher={publisher}\n        timeType={timeType}\n        isPublisher={false}\n      ></PublisherTitle>\n      {/* <View\n        className={classNames(\n          `${prefix}__photos`,\n          `col-${getPhotosCol(photos?.length)}`\n        )}\n      >\n        {photos?.map((photo, index) => {\n          return (\n            <Image\n              onClick={e => onImageClick(index, e)}\n              className={`${prefix}__photos-item`}\n              key={photo.key}\n              mode={photos.length > 1 ? 'aspectFill' : 'widthFix'}\n              src={getCdnUrl(photo)}\n            ></Image>\n          )\n        })}\n      </View> */}\n      <Text user-select className={`${prefix}__content`}>\n        {name}\n        {nameEn ? `(${nameEn})` : ''}\n      </Text>\n      {showDetail && (\n        <Fragment>\n          {tag.length > 0 && (\n            <View className={`${prefix}-detail-tags`}>\n              标签：\n              {tag.map((item) => resourceInfo[item].name).join('，')}\n            </View>\n          )}\n          <View className=\"line\"></View>\n          {/* @ts-ignore */}\n          <wemark md={description} link highlight type=\"wemark\"></wemark>\n          <AtCard className={`${prefix}__url-card`} title=\"免责声明\">\n            <View className=\"mianze-text\">\n              1、本站所有内容均为爱好者分享发布的网盘链接介绍展示帖子，本站不存储任何实质资源数据。\n            </View>\n            <View className=\"mianze-text\">\n              2、本站禁止发布分享爱奇艺、B站、优酷、腾讯视频等媒体平台收费热播独播影视作品；禁止分享正在热播或者上映不足\n              3 个月影视作品。\n            </View>\n            <View className=\"mianze-text\">\n              3、本站不提供任何资源下载服务，不提供任何资源存储服务，不提供任何资源上传服务。\n            </View>\n            <View className=\"mianze-text\">\n              4、本文内所有链接指向的云盘网盘资源，其版权归版权方所有！其实际管理权为分享者所有，本站无法操作相关资源。\n            </View>\n            <View className=\"mianze-text\">\n              5、本站不对任何资源的合法性、真实性、有效性、安全性、准确性、完整性、可靠性、适用性、合法性、版权性等进行任何形式的保证。\n            </View>\n            <View className=\"mianze-text\">\n              6、本站不对任何资源的下载、使用、传播、复制、转载、分享等行为承担任何责任。\n            </View>\n            <View className=\"mianze-text\">\n              7、如您认为本站任何介绍帖侵犯了您的合法版权，请点击{' '}\n              <Text className=\"complaint-btn\" onClick={onComplaint}>\n                版权投诉\n              </Text>{' '}\n              进行投诉，我们将在确认本文链接指向的资源存在侵权后，立即删除相关介绍帖子！\n            </View>\n          </AtCard>\n          <View className=\"ad\">\n            {/* @ts-ignore */}\n            <ad\n              unit-id=\"adunit-a51bed72a19360d9\"\n              ad-type=\"video\"\n              ad-theme=\"white\"\n            >\n              {/* @ts-ignore */}\n            </ad>\n          </View>\n\n          {downloadUrl?.length === 0 ? (\n            ''\n          ) : showDownloadDetail ? (\n            <View>\n              {downloadUrl?.map((item, index) => {\n                const { url, password, decompressionPassword } = item\n                return (\n                  <AtCard\n                    className={`${prefix}__url-card`}\n                    note=\"点击复制到浏览器打开\"\n                    extra={downLoadInfo[item.downloadType]?.name}\n                    title={`下载链接${downloadUrl.length > 1 ? index + 1 : ''}`}\n                    key={index}\n                    onClick={() => {\n                      copy(url)\n                    }}\n                  >\n                    <Text\n                      className={`${prefix}__url-card__text url`}\n                      user-select\n                    >\n                      {url}\n                    </Text>\n                    {password && (\n                      <Text className={`${prefix}__url-card__text`} user-select>\n                        网盘密码：{password}\n                      </Text>\n                    )}\n                    {decompressionPassword && (\n                      <Text className={`${prefix}__url-card__text`} user-select>\n                        解压密码：{decompressionPassword}\n                      </Text>\n                    )}\n                    r\n                  </AtCard>\n                )\n              })}\n            </View>\n          ) : (\n            <AtButton\n              className={`${prefix}__get-url-btn`}\n              type=\"primary\"\n              onClick={onGetUrl}\n            >\n              点击获取下载地址\n            </AtButton>\n          )}\n        </Fragment>\n      )}\n      <View className={`${prefix}__footer`}>\n        {/* {showDelete && false && (\n          <View\n            className={`${prefix}__footer-delete blue-text`}\n            onClick={onDelete}\n          >\n            删除\n          </View>\n        )} */}\n        <View className={`${prefix}__footer-left`}>\n          {showTop && top === 1 && '置顶'}\n        </View>\n        <View className={`${prefix}__footer-right`}>\n          <View className={`${prefix}__footer-item`}>\n            <Image src={ViewIcon} className=\"view-icon\" mode=\"widthFix\"></Image>\n            {viewCount}\n          </View>\n          <View className={`${prefix}__footer-item`}>\n            <Image src={CommentIcon} mode=\"widthFix\"></Image>\n            {commentCount}\n          </View>\n          <View className={`${prefix}__footer-item`} onClick={onLikeClick}>\n            <Image\n              src={localIsLike ? LikeSelectedIcon : LikeIcon}\n              mode=\"widthFix\"\n            ></Image>\n            <Text className={localIsLike ? 'red-text' : ''}>\n              {localIsLikeCount}\n            </Text>\n          </View>\n        </View>\n      </View>\n      {showHotComments && hotComments.length > 0 && (\n        <View className={`${prefix}__comment-list`}>\n          {hotComments.map((item) => {\n            return (\n              <View key={item._id} className={`${prefix}__comment-list__item`}>\n                <Text className=\"blue-text\">\n                  @{item.from?.userInfo?.customName}:{' '}\n                </Text>\n                {item.content}\n              </View>\n            )\n          })}\n        </View>\n      )}\n\n      {/* <AtActionSheet\n        isOpened={showDownLoadUrlSheet}\n        onCancel={toggleDownLoadUrlSheet}\n      >\n        {downloadUrl?.map((item, index) => {\n          return (\n            <AtActionSheetItem\n              key={index}\n              onClick={() => onDownLoadItemClick(index)}\n            >\n              点击获取链接{index + 1} ({downLoadInfo[item.downloadType]?.name})\n            </AtActionSheetItem>\n          )\n        })}\n      </AtActionSheet> */}\n    </View>\n  )\n}\n","export { default } from './ResourceItem'\n\nexport * from './ResourceItem'\n","import React, { Component } from 'react'\nimport { View, Canvas, Image } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\n// import cn from 'classnames'\n// import loadingImg from './res/loading.gif'\nimport xmlParse from './utils/xml-parser'\nimport Widget from './utils/widget'\nimport Draw from './utils/draw'\n\nimport './index.less'\n\ntype Props = {\n  width?: string\n  height?: string\n  wxml: string\n  style: any\n  onImageLoaded: (url: string) => void\n}\n\ntype IProps = Props\n\ntype State = {\n  imageSrc: string\n  // width: string\n  // height: string\n}\n\nexport default class Wxml2canvas extends Component<IProps, State> {\n  static defaultProps = {\n    width: '375px',\n    height: '2000px',\n  }\n\n  state: Readonly<State> = {\n    imageSrc: '',\n  }\n\n  componentDidMount() {\n    this.initCanvas()\n  }\n\n  initCtx: any\n  dpr: number\n  ctx: any\n  canvas: any\n  boundary: any\n\n  initCanvas = async () => {\n    setTimeout(() => {\n      const dpr = Taro.getSystemInfoSync().pixelRatio\n      const query = Taro.createSelectorQuery()\n      this.dpr = dpr\n      query.select('#wxml2canvas')\n        .fields({ node: true, size: true })\n        .exec(res => {\n          const canvas = res[0].node\n          const ctx = canvas.getContext('2d')\n          // const ctx = wx.createCanvasContext('canvas', this)\n          canvas.width = res[0].width * dpr\n          canvas.height = res[0].height * dpr\n          // console.log(canvas.width, canvas.height, canvas)\n          ctx.scale(dpr, dpr)\n          this.ctx = ctx\n          this.canvas = canvas\n          this.renderToCanvas()\n        })\n    }, 300)\n  }\n\n  renderToCanvas = async () => {\n    const { wxml, style } = this.props\n\n    // 清空画布\n    const ctx = this.ctx\n    const canvas = this.canvas\n    if (!ctx || !canvas) {\n      return Promise.reject(new Error('renderToCanvas: fail canvas has not been created'))\n    }\n\n    ctx.clearRect(0, 0, 750, 1500)\n    const { root: xom } = xmlParse(wxml)\n\n    const widget = new Widget(xom, style)\n    const container: any = widget.init()\n\n    this.boundary = {\n      top: container.layoutBox.top,\n      left: container.layoutBox.left,\n      width: container.computedStyle.width,\n      height: container.computedStyle.height,\n    }\n    const draw = new Draw(canvas, ctx)\n    await draw.drawNode(container)\n\n    this.canvasToTempFilePath().then((tempFilePath: string) => {\n      this.setState({\n        imageSrc: tempFilePath,\n      })\n      this.props.onImageLoaded(tempFilePath)\n    })\n    return Promise.resolve(container)\n  }\n\n  canvasToTempFilePath = (fileType = 'png' as ('png' | 'jpg'), quality = 1) => {\n    return new Promise((resolve, reject) => {\n      const {\n        top, left, width, height\n      } = this.boundary\n      Taro.canvasToTempFilePath({\n        canvasId: '#wxml2canvas',\n        x: left,\n        y: top,\n        width,\n        height,\n        destWidth: width * this.dpr,\n        destHeight: height * this.dpr,\n        canvas: this.canvas,\n        fileType,\n        quality,\n        success: (res) => resolve(res.tempFilePath),\n        fail: reject\n      })\n    })\n  }\n\n  render() {\n    const { width, height } = this.props\n    const { imageSrc } = this.state\n    return (\n      <View onClick={() => Taro.previewImage({ urls: [imageSrc]})} >\n        { imageSrc\n          ? <Image className=\"wxml2canvas__img\" src={imageSrc} mode=\"widthFix\" />\n          : <Canvas className=\"wxml2canvas\" id=\"wxml2canvas\" type=\"2d\" style={`width:${width};height:${height}`}></Canvas>}\n      </View>\n    )\n  }\n}\n","export default class Draw {\n  constructor(canvas, context) {\n    this.canvas = canvas\n    this.ctx = context\n  }\n\n  roundRect(x, y, w, h, r, fill = true, stroke = false) {\n    if (r < 0) return\n    const ctx = this.ctx\n\n    ctx.beginPath()\n    ctx.arc(x + r, y + r, r, Math.PI, Math.PI * 3 / 2)\n    ctx.arc(x + w - r, y + r, r, Math.PI * 3 / 2, 0)\n    ctx.arc(x + w - r, y + h - r, r, 0, Math.PI / 2)\n    ctx.arc(x + r, y + h - r, r, Math.PI / 2, Math.PI)\n    ctx.lineTo(x, y + r)\n    if (stroke) ctx.stroke()\n    if (fill) ctx.fill()\n  }\n\n  drawView(box, style) {\n    const ctx = this.ctx\n    const {\n      left: x, top: y, width: w, height: h\n    } = box\n    const {\n      borderRadius = 0,\n      borderWidth = 0,\n      borderColor,\n      color = '#000',\n      backgroundColor = 'transparent'\n    } = style\n    ctx.save()\n    // 外环\n    if (borderWidth > 0) {\n      ctx.fillStyle = borderColor || color\n      this.roundRect(x, y, w, h, borderRadius)\n    }\n\n    // 内环\n    ctx.fillStyle = backgroundColor\n    const innerWidth = w - 2 * borderWidth\n    const innerHeight = h - 2 * borderWidth\n    // console.log(innerWidth, innerHeight, '----')\n    const innerRadius = borderRadius - borderWidth >= 0 ? borderRadius - borderWidth : 0\n    this.roundRect(x + borderWidth, y + borderWidth, innerWidth, innerHeight, innerRadius)\n    ctx.restore()\n  }\n\n  async drawImage(img, box, style) {\n    await new Promise((resolve, reject) => {\n      const ctx = this.ctx\n      const canvas = this.canvas\n      const {\n        borderRadius = 0\n      } = style\n      const {\n        left: x, top: y, width: w, height: h\n      } = box\n      ctx.save()\n      this.roundRect(x, y, w, h, borderRadius, false, false)\n      ctx.clip()\n      const Image = canvas.createImage()\n      Image.onload = () => {\n        ctx.drawImage(Image, x, y, w, h)\n        ctx.restore()\n        resolve()\n      }\n      Image.onerror = (error) => { console.log(error) }\n      Image.src = img\n    })\n  }\n\n  // eslint-disable-next-line complexity\n  drawText(text, box, style) {\n    const ctx = this.ctx\n    let {\n      left: x, top: y, width: w, height: h\n    } = box\n    let {\n      color = '#000',\n      lineHeight = '1.4em',\n      fontSize = 14,\n      textAlign = 'left',\n      verticalAlign = 'top',\n      backgroundColor = 'transparent'\n    } = style\n\n    if (!text || (lineHeight > h)) return\n\n    ctx.save()\n    if (lineHeight) { // 2em\n      lineHeight = Math.ceil(parseFloat(lineHeight.replace('em')) * fontSize)\n    }\n    ctx.textBaseline = 'top'\n    ctx.font = `${fontSize}px sans-serif`\n    ctx.textAlign = textAlign\n\n    // 背景色\n    ctx.fillStyle = backgroundColor\n    this.roundRect(x, y, w, h, 0)\n\n    // 文字颜色\n    ctx.fillStyle = color\n\n    // 水平布局\n    switch (textAlign) {\n      case 'left':\n        break\n      case 'center':\n        x += 0.5 * w\n        break\n      case 'right':\n        x += w\n        break\n      default: break\n    }\n\n    const textWidth = ctx.measureText(text).width\n    const actualHeight = Math.ceil(textWidth / w) * lineHeight\n    let paddingTop = Math.ceil((h - actualHeight) / 2)\n    if (paddingTop < 0) paddingTop = 0\n\n    // 垂直布局\n    switch (verticalAlign) {\n      case 'top':\n        break\n      case 'middle':\n        y += paddingTop\n        break\n      case 'bottom':\n        y += 2 * paddingTop\n        break\n      default: break\n    }\n\n    const inlinePaddingTop = Math.ceil((lineHeight - fontSize) / 2)\n\n    // 不超过一行\n    if (textWidth <= w) {\n      ctx.fillText(text, x, y + inlinePaddingTop)\n      return\n    }\n\n    // 多行文本\n    const chars = text.split('')\n    const _y = y\n\n    // 逐行绘制\n    let line = ''\n    for (const ch of chars) {\n      const testLine = line + ch\n      const testWidth = ctx.measureText(testLine).width\n\n      if (testWidth > w) {\n        ctx.fillText(line, x, y + inlinePaddingTop)\n        y += lineHeight\n        line = ch\n        if ((y + lineHeight) > (_y + h)) break\n      } else {\n        line = testLine\n      }\n    }\n\n    // 避免溢出\n    if ((y + lineHeight) <= (_y + h)) {\n      ctx.fillText(line, x, y + inlinePaddingTop)\n    }\n    ctx.restore()\n  }\n\n  async drawNode(element) {\n    const {layoutBox, computedStyle, name} = element\n    const {src, text} = element.attributes\n    if (name === 'view') {\n      this.drawView(layoutBox, computedStyle)\n    } else if (name === 'image') {\n      await this.drawImage(src, layoutBox, computedStyle)\n    } else if (name === 'text') {\n      this.drawText(text, layoutBox, computedStyle)\n    }\n    const childs = Object.values(element.children)\n    for (const child of childs) {\n      await this.drawNode(child)\n    }\n  }\n}\n","const hex = (color) => {\n  let result = null\n\n  if (/^#/.test(color) && (color.length === 7 || color.length === 9)) {\n    return color\n    // eslint-disable-next-line no-cond-assign\n  } else if ((result = /^(rgb|rgba)\\((.+)\\)/.exec(color)) !== null) {\n    return '#' + result[2].split(',').map((part, index) => {\n      part = part.trim()\n      part = index === 3 ? Math.floor(parseFloat(part) * 255) : parseInt(part, 10)\n      part = part.toString(16)\n      if (part.length === 1) {\n        part = '0' + part\n      }\n      return part\n    }).join('')\n  } else {\n    return '#00000000'\n  }\n}\n\nconst splitLineToCamelCase = (str) => str.split('-').map((part, index) => {\n  if (index === 0) {\n    return part\n  }\n  return part[0].toUpperCase() + part.slice(1)\n}).join('')\n\nmodule.exports = {\n  hex,\n  splitLineToCamelCase\n}\n","// const {splitLineToCamelCase} = require('./utils')\nimport Block from 'widget-ui';\nimport { splitLineToCamelCase } from './utils'\n\nclass Element extends Block {\n  constructor(prop) {\n    super(prop.style)\n    this.name = prop.name\n    this.attributes = prop.attributes\n  }\n}\n\n\nexport default class Widget {\n  constructor(xom, style) {\n    this.xom = xom\n    this.style = style\n\n    this.inheritProps = ['fontSize', 'lineHeight', 'textAlign', 'verticalAlign', 'color']\n  }\n\n  init() {\n    this.container = this.create(this.xom)\n    this.container.layout()\n\n    this.inheritStyle(this.container)\n    return this.container\n  }\n\n  // 继承父节点的样式\n  inheritStyle(node) {\n    const parent = node.parent || null\n    const children = node.children || {}\n    const computedStyle = node.computedStyle\n\n    if (parent) {\n      this.inheritProps.forEach(prop => {\n        computedStyle[prop] = computedStyle[prop] || parent.computedStyle[prop]\n      })\n    }\n\n    Object.values(children).forEach(child => {\n      this.inheritStyle(child)\n    })\n  }\n\n  create(node) {\n    let classNames = (node.attributes.class || '').split(' ')\n    classNames = classNames.map(item => splitLineToCamelCase(item.trim()))\n    const style = {}\n    classNames.forEach(item => {\n      Object.assign(style, this.style[item] || {})\n    })\n\n    const args = {name: node.name, style}\n\n    const attrs = Object.keys(node.attributes)\n    const attributes = {}\n    for (const attr of attrs) {\n      const value = node.attributes[attr]\n      const CamelAttr = splitLineToCamelCase(attr)\n\n      if (value === '' || value === 'true') {\n        attributes[CamelAttr] = true\n      } else if (value === 'false') {\n        attributes[CamelAttr] = false\n      } else {\n        attributes[CamelAttr] = value\n      }\n    }\n    attributes.text = node.content\n    args.attributes = attributes\n    const element = new Element(args)\n    node.children.forEach(childNode => {\n      const childElement = this.create(childNode)\n      element.add(childElement)\n    })\n    return element\n  }\n}\n\n\n","\r\n/**\r\n * Module dependencies.\r\n */\r\n\r\n\r\n/**\r\n * Expose `parse`.\r\n */\r\n\r\n\r\n/**\r\n * Parse the given string of `xml`.\r\n *\r\n * @param {String} xml\r\n * @return {Object}\r\n * @api public\r\n */\r\n\r\nfunction parse(xml) {\r\n  xml = xml.trim()\r\n\r\n  // strip comments\r\n  xml = xml.replace(/<!--[\\s\\S]*?-->/g, '')\r\n\r\n  return document()\r\n\r\n  /**\r\n   * XML document.\r\n   */\r\n\r\n  function document() {\r\n    return {\r\n      declaration: declaration(),\r\n      root: tag()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Declaration.\r\n   */\r\n\r\n  function declaration() {\r\n    const m = match(/^<\\?xml\\s*/)\r\n    if (!m) return\r\n\r\n    // tag\r\n    const node = {\r\n      attributes: {}\r\n    }\r\n\r\n    // attributes\r\n    while (!(eos() || is('?>'))) {\r\n      const attr = attribute()\r\n      if (!attr) return node\r\n      node.attributes[attr.name] = attr.value\r\n    }\r\n\r\n    match(/\\?>\\s*/)\r\n\r\n    return node\r\n  }\r\n\r\n  /**\r\n   * Tag.\r\n   */\r\n\r\n  function tag() {\r\n    const m = match(/^<([\\w-:.]+)\\s*/)\r\n    if (!m) return\r\n\r\n    // name\r\n    const node = {\r\n      name: m[1],\r\n      attributes: {},\r\n      children: []\r\n    }\r\n\r\n    // attributes\r\n    while (!(eos() || is('>') || is('?>') || is('/>'))) {\r\n      const attr = attribute()\r\n      if (!attr) return node\r\n      node.attributes[attr.name] = attr.value\r\n    }\r\n\r\n    // self closing tag\r\n    if (match(/^\\s*\\/>\\s*/)) {\r\n      return node\r\n    }\r\n\r\n    match(/\\??>\\s*/)\r\n\r\n    // content\r\n    node.content = content()\r\n\r\n    // children\r\n    let child\r\n    while (child = tag()) {\r\n      node.children.push(child)\r\n    }\r\n\r\n    // closing\r\n    match(/^<\\/[\\w-:.]+>\\s*/)\r\n\r\n    return node\r\n  }\r\n\r\n  /**\r\n   * Text content.\r\n   */\r\n\r\n  function content() {\r\n    const m = match(/^([^<]*)/)\r\n    if (m) return m[1]\r\n    return ''\r\n  }\r\n\r\n  /**\r\n   * Attribute.\r\n   */\r\n\r\n  function attribute() {\r\n    const m = match(/([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/)\r\n    if (!m) return\r\n    return {name: m[1], value: strip(m[2])}\r\n  }\r\n\r\n  /**\r\n   * Strip quotes from `val`.\r\n   */\r\n\r\n  function strip(val) {\r\n    return val.replace(/^['\"]|['\"]$/g, '')\r\n  }\r\n\r\n  /**\r\n   * Match `re` and advance the string.\r\n   */\r\n\r\n  function match(re) {\r\n    const m = xml.match(re)\r\n    if (!m) return\r\n    xml = xml.slice(m[0].length)\r\n    return m\r\n  }\r\n\r\n  /**\r\n   * End-of-source.\r\n   */\r\n\r\n  function eos() {\r\n    return xml.length == 0\r\n  }\r\n\r\n  /**\r\n   * Check for `prefix`.\r\n   */\r\n\r\n  function is(prefix) {\r\n    return xml.indexOf(prefix) == 0\r\n  }\r\n}\r\n\r\nmodule.exports = parse\r\n","\nimport { banner, news } from '@/services/common'\nimport { Dispatch } from 'redux'\nimport { cError } from '@/utils'\n\nexport const GET_HOME_BANNER = 'common/GET_HOME_BANNER'\nexport const GET_NEWS = 'common/GET_NEWS'\nexport const UPDATE_CLASSROOMS = 'common/UPDATE_CLASSROOMS'\n\nexport const getBanner = () => async (dispatch: Dispatch) => {\n  const [error, res] = await cError(banner())\n  console.log(res)\n  if (!error) {\n    dispatch({\n      type: GET_HOME_BANNER,\n      data: res.data\n    })\n  }\n  return res\n}\n\nexport const getNews = (data: Parameters<typeof news>[0]): any => async (dispatch: Dispatch) => {\n  const [err, res] = await cError(news(data))\n  if (!err) {\n    dispatch({\n      type: GET_NEWS,\n      data: res.data,\n      page: data.page\n    })\n  }\n  return res\n}\n\nexport const updateClassrooms = (list) => ({\n  type: UPDATE_CLASSROOMS,\n  data: list,\n})\n","export const START_LOADING = 'global/START_LOADING'\nexport const STOP_LOADING = 'global/STOP_LOADING'\n\nexport const startLoading = () => ({\n  type: START_LOADING\n})\n\n\nexport const stopLoading = () => ({\n  type: STOP_LOADING\n})\n","import Taro from '@tarojs/taro'\nimport { withRequest } from '@/utils/request'\nimport { APIS } from '@/services2'\nimport {\n  userInfo,\n  // wxLogin,\n  exams,\n  grades,\n  logout as logoutReq\n} from '@/services/user'\nimport { Dispatch } from 'redux'\nimport { startLoading, stopLoading } from './global'\nimport { UserState } from '../reducers/user'\n\nexport const UPDATE_USERINFO = 'user/UPDATE_USERINFO'\nexport const LOGOUT = 'user/LOGOUT'\nexport const GET_EXAMS = 'user/GET_EXAMS'\nexport const GET_GRADES = 'user/GET_GRADES'\nexport const SET_CURRENT_TERM = 'user/SET_CURRENT_TERM'\nexport const UPDATE_USERINFO_PROMISE = 'user/UPDATE_USERINFO_PROMISE'\nexport const SET_UNREAD_COUNT = 'user/SET_UNREAD_COUNT'\nexport const UPDATE_CONFIG = 'user/UPDATE_CONFIG'\n\nexport const setCurrentTerm = (term: number) => ({\n  type: SET_CURRENT_TERM,\n  data: term\n})\n\n// 检查session_key是否失效\nconst checkSession = () => {\n  return new Promise(resolve => {\n    Taro.checkSession({\n      success() {\n        resolve(true)\n      },\n      fail() {\n        resolve(false)\n      }\n    })\n  })\n}\n\n// 登录处理\nconst login = () =>\n  new Promise((resolve, reject) => {\n    Taro.login({\n      success: async loginRes => {\n        const [err] = await withRequest(APIS.UserApi.apiUserWxAuthPost)({\n          code: loginRes.code\n        })\n        if (!err) {\n          resolve('')\n          return\n        }\n        reject(new Error('登录失败！' + loginRes.errMsg || err.message))\n      },\n      fail: () => {\n        reject(new Error('登录失败！'))\n      }\n    })\n  })\n\n// 获取用户信息处理\n// const getUserInfo = (cb) => {\n//   // if (this.globalData.userInfo) {\n//   //   return Promise.resolve(this.globalData.userInfo)\n//   // }\n//   return new Promise((resolve, reject) => {\n//     Taro.getUserInfo({\n//       withCredentials: true,\n//       success(res) {\n//         resolve(res)\n//       },\n//       fail(e) {\n//         reject(e)\n//       }\n//     })\n//   })\n// }\n\n// export const setLoading = createAction(SET_LOADING, loading => loading)\n\nexport const initHandler = async (dispatch: Dispatch) => {\n  dispatch(startLoading())\n  try {\n    // 检查微信登录 session\n    let [err, res] = await withRequest(APIS.UserApi.apiUserGet)({})\n    const session = await checkSession()\n\n    // 未登录\n    if (err || !session) {\n      await login()\n      ;[, res] = await withRequest(APIS.UserApi.apiUserGet)({})\n    }\n\n    const data: any = {\n      // 判断是否有用户名\n      isWechatLogin: !!res?.userInfo?.nickName\n    }\n\n    const [configErr, configRes] = await withRequest(\n      APIS.ConfigApi.apiConfigGet\n    )({ key: 'global' })\n\n    if (!configErr && configRes) {\n      dispatch({\n        type: UPDATE_CONFIG,\n        data: { global: configRes }\n      })\n    }\n\n    if (data.isWechatLogin) {\n      data.userInfo = res?.userInfo\n      dispatch({\n        type: UPDATE_USERINFO,\n        data\n      })\n\n      // 获取学生信息 异步\n      userInfo().then(studentInfoRes => {\n        const studentInfo = studentInfoRes.data.studentInfo || {}\n        dispatch({\n          type: UPDATE_USERINFO,\n          data: {\n            isLogin: !!(\n              studentInfoRes.data.isLogin &&\n              studentInfo &&\n              studentInfo.username\n            ),\n            studentInfo\n          }\n        })\n      })\n    }\n\n    dispatch(stopLoading())\n  } catch (e) {\n    dispatch(stopLoading())\n    return Promise.resolve()\n  }\n}\n\nexport const updateUserInfo = (data: Partial<UserState>) => async (\n  dispatch: Dispatch\n) => {\n  dispatch({\n    type: UPDATE_USERINFO,\n    data\n  })\n}\n\nexport const init = () => async (dispatch: Dispatch) => {\n  const getUserInfoPromise = initHandler(dispatch)\n  dispatch({\n    type: UPDATE_USERINFO_PROMISE,\n    data: getUserInfoPromise\n  })\n  await getUserInfoPromise\n}\n\nexport const logout = () => async (dispatch: Dispatch) => {\n  await logoutReq()\n  dispatch({\n    type: LOGOUT\n  })\n}\n\nexport const getExams = (...data: Parameters<typeof exams>) => async (\n  dispatch: Dispatch\n) => {\n  const res = await exams(...data)\n  const list = res?.data || []\n\n  dispatch({\n    type: GET_EXAMS,\n    data: list,\n    page: data[0] || 1\n  })\n\n  return res\n}\n\nexport const getGrades = (...data: Parameters<typeof grades>) => async (\n  dispatch: Dispatch\n) => {\n  const res = await grades(...data)\n\n  dispatch({\n    type: GET_GRADES,\n    data: res.data\n  })\n\n  return res\n}\n\nlet unReadCounterTimer: number\n/**\n * 停止轮询\n */\nexport const stopGetUnreadCount = () => {\n  clearInterval(unReadCounterTimer)\n}\n\n/**\n * 轮询获取未读消息数\n * @returns\n */\nexport const getUnreadCount = () => async (dispatch: Dispatch) => {\n  unReadCounterTimer && stopGetUnreadCount()\n  const handler = async () => {\n    const [err, res] = await withRequest(\n      APIS.MessageApi.apiMessageUnreadcountGet,\n      false\n    )()\n\n    if (err) {\n      return\n    }\n    dispatch({\n      type: SET_UNREAD_COUNT,\n      data: res?.unreadCount || 0\n    })\n  }\n\n  handler()\n  // 轮询 每半分钟拉取一次\n  unReadCounterTimer = setInterval(handler, 30 * 1000)\n}\n","import { AnyAction } from 'redux'\nimport { GET_HOME_BANNER , GET_NEWS, UPDATE_CLASSROOMS } from '../actions/common'\n\nexport interface CommonState {\n  banners: {\n    active: boolean\n    image: string\n    link: string\n    type: number\n    _id: string\n  }[],\n  news: any[],\n  classrooms: any[],\n}\n\nconst INITIAL_STATE: CommonState = {\n  banners: [],\n  news: [],\n  classrooms: []\n}\n\nexport default function common(state = INITIAL_STATE, action: AnyAction): CommonState {\n  switch (action.type) {\n    case GET_HOME_BANNER:\n      return {\n        ...state,\n        banners: action.data\n      }\n    case GET_NEWS:\n      return {\n        ...state,\n        news: action.page === 1 ? action.data : [...state.news, ...action.data]\n      }\n    case UPDATE_CLASSROOMS:\n      return {\n        ...state,\n        classrooms: action.data || []\n      }\n    default:\n      return state\n  }\n}\n","import { AnyAction } from 'redux'\nimport { START_LOADING, STOP_LOADING } from '../actions/global'\n\nexport interface GlobalState {\n  loading: boolean\n}\n\nconst INITIAL_STATE: GlobalState = {\n  loading: true,\n}\n\nexport default function global(state = INITIAL_STATE, action: AnyAction): GlobalState {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case STOP_LOADING:\n      return {\n        ...state,\n        loading: false\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport user from './user'\nimport common from './common'\nimport global from './global'\n\nexport const reducerMap = {\n  user,\n  common,\n  global,\n}\n\nexport type RootReducerMap = typeof reducerMap\nexport type RootReducerMapKey = keyof RootReducerMap\nexport default combineReducers(reducerMap)\n","import Taro from '@tarojs/taro'\nimport { AnyAction } from 'redux'\nimport {\n  UPDATE_USERINFO,\n  LOGOUT,\n  GET_EXAMS,\n  GET_GRADES,\n  SET_CURRENT_TERM,\n  UPDATE_USERINFO_PROMISE,\n  SET_UNREAD_COUNT,\n  UPDATE_CONFIG\n} from '../actions/user'\n\nconst studentInfo = JSON.parse(Taro.getStorageSync('studentInfo') || '{}')\n\nlet currentTerm = 0\nif (studentInfo.username) {\n  console.log(studentInfo.username, 'studentInfo.username')\n  const courseData = Taro.getStorageSync(`course:${studentInfo.username}`)\n  currentTerm = courseData.term\n}\n\nexport interface UserState {\n  isWechatLogin: boolean\n  isLogin: boolean\n  getUserInfoPromise?: Promise<any>\n  studentInfo: {\n    name: string\n    username: string\n  }\n  exams: {\n    course: string\n    date: string\n    dateExtend: string\n    ending: number\n    info: string\n    position: string\n    time: string\n  }[]\n  grades: {\n    grades: {\n      courseAttribute: string\n      courseCharacter: string\n      courseGroup: string\n      courseId: string\n      courseIndex: string\n      courseMount: string\n      courseName: string\n      courseRemark: string\n      credit: string\n      gpa: string\n      grade: string\n      passFlag: string\n      term: string\n      year: string\n    }[]\n    AVERAGE_GPA?: string\n    AVERAGE_GRADE?: string\n    OBLIGATORY_AVERAGE_GPA?: string\n    gradeTerm?: string\n  }\n  currentTerm: number\n  userInfo: {\n    _id?: string\n    nickName?: string\n    customName?: string\n    customAvatarUrl?: {\n      checkCode?: number\n      key?: string\n      status?: number\n    }\n    gender?: number\n    avatarUrl?: string\n    language?: string\n    city?: string\n    province?: string\n    country?: string\n  }\n  unreadCount: number\n  config: {\n    [key: string]: {\n      key: string\n      config: { [key: string]: any }\n    }\n  }\n}\n\nconst INITIAL_STATE: UserState = {\n  isWechatLogin: false,\n  getUserInfoPromise: undefined,\n  isLogin: false,\n  studentInfo: {\n    name: '',\n    username: '',\n    ...studentInfo\n  },\n  exams: [],\n  grades: {\n    grades: []\n  },\n  currentTerm,\n  userInfo: {\n    avatarUrl: '',\n    city: '',\n    country: '',\n    gender: 0,\n    language: 'zh_CN',\n    nickName: '',\n    province: '',\n    customAvatarUrl: {\n      checkCode: 1,\n      key: '',\n      status: 0\n    },\n    customName: ''\n  },\n  unreadCount: 0,\n  config: {}\n}\n\nexport default function user(\n  state = INITIAL_STATE,\n  action: AnyAction\n): UserState {\n  switch (action.type) {\n    case UPDATE_USERINFO:\n      Taro.setStorage({\n        key: 'studentInfo',\n        data: JSON.stringify(action.data.studentInfo || {})\n      })\n      return {\n        ...state,\n        ...action.data\n      }\n    case UPDATE_USERINFO_PROMISE:\n      return {\n        ...state,\n        getUserInfoPromise: action.data\n      }\n\n    case UPDATE_CONFIG:\n      return {\n        ...state,\n        config: {\n          ...state.config,\n          ...action.data\n        }\n      }\n\n    case SET_UNREAD_COUNT:\n      return {\n        ...state,\n        unreadCount: action.data\n      }\n    case LOGOUT:\n      Taro.removeStorageSync('studentInfo')\n      return {\n        ...state,\n        isLogin: false,\n        studentInfo: {\n          name: '',\n          username: ''\n        }\n      }\n    case GET_EXAMS:\n      return {\n        ...state,\n        exams:\n          action.page === 1 ? action.data : [...state.exams, ...action.data]\n      }\n    case GET_GRADES:\n      return {\n        ...state,\n        grades: action.data\n      }\n    case SET_CURRENT_TERM:\n      return {\n        ...state,\n        currentTerm: action.data\n      }\n    default:\n      return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nconst middlewares = [thunk as ThunkMiddleware<any, any>]\n\nif (process.env.NODE_ENV === 'development' && process.env.TARO_ENV !== 'quickapp') {\n  middlewares.push(require('redux-logger').createLogger())\n}\n\nexport default function configStore () {\n  if (process.env.NODE_ENV === 'development' && process.env.TARO_ENV !== 'quickapp') {\n    return createStore(\n      rootReducer,\n      applyMiddleware(\n        thunk as ThunkMiddleware<any, any>,\n        require('redux-logger').createLogger()\n      )\n    )\n  }\n  return createStore(\n    rootReducer,\n    applyMiddleware(thunk as ThunkMiddleware<any, any>)\n  )\n}\n\nexport const store = configStore()\n","import request from '@/utils/request'\n\n// 微信登录\nexport const banner = () => request({\n  url: '/api/banner',\n})\n\n// 获取教务公告\nexport const news = (data: { page: number }) => request({\n  url: '/api/news',\n  data,\n})\n","import request from '@/utils/request'\n\n\n// 获取拼多多商品\nexport const pddSearch = (data = {} as any) => request({\n  url: '/api/pdd/search',\n  data,\n})\n\n// 获取拼多多商品\nexport const getKeywords = () => request({\n  url: '/api/pdd/keywords',\n})\n\nexport const generateGoods = (data = {} as any) => request({\n  url: '/api/pdd/generateGoods',\n  data\n})\n\n\nexport const getChannel = () => request({\n  url: '/api/pdd/channel',\n})\n","import request from '@/utils/request'\n\n// 微信登录\nexport const wxLogin = (data: { code: string }) =>\n  request({\n    url: '/api/user/wx-login',\n    interceptTokenError: false,\n    data\n  })\n\nexport const login = (data: {\n  username: string\n  password: string\n  captcha?: string\n}) =>\n  request({\n    url: '/api/hrbust/login',\n    data\n  })\n\n// 登出\nexport const logout = () =>\n  request({\n    url: '/api/hrbust/logout'\n  })\n\n// 获取用户信息\nexport const userInfo = () =>\n  request({\n    url: '/api/user/userinfo'\n  })\n\n// 获取用户考试信息\nexport const exams = (page = 1, captcha = '') =>\n  request({\n    url: '/api/hrbust/exam',\n    data: {\n      page,\n      captcha\n    }\n  })\n\nexport const grades = (year: number, term: number, captcha?: string) =>\n  request({\n    url: '/api/hrbust/grade',\n    data: {\n      year,\n      term,\n      captcha\n    }\n  })\n\nexport const getCaptcha = () =>\n  request({\n    url: '/api/hrbust/captcha'\n  })\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * @description apiCommentBrickIdGet参数\n  * @property `id` 请求参数 id\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiCommentBrickIdGet {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * @description apiCommentCommentIdGet参数\n  * @property `id` 请求参数 id\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiCommentCommentIdGet {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * @description apiCommentIdDelete参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiCommentIdDelete {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiCommentLikeIdPut参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiCommentLikeIdPut {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiCommentMateIdGet参数\n  * @property `id` 请求参数 id\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiCommentMateIdGet {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * request body\n  */\nexport type ParamsBodyapiCommentPost = models.Data\n/**\n  * @description apiCommentResourceIdGet参数\n  * @property `id` 请求参数 id\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiCommentResourceIdGet {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n\nexport class CommentApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 获取表白墙评论列表\n   * @summary 获取表白墙评论列表\n   * @param params ParamsapiCommentBrickIdGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2001\n   */\n  public apiCommentBrickIdGet = (\n    params: ParamsapiCommentBrickIdGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2001>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/comment/brick/${id}`\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取回复评论列表\n   * @summary 获取回复评论列表\n   * @param params ParamsapiCommentCommentIdGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2001\n   */\n  public apiCommentCommentIdGet = (\n    params: ParamsapiCommentCommentIdGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2001>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/comment/comment/${id}`\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 删除 评论\n   * @summary 删除 评论\n   * @param params ParamsapiCommentIdDelete\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiCommentIdDelete = (\n    params: ParamsapiCommentIdDelete,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/comment/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'DELETE',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 点赞/取消 评论\n   * @summary 点赞/取消 评论\n   * @param params ParamsapiCommentLikeIdPut\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiCommentLikeIdPut = (\n    params: ParamsapiCommentLikeIdPut,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/comment/like/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'PUT',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取卖舍友评论列表\n   * @summary 获取卖舍友评论列表\n   * @param params ParamsapiCommentMateIdGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2001\n   */\n  public apiCommentMateIdGet = (\n    params: ParamsapiCommentMateIdGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2001>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/comment/mate/${id}`\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 新建评论\n   * @summary 新建评论\n   \n   * @param data: ParamsBodyapiCommentPost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiCommentPost = (\n    \n    data: ParamsBodyapiCommentPost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const url = this.$basePath + '/api/comment'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取资源评论列表\n   * @summary 获取资源评论列表\n   * @param params ParamsapiCommentResourceIdGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2001\n   */\n  public apiCommentResourceIdGet = (\n    params: ParamsapiCommentResourceIdGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2001>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/comment/resource/${id}`\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new CommentApi()","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * request body\n  */\nexport type ParamsBodyapiConfigGet = models.Data1\n\nexport class ConfigApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 获取配置\n   * @summary 获取配置\n   \n   * @param data: ParamsBodyapiConfigGet// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse2002\n   */\n  public apiConfigGet = (\n    \n    data: ParamsBodyapiConfigGet,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2002>  => {\n    const url = this.$basePath + '/api/config'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new ConfigApi()","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * request body\n  */\nexport type ParamsBodyapiMediaComparefacePost = models.Data4\n/**\n  * @description apiMediaPost参数\n  * @property `file` file content\n  */\nexport interface ParamsapiMediaPost {\n  // formParams\n  /**\n   * file content\n   */\n  file: any;\n}\n/**\n  * request body\n  */\nexport type ParamsBodyapiMediaPost = models.Data2\n/**\n  * request body\n  */\nexport type ParamsBodyapiMediaUrlPost = models.Data3\n\nexport class MediaApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 确认开发者签名\n   * @summary 确认开发者签名\n   \n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiLegalcheckGet = (\n    \n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const url = this.$basePath + '/api/legalcheck'\n    const p: any = {}\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 微信审核回调\n   * @summary 微信审核回调\n   \n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiLegalcheckPost = (\n    \n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const url = this.$basePath + '/api/legalcheck'\n    const p: any = {}\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 图片对比，情侣脸识别\n   * @summary 图片对比，情侣脸识别\n   \n   * @param data: ParamsBodyapiMediaComparefacePost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse2004\n   */\n  public apiMediaComparefacePost = (\n    \n    data: ParamsBodyapiMediaComparefacePost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2004>  => {\n    const url = this.$basePath + '/api/media/compareface'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 上传文件\n   * @summary 上传文件\n   * @param params ParamsapiMediaPost\n   * @param data: ParamsBodyapiMediaPost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse2003\n   */\n  public apiMediaPost = (\n    params: ParamsapiMediaPost,\n    data: ParamsBodyapiMediaPost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2003>  => {\n    const url = this.$basePath + '/api/media'\n    const p: any = {}\n    p.form = new FormData()\n    // 上传文件\n    opt = {\n      ...opt,\n      headers: {\n        ...(opt && opt.headers),\n        'Content-Type': 'multipart/form-data'\n      }\n    }\n    // p.form = new FormData();\n    if ('file' in params) p.form.append('file', params.file)\n    ajax.check(params.file, 'file')\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 通过抓取 url 上传文件\n   * @summary 通过抓取 url 上传文件\n   \n   * @param data: ParamsBodyapiMediaUrlPost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse2003\n   */\n  public apiMediaUrlPost = (\n    \n    data: ParamsBodyapiMediaUrlPost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2003>  => {\n    const url = this.$basePath + '/api/media/url'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new MediaApi()","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * @description apiMessageListGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiMessageListGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n\nexport class MessageApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 获取消息列表\n   * @summary 获取消息列表\n   * @param params ParamsapiMessageListGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2005\n   */\n  public apiMessageListGet = (\n    params: ParamsapiMessageListGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2005>  => {\n    const url = this.$basePath + '/api/message/list'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取用户未读消息数量\n   * @summary 获取用户未读消息数量\n   \n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2006\n   */\n  public apiMessageUnreadcountGet = (\n    \n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2006>  => {\n    const url = this.$basePath + '/api/message/unreadcount'\n    const p: any = {}\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new MessageApi()","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * @description apiResourceIdGet参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiResourceIdGet {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiResourceLikeIdPut参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiResourceLikeIdPut {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiResourceListGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[tag]` 标签\n  */\nexport interface ParamsapiResourceListGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 标签\n   */\n  tag?: string;\n}\n/**\n  * @description apiResourceListHotGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiResourceListHotGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * @description apiResourceListLikeGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[id]` 请求参数 id\n  */\nexport interface ParamsapiResourceListLikeGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 请求参数 id\n   */\n  id?: string;\n}\n/**\n  * @description apiResourceListTopGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[tag]` 标签\n  */\nexport interface ParamsapiResourceListTopGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 标签\n   */\n  tag?: string;\n}\n/**\n  * @description apiResourceSearchGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[keyword]` 关键字\n  */\nexport interface ParamsapiResourceSearchGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 关键字\n   */\n  keyword?: string;\n}\n\nexport class ResourceApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 获取详情\n   * @summary 获取详情\n   * @param params ParamsapiResourceIdGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2008\n   */\n  public apiResourceIdGet = (\n    params: ParamsapiResourceIdGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2008>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/resource/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 点赞/取消 资源\n   * @summary 点赞/取消 资源\n   * @param params ParamsapiResourceLikeIdPut\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiResourceLikeIdPut = (\n    params: ParamsapiResourceLikeIdPut,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/resource/like/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'PUT',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取资源列表\n   * @summary 获取资源列表\n   * @param params ParamsapiResourceListGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2007\n   */\n  public apiResourceListGet = (\n    params: ParamsapiResourceListGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2007>  => {\n    const url = this.$basePath + '/api/resource/list'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('tag' in params) p.query.tag = params.tag\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取热门列表\n   * @summary 获取热门列表\n   * @param params ParamsapiResourceListHotGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2007\n   */\n  public apiResourceListHotGet = (\n    params: ParamsapiResourceListHotGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2007>  => {\n    const url = this.$basePath + '/api/resource/list/hot'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取用户点赞的表白墙列表\n   * @summary 获取用户点赞的表白墙列表\n   * @param params ParamsapiResourceListLikeGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2007\n   */\n  public apiResourceListLikeGet = (\n    params: ParamsapiResourceListLikeGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2007>  => {\n    const url = this.$basePath + '/api/resource/list/like'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('id' in params) p.query.id = params.id\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取资源列表\n   * @summary 获取资源列表\n   * @param params ParamsapiResourceListTopGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2007\n   */\n  public apiResourceListTopGet = (\n    params: ParamsapiResourceListTopGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2007>  => {\n    const url = this.$basePath + '/api/resource/list/top'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('tag' in params) p.query.tag = params.tag\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 根据关键字模糊搜索\n   * @summary 根据关键字模糊搜索\n   * @param params ParamsapiResourceSearchGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2007\n   */\n  public apiResourceSearchGet = (\n    params: ParamsapiResourceSearchGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2007>  => {\n    const url = this.$basePath + '/api/resource/search'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('keyword' in params) p.query.keyword = params.keyword\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new ResourceApi()","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * @description apiSaleWallIdDelete参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiSaleWallIdDelete {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiSaleWallIdGet参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiSaleWallIdGet {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiSaleWallLikeIdPut参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiSaleWallLikeIdPut {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiSaleWallListGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiSaleWallListGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * @description apiSaleWallListHotGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiSaleWallListHotGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * @description apiSaleWallListLikeGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[id]` 请求参数 id\n  */\nexport interface ParamsapiSaleWallListLikeGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 请求参数 id\n   */\n  id?: string;\n}\n/**\n  * @description apiSaleWallListPublishGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[id]` 请求参数 id\n  */\nexport interface ParamsapiSaleWallListPublishGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 请求参数 id\n   */\n  id?: string;\n}\n/**\n  * request body\n  */\nexport type ParamsBodyapiSaleWallPost = models.Data5\n/**\n  * @description apiSaleWallSearchGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[keyword]` 关键字\n  */\nexport interface ParamsapiSaleWallSearchGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 关键字\n   */\n  keyword?: string;\n}\n\nexport class SaleWallApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 删除 卖舍友\n   * @summary 删除 卖舍友\n   * @param params ParamsapiSaleWallIdDelete\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiSaleWallIdDelete = (\n    params: ParamsapiSaleWallIdDelete,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/sale-wall/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'DELETE',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取卖舍友详情\n   * @summary 获取卖舍友详情\n   * @param params ParamsapiSaleWallIdGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20010\n   */\n  public apiSaleWallIdGet = (\n    params: ParamsapiSaleWallIdGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20010>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/sale-wall/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 点赞/取消 卖舍友\n   * @summary 点赞/取消 卖舍友\n   * @param params ParamsapiSaleWallLikeIdPut\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiSaleWallLikeIdPut = (\n    params: ParamsapiSaleWallLikeIdPut,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/sale-wall/like/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'PUT',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取卖舍友列表\n   * @summary 获取卖舍友列表\n   * @param params ParamsapiSaleWallListGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2009\n   */\n  public apiSaleWallListGet = (\n    params: ParamsapiSaleWallListGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2009>  => {\n    const url = this.$basePath + '/api/sale-wall/list'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取热门列表\n   * @summary 获取热门列表\n   * @param params ParamsapiSaleWallListHotGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2009\n   */\n  public apiSaleWallListHotGet = (\n    params: ParamsapiSaleWallListHotGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2009>  => {\n    const url = this.$basePath + '/api/sale-wall/list/hot'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取用户点赞的卖舍友列表\n   * @summary 获取用户点赞的卖舍友列表\n   * @param params ParamsapiSaleWallListLikeGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2009\n   */\n  public apiSaleWallListLikeGet = (\n    params: ParamsapiSaleWallListLikeGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2009>  => {\n    const url = this.$basePath + '/api/sale-wall/list/like'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('id' in params) p.query.id = params.id\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取用户发布的卖舍友列表\n   * @summary 获取用户发布的卖舍友列表\n   * @param params ParamsapiSaleWallListPublishGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2009\n   */\n  public apiSaleWallListPublishGet = (\n    params: ParamsapiSaleWallListPublishGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2009>  => {\n    const url = this.$basePath + '/api/sale-wall/list/publish'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('id' in params) p.query.id = params.id\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 新建卖舍友\n   * @summary 新建卖舍友\n   \n   * @param data: ParamsBodyapiSaleWallPost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse20011\n   */\n  public apiSaleWallPost = (\n    \n    data: ParamsBodyapiSaleWallPost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20011>  => {\n    const url = this.$basePath + '/api/sale-wall'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 根据关键字模糊搜索\n   * @summary 根据关键字模糊搜索\n   * @param params ParamsapiSaleWallSearchGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse2009\n   */\n  public apiSaleWallSearchGet = (\n    params: ParamsapiSaleWallSearchGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse2009>  => {\n    const url = this.$basePath + '/api/sale-wall/search'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('keyword' in params) p.query.keyword = params.keyword\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new SaleWallApi()","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * @description apiUserGet参数\n  * @property `[id]` 请求参数 id\n  */\nexport interface ParamsapiUserGet {\n  // queryParams\n  /**\n   * 请求参数 id\n   */\n  id?: string;\n}\n/**\n  * request body\n  */\nexport type ParamsBodyapiUserPut = models.Data6\n/**\n  * request body\n  */\nexport type ParamsBodyapiUserWxAuthPost = models.Data7\n/**\n  * request body\n  */\nexport type ParamsBodyapiUserWxLoginPost = models.Data8\n\nexport class UserApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 获取用户信息\n   * @summary 获取用户信息\n   * @param params ParamsapiUserGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20012\n   */\n  public apiUserGet = (\n    params: ParamsapiUserGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20012>  => {\n    const url = this.$basePath + '/api/user'\n    const p: any = {}\n    p.query = {}\n    if ('id' in params) p.query.id = params.id\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 更新用户信息\n   * @summary 更新用户信息\n   \n   * @param data: ParamsBodyapiUserPut// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse20012\n   */\n  public apiUserPut = (\n    \n    data: ParamsBodyapiUserPut,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20012>  => {\n    const url = this.$basePath + '/api/user'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'PUT',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 微信鉴权接口\n   * @summary 微信鉴权接口\n   \n   * @param data: ParamsBodyapiUserWxAuthPost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse20012\n   */\n  public apiUserWxAuthPost = (\n    \n    data: ParamsBodyapiUserWxAuthPost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20012>  => {\n    const url = this.$basePath + '/api/user/wx/auth'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 微信登录接口\n   * @summary 微信登录接口\n   \n   * @param data: ParamsBodyapiUserWxLoginPost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse20012\n   */\n  public apiUserWxLoginPost = (\n    \n    data: ParamsBodyapiUserWxLoginPost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20012>  => {\n    const url = this.$basePath + '/api/user/wx/login'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new UserApi()","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'\nimport * as models from '../model/models'\n\n/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */\n\n/**\n  * @description apiWallIdDelete参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiWallIdDelete {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiWallIdGet参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiWallIdGet {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiWallLikeIdPut参数\n  * @property `id` 请求参数 id\n  */\nexport interface ParamsapiWallLikeIdPut {\n  // pathParams\n  /**\n   * 请求参数 id\n   */\n  id: string;\n}\n/**\n  * @description apiWallListGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiWallListGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * @description apiWallListHotGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  */\nexport interface ParamsapiWallListHotGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n}\n/**\n  * @description apiWallListLikeGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[id]` 请求参数 id\n  */\nexport interface ParamsapiWallListLikeGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 请求参数 id\n   */\n  id?: string;\n}\n/**\n  * @description apiWallListPublishGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[id]` 请求参数 id\n  */\nexport interface ParamsapiWallListPublishGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 请求参数 id\n   */\n  id?: string;\n}\n/**\n  * request body\n  */\nexport type ParamsBodyapiWallPost = models.Data9\n/**\n  * @description apiWallSearchGet参数\n  * @property `[pageNum]` 分页页码\n  * @property `[pageSize]` 每页数量\n  * @property `[keyword]` 关键字\n  */\nexport interface ParamsapiWallSearchGet {\n  // queryParams\n  /**\n   * 分页页码\n   */\n  pageNum?: string;\n  /**\n   * 每页数量\n   */\n  pageSize?: string;\n  /**\n   * 关键字\n   */\n  keyword?: string;\n}\n\nexport class WallApi {\n  protected $basePath = ''.replace(/\\/$/, '')\n\n  public constructor(basePath?: string) {\n    if (basePath !== undefined) {\n      this.$basePath = basePath.replace(/\\/$/, '')\n    }\n  }\n\n  /**\n   * 删除 表白墙\n   * @summary 删除 表白墙\n   * @param params ParamsapiWallIdDelete\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiWallIdDelete = (\n    params: ParamsapiWallIdDelete,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/wall/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'DELETE',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取表白墙详情\n   * @summary 获取表白墙详情\n   * @param params ParamsapiWallIdGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20014\n   */\n  public apiWallIdGet = (\n    params: ParamsapiWallIdGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20014>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/wall/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 点赞/取消 表白墙\n   * @summary 点赞/取消 表白墙\n   * @param params ParamsapiWallLikeIdPut\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse200\n   */\n  public apiWallLikeIdPut = (\n    params: ParamsapiWallLikeIdPut,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse200>  => {\n    const {\n    id,\n} = params\n    const url = this.$basePath + `/api/wall/like/${id}`\n    const p: any = {}\n    ajax.check(params.id, 'id')\n    return ajax.ajax({\n      ...opt,\n      method: 'PUT',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取表白墙列表\n   * @summary 获取表白墙列表\n   * @param params ParamsapiWallListGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20013\n   */\n  public apiWallListGet = (\n    params: ParamsapiWallListGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20013>  => {\n    const url = this.$basePath + '/api/wall/list'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取热门列表\n   * @summary 获取热门列表\n   * @param params ParamsapiWallListHotGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20013\n   */\n  public apiWallListHotGet = (\n    params: ParamsapiWallListHotGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20013>  => {\n    const url = this.$basePath + '/api/wall/list/hot'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取用户点赞的表白墙列表\n   * @summary 获取用户点赞的表白墙列表\n   * @param params ParamsapiWallListLikeGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20013\n   */\n  public apiWallListLikeGet = (\n    params: ParamsapiWallListLikeGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20013>  => {\n    const url = this.$basePath + '/api/wall/list/like'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('id' in params) p.query.id = params.id\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 获取用户发布的表白墙列表\n   * @summary 获取用户发布的表白墙列表\n   * @param params ParamsapiWallListPublishGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20013\n   */\n  public apiWallListPublishGet = (\n    params: ParamsapiWallListPublishGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20013>  => {\n    const url = this.$basePath + '/api/wall/list/publish'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('id' in params) p.query.id = params.id\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 新建表白墙\n   * @summary 新建表白墙\n   \n   * @param data: ParamsBodyapiWallPost// request body\n   * @param opt ajax config\n   * @returns models.InlineResponse20011\n   */\n  public apiWallPost = (\n    \n    data: ParamsBodyapiWallPost,opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20011>  => {\n    const url = this.$basePath + '/api/wall'\n    const p: any = {}\n    p.data = data\n    return ajax.ajax({\n      ...opt,\n      method: 'POST',\n      url,\n      ...p\n    })\n  }\n  /**\n   * 根据关键字模糊搜索\n   * @summary 根据关键字模糊搜索\n   * @param params ParamsapiWallSearchGet\n   \n   * @param opt ajax config\n   * @returns models.InlineResponse20013\n   */\n  public apiWallSearchGet = (\n    params: ParamsapiWallSearchGet,\n    opt?: ExtraFetchParams\n  ) : AjaxPromise<models.InlineResponse20013>  => {\n    const url = this.$basePath + '/api/wall/search'\n    const p: any = {}\n    p.query = {}\n    if ('pageNum' in params) p.query.pageNum = params.pageNum\n    if ('pageSize' in params) p.query.pageSize = params.pageSize\n    if ('keyword' in params) p.query.keyword = params.keyword\n    return ajax.ajax({\n      ...opt,\n      method: 'GET',\n      url,\n      ...p\n    })\n  }\n}\n\nexport default new WallApi()","import CommentApi from './CommentApi'\nimport ConfigApi from './ConfigApi'\nimport MediaApi from './MediaApi'\nimport MessageApi from './MessageApi'\nimport ResourceApi from './ResourceApi'\nimport SaleWallApi from './SaleWallApi'\nimport UserApi from './UserApi'\nimport WallApi from './WallApi'\n\nexport * from './CommentApi'\nexport * from './ConfigApi'\nexport * from './MediaApi'\nexport * from './MessageApi'\nexport * from './ResourceApi'\nexport * from './SaleWallApi'\nexport * from './UserApi'\nexport * from './WallApi'\nexport const APIS = { CommentApi, ConfigApi, MediaApi, MessageApi, ResourceApi, SaleWallApi, UserApi, WallApi }\n","export * from './api/api'\nexport * from './model/models'","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse200 {\n  'code': InlineResponse200.CodeEnum;\n  'resultCode': InlineResponse200.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse200Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse200 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse2001 {\n  'code': InlineResponse2001.CodeEnum;\n  'resultCode': InlineResponse2001.ResultCodeEnum;\n  'message': string;\n  'result'?: Array<models.InlineResponse2001Result>;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2001 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse20010 {\n  'code': InlineResponse20010.CodeEnum;\n  'resultCode': InlineResponse20010.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse2009Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse20010 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse20011 {\n  'code': InlineResponse20011.CodeEnum;\n  'resultCode': InlineResponse20011.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse20011Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse20011 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse20012 {\n  'code': InlineResponse20012.CodeEnum;\n  'resultCode': InlineResponse20012.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse2001From;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse20012 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `result` \n  * @property `[error]` \n  */\nexport interface InlineResponse20013 {\n  'code': InlineResponse20013.CodeEnum;\n  'resultCode': InlineResponse20013.ResultCodeEnum;\n  'message': string;\n  'result': Array<models.InlineResponse20013Result>;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse20013 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse20014 {\n  'code': InlineResponse20014.CodeEnum;\n  'resultCode': InlineResponse20014.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse20013Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse20014 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `key` 图片 url\n  * @property `status` \n  * @property `[height]` 图片高度\n  * @property `[width]` 图片宽度\n  * @property `[type]` 图片类型\n  * @property `[bucket]` 图片 bucket\n  */\nexport interface InlineResponse2001FromUserInfoCustomAvatarUrl {\n  /**\n   * 图片 url\n   */\n  'key': string;\n  'status': InlineResponse2001FromUserInfoCustomAvatarUrl.StatusEnum;\n  /**\n   * 图片高度\n   */\n  'height'?: number;\n  /**\n   * 图片宽度\n   */\n  'width'?: number;\n  /**\n   * 图片类型\n   */\n  'type'?: string;\n  /**\n   * 图片 bucket\n   */\n  'bucket'?: string;\n}\n\nexport namespace InlineResponse2001FromUserInfoCustomAvatarUrl {\n  export enum StatusEnum {\n    _0 = '0' as any,\n    _1 = '1' as any,\n    _2 = '2' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse2002 {\n  'code': InlineResponse2002.CodeEnum;\n  'resultCode': InlineResponse2002.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse2002Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2002 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse2003 {\n  'code': InlineResponse2003.CodeEnum;\n  'resultCode': InlineResponse2003.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse2003Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2003 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `key` 图片 url\n  * @property `status` \n  * @property `[height]` 图片高度\n  * @property `[width]` 图片宽度\n  * @property `[type]` 图片类型\n  * @property `[bucket]` 图片 bucket\n  * @property `_id` 图片 id\n  */\nexport interface InlineResponse2003Result {\n  /**\n   * 图片 url\n   */\n  'key': string;\n  'status': InlineResponse2003Result.StatusEnum;\n  /**\n   * 图片高度\n   */\n  'height'?: number;\n  /**\n   * 图片宽度\n   */\n  'width'?: number;\n  /**\n   * 图片类型\n   */\n  'type'?: string;\n  /**\n   * 图片 bucket\n   */\n  'bucket'?: string;\n  /**\n   * 图片 id\n   */\n  '_id': string;\n}\n\nexport namespace InlineResponse2003Result {\n  export enum StatusEnum {\n    _0 = '0' as any,\n    _1 = '1' as any,\n    _2 = '2' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse2004 {\n  'code': InlineResponse2004.CodeEnum;\n  'resultCode': InlineResponse2004.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse2004Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2004 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `result` \n  * @property `[error]` \n  */\nexport interface InlineResponse2005 {\n  'code': InlineResponse2005.CodeEnum;\n  'resultCode': InlineResponse2005.ResultCodeEnum;\n  'message': string;\n  'result': Array<models.InlineResponse2005Result>;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2005 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `createdAt` 创建时间\n  * @property `updatedAt` 更新时间\n  * @property `_id` 消息 id\n  * @property `[to]` \n  * @property `[from]` \n  * @property `content` 内容\n  * @property `type` 消息类型\n  * @property `[ext]` \n  * @property `isRead` 是否已读\n  */\nexport interface InlineResponse2005Result {\n  /**\n   * 创建时间\n   */\n  'createdAt': number;\n  /**\n   * 更新时间\n   */\n  'updatedAt': number;\n  /**\n   * 消息 id\n   */\n  '_id': string;\n  'to'?: models.InlineResponse2001From;\n  'from'?: models.InlineResponse2001From;\n  /**\n   * 内容\n   */\n  'content': string;\n  /**\n   * 消息类型\n   */\n  'type': InlineResponse2005Result.TypeEnum;\n  'ext'?: models.InlineResponse2005Ext;\n  /**\n   * 是否已读\n   */\n  'isRead': boolean;\n}\n\nexport namespace InlineResponse2005Result {\n  export enum TypeEnum {\n  /**\n   * `BrickLike` 消息类型\n   */\n    BrickLike = 'BrickLike' as any,\n  /**\n   * `MateLike` 消息类型\n   */\n    MateLike = 'MateLike' as any,\n  /**\n   * `CommentLike` 消息类型\n   */\n    CommentLike = 'CommentLike' as any,\n  /**\n   * `Comment` 消息类型\n   */\n    Comment = 'Comment' as any,\n  /**\n   * `Hot` 消息类型\n   */\n    Hot = 'Hot' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse2006 {\n  'code': InlineResponse2006.CodeEnum;\n  'resultCode': InlineResponse2006.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse2006Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2006 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `result` \n  * @property `[error]` \n  */\nexport interface InlineResponse2007 {\n  'code': InlineResponse2007.CodeEnum;\n  'resultCode': InlineResponse2007.ResultCodeEnum;\n  'message': string;\n  'result': Array<models.InlineResponse2007Result>;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2007 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse2008 {\n  'code': InlineResponse2008.CodeEnum;\n  'resultCode': InlineResponse2008.ResultCodeEnum;\n  'message': string;\n  'result'?: models.InlineResponse2007Result;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2008 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `result` \n  * @property `[error]` \n  */\nexport interface InlineResponse2009 {\n  'code': InlineResponse2009.CodeEnum;\n  'resultCode': InlineResponse2009.ResultCodeEnum;\n  'message': string;\n  'result': Array<models.InlineResponse2009Result>;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse2009 {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","/**\n * Test swagger\n * Testing the Fastify swagger API\n *\n * OpenAPI spec version: 0.1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as models from './models'\n\n/**\n  * @property `code` \n  * @property `resultCode` \n  * @property `message` \n  * @property `[result]` \n  * @property `[error]` \n  */\nexport interface InlineResponse200Result {\n  'code': InlineResponse200Result.CodeEnum;\n  'resultCode': InlineResponse200Result.ResultCodeEnum;\n  'message': string;\n  'result'?: any;\n  'error'?: models.InlineResponse200ResultError;\n}\n\nexport namespace InlineResponse200Result {\n  export enum CodeEnum {\n    _100001 = '100001' as any,\n    _100002 = '100002' as any,\n    _400001 = '400001' as any,\n    _400002 = '400002' as any,\n    _400003 = '400003' as any,\n    _500000 = '500000' as any,\n    _500001 = '500001' as any,\n    _500002 = '500002' as any\n  }\n  export enum ResultCodeEnum {\n    SUCCESS = 'SUCCESS' as any,\n    ERRPARAM = 'ERR_PARAM' as any,\n    SENMESSAGE = 'SEN_MESSAGE' as any,\n    NOTWECHATAUTH = 'NOT_WECHAT_AUTH' as any,\n    NOTLOGIN = 'NOT_LOGIN' as any,\n    NOTAUTH = 'NOT_AUTH' as any,\n    ERROR = 'ERROR' as any,\n    FAILUPLOAD = 'FAIL_UPLOAD' as any,\n    FACECOMPARERUPLOAD = 'FACE_COMPARER_UPLOAD' as any\n  }\n}\n","export * from './Data'\nexport * from './Data1'\nexport * from './Data2'\nexport * from './Data3'\nexport * from './Data4'\nexport * from './Data5'\nexport * from './Data6'\nexport * from './Data7'\nexport * from './Data8'\nexport * from './Data9'\nexport * from './InlineResponse200'\nexport * from './InlineResponse2001'\nexport * from './InlineResponse20010'\nexport * from './InlineResponse20011'\nexport * from './InlineResponse20011Result'\nexport * from './InlineResponse20012'\nexport * from './InlineResponse20013'\nexport * from './InlineResponse20013Result'\nexport * from './InlineResponse20014'\nexport * from './InlineResponse2001From'\nexport * from './InlineResponse2001FromUserInfo'\nexport * from './InlineResponse2001FromUserInfoCustomAvatarUrl'\nexport * from './InlineResponse2001ReplyComment'\nexport * from './InlineResponse2001Result'\nexport * from './InlineResponse2002'\nexport * from './InlineResponse2002Result'\nexport * from './InlineResponse2003'\nexport * from './InlineResponse2003Result'\nexport * from './InlineResponse2004'\nexport * from './InlineResponse2004Result'\nexport * from './InlineResponse2005'\nexport * from './InlineResponse2005Ext'\nexport * from './InlineResponse2005Result'\nexport * from './InlineResponse2006'\nexport * from './InlineResponse2006Result'\nexport * from './InlineResponse2007'\nexport * from './InlineResponse2007DownloadUrl'\nexport * from './InlineResponse2007Result'\nexport * from './InlineResponse2008'\nexport * from './InlineResponse2009'\nexport * from './InlineResponse2009Result'\nexport * from './InlineResponse200Result'\nexport * from './InlineResponse200ResultError'\nexport type ModelInteger = number\nexport type ModelFloat = number\nexport type LocalDate = Date","import Taro from '@tarojs/taro'\nimport Cookie from 'cookie'\nimport ajax, { ExtraFetchParams } from './new-ajax'\nimport axios from './axios'\n\nexport * from './new-ajax'\n\nconst defaultAjax = ajax.ajax\n\nconst COOKIE_KEY = 'new_cookie'\nconst CSRF_TOKEN_KEY = 'csrfToken'\n\naxios.interceptors.response.use((response) => {\n  const { headers } = response\n\n  // 小程序 cookie 用逗号分割，只能特殊处理\n  const cookie = (\n    (headers['set-cookie'] || headers['Set-Cookie'] || '') as string\n  )\n    .split(/,(?=[^,]*=)/)\n    .join(';')\n\n  const SESSION_ID = Cookie.parse(cookie).SESSION_ID\n\n  SESSION_ID &&\n    Taro.setStorageSync(COOKIE_KEY, Cookie.serialize('SESSION_ID', SESSION_ID))\n\n  const csrfToken = Cookie.parse(cookie).csrfToken\n\n  csrfToken && Taro.setStorageSync(CSRF_TOKEN_KEY, csrfToken)\n  return response\n})\n\n// 请求携带 token\nexport const getHeader = () => {\n  const csrfToken = Taro.getStorageSync(CSRF_TOKEN_KEY)\n  const cookie = Taro.getStorageSync(COOKIE_KEY)\n\n  return {\n    Cookie: cookie,\n    'x-csrf-token': csrfToken,\n  }\n}\n\n// 全局拦截 ajax 拼接 testUser 参数\najax.ajax = (\n  options: Parameters<typeof defaultAjax>[0],\n  path?: string,\n  basePath = process.env.PROXY_TARGET\n) => {\n  const headers: ExtraFetchParams['headers'] = options.headers || {}\n  console.log(options, options.headers, 'options')\n  options.url = process.env.PROXY_TARGET + options.url\n  headers.Origin = process.env.PROXY_TARGET\n\n  return defaultAjax(\n    {\n      ...options,\n      headers: {\n        ...headers,\n        ...getHeader(),\n      },\n    },\n    path,\n    basePath\n  )\n}\n\nexport default ajax\n","import axios, { AxiosError, Cancel } from 'axios'\nimport { AjaxCancelCode, AjaxErrorCode } from './consts'\n\n// @cc: axios 默认配置，可在此处修改\nexport default axios.create({\n  timeout: 5000,\n  withCredentials: true,\n  headers: {}\n})\n\nexport const emptyFunc = () => void 0\n\n/** 检测 axios 响应状态 */\nexport function onStatusError(error: AxiosError | Error | Cancel) {\n  const resp = 'response' in error && error.response\n  // IMP: 400客户端错误可能有response.data 不规则的接口可能在 data 里塞除了 code 和 message 以外的字段\n  const err = resp\n    ? {\n        ...resp.data,\n        code: resp.status,\n        message:\n          resp.data && resp.data.message ? resp.data.message : resp.statusText\n      }\n    : {\n        code: error instanceof axios.Cancel ? AjaxCancelCode : AjaxErrorCode,\n        message: error.message\n      }\n\n  return err\n}\n\nexport { promiseFactory } from './consts'\n","/** 取消请求错误码 */\nexport const AjaxCancelCode = 10499\nexport const AjaxCancelMessage = 'AJAX_CANCEL_MESSAGE'\n\n/** 默认Ajax错误码  */\nexport const AjaxErrorCode = 10001\n\n/** 无法确认的 Graphql 错误码 */\nexport const GraphQLErrorCode = 10002\n\nexport interface AbstractAjaxResult<R> {\n  /**\n   * 后端返回的错误码或者提取非200的http状态码\n   */\n  code?: number\n  /**\n   * 后端返回的错误信息\n   */\n  message?: string | number | null\n  /**\n   * 后端返回的数据结构\n   */\n  result?: R\n}\nexport type AbstractAsyncFunction<R> = (...args: any[]) => Promise<R>\nexport type AjaxResult = AbstractAjaxResult<any>\nexport type AjaxFunction = AbstractAsyncFunction<AjaxResult>\nexport const promiseFactory = <T>() => {\n  let resolve!: (value?: T | PromiseLike<T> | undefined) => void,\n    reject!: (reason?: any) => void\n  const prom = new Promise<T>((rs, rj) => {\n    resolve = rs\n    reject = rj\n  })\n  const rj = { reject, resolve }\n  return [rj, prom] as [typeof rj, typeof prom]\n}\n","import ajax from './ajax'\n\nexport * from './axios'\nexport * from './new-ajax'\n\nexport default ajax\nexport {\n  AjaxCancelCode,\n  AjaxErrorCode,\n  GraphQLErrorCode,\n  // AbstractAjaxResult,\n  // AjaxResult,\n  // AjaxFunction,\n  AjaxCancelMessage\n} from './consts'\n","import qs from 'qs'\nimport axios from 'axios'\nimport axiosInst, { onStatusError, emptyFunc } from './axios'\nimport { promiseFactory } from './consts'\n\n/** 不再兼容非标准的数据结构 */\nexport declare type AjaxPromise<R> = Promise<R>\n/** 非标准包裹 */\nexport declare type NonStandardAjaxPromise<R> = Promise<{\n  code?: number\n  message?: string\n  result: R\n}>\n\nexport interface ExtraFetchParams {\n  /** extra data for extends */\n  extra?: any\n  /** 扩展请求头 */\n  headers?: any\n  /** cancel request */\n  cancel?: Promise<string | undefined>\n}\n\nexport interface WrappedFetchParams extends ExtraFetchParams {\n  /** http method */\n  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'OPTIONS' | 'PATCH' | 'HEAD'\n  url: string\n  /** post json data */\n  data?: any\n  /** post form data */\n  form?: any\n  /** query data */\n  query?: any\n  /** header */\n  header?: any\n  /** path data */\n  path?: any\n}\n\nexport class WrappedFetch {\n  /** ajax 方法 */\n  public ajax = (\n    {\n      method,\n      url,\n      data,\n      form,\n      query,\n      header,\n      extra,\n      cancel,\n      headers\n    }: WrappedFetchParams,\n    _path?: string,\n    _basePath?: string\n  ) => {\n    let config = {\n      ...extra,\n      method: method.toLowerCase(),\n      headers: { ...headers, ...header }\n    }\n    // json\n    if (data) {\n      config = {\n        ...config,\n        headers: {\n          // 可覆盖\n          'Content-Type': 'application/json',\n          ...config.headers\n        },\n        data\n      }\n    }\n    // form\n    if (form) {\n      config = {\n        ...config,\n        headers: {\n          // 可覆盖\n          'Content-Type': 'application/x-www-form-urlencoded',\n          ...config.headers\n        },\n        data:\n          config.headers &&\n          config.headers['Content-Type'] === 'multipart/form-data'\n            ? form\n            : qs.stringify(form)\n      }\n    }\n    const [{ resolve: cancelRequest }, internalCancel] = promiseFactory<\n      string\n    >()\n    config.cancelToken = new axios.CancelToken(c => {\n      // 外部\n      cancel && cancel.then(c, emptyFunc)\n      // 内部自动取消\n      internalCancel.then(c, emptyFunc)\n    })\n    let prom: Promise<any> = axiosInst\n      .request({\n        ...config,\n        url,\n        params: query\n      })\n      .then(res => res.data)\n    if (this.autoCatch) {\n      prom = prom.catch(\n        typeof this.autoCatch === 'function' ? this.autoCatch : onStatusError\n      )\n    }\n    // IMP: 修复 tkit/service 设计上的硬伤\n    prom['cancel'] = cancelRequest\n    return prom as Promise<any>\n  }\n\n  /** 接口传参校验 */\n  public check<V>(value: V, name: string) {\n    if (value === null || value === undefined) {\n      const msg = `[ERROR PARAMS]: ${name} can't be null or undefined`\n      // 非生产环境，直接抛出错误\n      if (process.env.NODE_ENV === 'development') {\n        throw Error(msg)\n      }\n    }\n  }\n\n  /**\n   * 是否默认 catch ajax 错误，默认开启，设置为 false，关闭 catch，支持配置成函数，替代默认的 onStatusError\n   */\n  public autoCatch: boolean | typeof onStatusError = true\n}\n\nexport default new WrappedFetch()\n","export default function dateFormat(current: string | number | Date, format: string): string {\n  // ios 日期处理兼容\n  if (typeof current === 'string') {\n    current = current.replace(/-/g, '/')\n  }\n\n  const date: Date = new Date(current)\n\n  const o: { [key: string]: number } = {\n    'Y+': date.getFullYear(),\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'H+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds(),\n    'q+': Math.floor((date.getMonth() + 3) / 3),\n    'S': date.getMilliseconds(),\n  }\n\n  if (/(y+)/.test(format)) {\n    format = format.replace(RegExp.$1, `${date.getFullYear()}`.substr(4 - RegExp.$1.length))\n  }\n\n  for (let k in o) {\n    if (new RegExp(`(${k})`).test(format)) {\n      format = format.replace(RegExp.$1, `${RegExp.$1.length === 1 ? o[k] : (`00${o[k]}`).substr(`${o[k]}`.length)}`)\n    }\n  }\n\n  return format\n}\n","import { APIS } from '@/services2'\nimport Taro, { uploadFile } from '@tarojs/taro'\nimport { getHeader } from './ajax/ajax'\nimport { withRequest } from './request'\n\n// const isDevtools = Taro.getSystemInfoSync().platform === 'devtools'\n\nexport const compressImage = (url: string, quality = 30): Promise<string> =>\n  new Promise((resolve, reject) => {\n    Taro.compressImage({\n      src: url,\n      success: (res) => {\n        // IMP: 开发者工具中后缀名有问题，无法上传文件，需要手动更改\n        // if (isDevtools) {\n        //   // const filePath = res.tempFilePath.replace('.', '')\n        //   const filePath = `${wx.env.USER_DATA_PATH}/${+new Date()}.jpg`\n        //   Taro.getFileSystemManager().renameSync(res.tempFilePath, filePath)\n        //   resolve(filePath)\n        //   return\n        // }\n        resolve(res.tempFilePath)\n      },\n      quality,\n      fail: (error) => {\n        reject(error)\n      },\n    })\n  })\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const uploadFileToServer = async ({\n  url = '',\n  quality = 80,\n  isNotTmpFile = false,\n}) => {\n  const { height, width, type } = await Taro.getImageInfo({\n    src: url,\n  })\n\n  // 非临时文件，使用网络上传接口\n  if (isNotTmpFile) {\n    const [err, res] = await withRequest(APIS.MediaApi.apiMediaUrlPost)({\n      url,\n      height,\n      width,\n      type,\n    })\n    if (!err) {\n      return res?._id\n    }\n  }\n\n  // 压缩比例 根据图片宽度动态计算\n  let rate = 1\n  if (width > 1000) {\n    rate = 800 / width\n  }\n\n  const compressUrl = await compressImage(url, quality * rate)\n\n  try {\n    const { data } = await uploadFile({\n      url: `${process.env.PROXY_TARGET}/api/media`,\n      filePath: compressUrl,\n      name: 'file',\n      header: getHeader(),\n      formData: {\n        height,\n        width,\n        type,\n      },\n    })\n    const res = JSON.parse(data)\n\n    if (!res?.result?._id || !res?.result?.id) {\n      throw new Error('上传失败')\n    }\n    return res.result.id\n  } catch (error) {\n    Taro.showToast({\n      title: '上传失败',\n      icon: 'none',\n    })\n    return Promise.reject(error)\n  }\n}\n","import Taro from '@tarojs/taro'\nimport illegalityImg from '@/assets/img/illegality_img.png'\n\n// export { default as config } from '../../mallConfig'\nexport { default as dateFormat } from './dateFormat'\nexport * from './request'\nexport * from './login'\nexport * from './image'\n\n// 新增 Toast finished 方法，Toast 弹窗关闭后触发\nexport const showToast = ({\n  complete,\n  duration = 1500,\n  finished = undefined,\n  ...args\n}: {\n  finished?: () => void // toast 弹窗关闭后触发\n} & Taro.showToast.Option) =>\n  new Promise(resolve => {\n    Taro.showToast({ complete, duration, ...args })\n    setTimeout(() => {\n      finished && finished()\n      resolve()\n    }, duration)\n  })\n\n// catch promise error\nexport const cError = async (\n  fn: Promise<any> | ((data: any) => Promise<any>)\n): Promise<[\n  null | { msg: string; code: number | string; [key: string]: any },\n  any\n]> => {\n  try {\n    const result = await fn\n    return [null, result]\n  } catch (error) {\n    console.log(error, 'error')\n    return [error, error]\n  }\n}\n\n// 价格处理\nexport const priceToFloat = (price?: number): string =>\n  price !== undefined ? price.toFixed(2) : ''\n\n// 设置购物车小红点\nexport const setCartBadge = () => {\n  try {\n    const { shopNum } = Taro.getStorageSync('shopCartInfo') || {}\n    if (shopNum && shopNum > 0) {\n      Taro.setTabBarBadge({\n        index: 2,\n        text: String(shopNum)\n      })\n    } else {\n      Taro.removeTabBarBadge({\n        index: 2\n      })\n    }\n  } catch (error) {}\n}\n\n// valueEqual from https://www.npmjs.com/package/value-equal\nconst valueOf = obj =>\n  obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj)\n\nexport const valueEqual = (a: any, b: any): boolean => {\n  // Test for strict equality first.\n  if (a === b) return true\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index])\n      })\n    )\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a)\n    var bValue = valueOf(b)\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue)\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key])\n    })\n  }\n\n  return false\n}\n\n// 获取当前页面url\nexport const getCurrentPageUrl = (): string => {\n  var pages = Taro.getCurrentPages() //获取加载的页面\n  var currentPage = pages[pages.length - 1] //获取当前页面的对象\n  var url = currentPage?.route //当前页面url\n  return url\n}\n\n// 获取用户权限\nexport const getAuthorize = async (\n  scope = 'scope.writePhotosAlbum'\n): Promise<Error | undefined> =>\n  new Promise(resolve => {\n    Taro.getSetting({\n      success(res) {\n        if (!res.authSetting[scope]) {\n          Taro.authorize({\n            scope,\n            success: () => resolve(),\n            fail: () => {\n              Taro.showModal({\n                title: '打开权限设置',\n                content: '保存图片权限未开启，是否授权保存图片权限？',\n                confirmText: '确认',\n                success(result) {\n                  if (result.confirm) {\n                    Taro.openSetting()\n                    resolve(new Error('用户打开权限'))\n                  }\n                  if (result.cancel) {\n                    resolve(new Error('用户取消打开权限'))\n                  }\n                }\n              })\n            }\n          })\n          return\n        }\n        resolve()\n      }\n    })\n  })\n// 保存图片\nexport const saveImage = async (url: string) => {\n  const err = await getAuthorize('scope.writePhotosAlbum')\n  if (err) {\n    return\n  }\n\n  Taro.getSetting({\n    success(res) {\n      if (!res.authSetting['scope.writePhotosAlbum']) {\n        Taro.authorize({\n          scope: 'scope.writePhotosAlbum',\n          success() {\n            // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问\n            // Taro.startRecord()\n          }\n        })\n      }\n    }\n  })\n  Taro.saveImageToPhotosAlbum({\n    filePath: url,\n    success: () => {\n      Taro.showModal({\n        title: '保存成功',\n        content: '图片成功保存到相册',\n        showCancel: false,\n        confirmText: '确认',\n        success(result) {\n          if (result.confirm) {\n          }\n        }\n      })\n    },\n    fail() {}\n  })\n}\n\nexport const delay = (timeout: number) =>\n  new Promise((resolve, reject) => setTimeout(resolve, timeout))\n\nexport const getCdnUrl = (params?: {\n  checkCode?: number\n  status?: number\n  key?: string\n}) => {\n  if (!params) {\n    return ''\n  }\n  const { status, key } = params\n  if (status === 2) {\n    return illegalityImg\n  }\n  // TODO: 缺省图补充\n  return `${process.env.CND_PREFIX}/${key}`\n}\n\nexport const requestSubscribeMessage = (): Promise<void> => {\n  return new Promise(resolve => {\n    wx.requestSubscribeMessage({\n      tmplIds: ['g0WWyXyMj-fU7kscwpXU89Q_Ola7sfJgIjKv7CdIVIc'],\n      success() {\n        resolve()\n      },\n      fail() {\n        resolve()\n      }\n    })\n  })\n}\n\nexport function copy(target: string) {\n  Taro.setClipboardData({\n    data: target\n  })\n}\n","import { APIS } from '@/services2'\nimport Taro from '@tarojs/taro'\nimport { init } from '@/redux/actions/user'\nimport { store } from '@/redux/store'\nimport { withRequest } from './request'\nimport { goPage, routes } from './router'\n\nexport const toLogin = async (\n  isWechatLogin: boolean,\n  url?: string\n): Promise<void> => {\n  return new Promise((resolve, reject) => {\n    if (!isWechatLogin) {\n      wx.getUserProfile({\n        desc: '用于理工喵信息展示', // 声明获取用户个人信息后的用途，后续会展示在弹窗中，请谨慎填写\n        success: async res => {\n          console.log(res, 'res')\n          const [err] = await withRequest(APIS.UserApi.apiUserWxLoginPost)({\n            iv: res.iv,\n            encryptedData: res.encryptedData\n          })\n          if (!err) {\n            await store.dispatch(init())\n            resolve()\n            url && goPage(url)\n          }\n        },\n        fail() {\n          console.log('fail')\n          reject()\n        }\n      })\n      return\n    }\n    resolve()\n    url && goPage(url)\n  })\n}\n\nexport const loginModal = async (): Promise<void> => {\n  return new Promise(async resolve => {\n    const getUserInfoPromise = store.getState().user.getUserInfoPromise\n    await getUserInfoPromise\n    const isWechatLogin = store.getState().user.isWechatLogin\n    if (!isWechatLogin) {\n      Taro.showModal({\n        title: '未登录',\n        content: '登录后才能查看内容',\n        confirmText: '去登录',\n        success: async res => {\n          if (res.confirm) {\n            await toLogin(isWechatLogin).catch(() => {\n              Taro.switchTab({\n                url: routes.index\n              })\n            })\n            resolve()\n          } else {\n            Taro.switchTab({\n              url: routes.index\n            })\n          }\n        }\n      })\n    } else {\n      resolve()\n    }\n  })\n}\n","import { InlineResponse200, InlineResponse200ResultError } from '@/services2'\nimport Taro from '@tarojs/taro'\n// import { config, getCurrentPageUrl } from '@/utils'\n// import { routes } from './router'\n\n// const { subDomain } = config\n// 判定现在的环境\nconst env = process.env.NODE_ENV === 'production' ? 'prod' : 'dev'\n\nconst hosts = {\n  // dev: 'http://118.89.247.29:8791',\n  // dev: 'http://localhost:8791',\n  // dev: 'http://192.168.31.122:8791',\n  // dev: 'https://hrbust-dev.smackgg.cn',\n  dev: 'https://hrbust-dev.smackgg.com',\n  prod: 'https://hrbust-dev.smackgg.com',\n}\n\nexport const API_BASE_URL = hosts[env]\n\nexport default (option: Taro.request.Option): Promise<Request.requestResult> =>\n  new Promise((resolve, reject) => {\n    const { url, data = {} } = option\n    let reqUrl = API_BASE_URL + url\n\n    // 删减没有数据的参数\n    const requestData = Object.keys(data).reduce(\n      (pre: { [key: string]: any }, key) => {\n        if (data[key] !== undefined) {\n          pre[key] = data[key]\n        }\n        return pre\n      },\n      {}\n    )\n\n    // 请求携带 token\n    const cookie = Taro.getStorageSync('new_cookie')\n\n    Taro.request({\n      ...option,\n      data: requestData,\n      url: reqUrl,\n      header: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        cookie,\n      },\n      success: (res) => {\n        if (res && res.statusCode === 200 && res.data.status === 200) {\n          const { header } = res\n          // @ts-ignore\n          Taro.setStorageSync('app_cookie', header['Set-Cookie'])\n          resolve(res.data)\n          return\n        }\n        reject(res && res.data)\n      },\n      fail: (error) => reject(error),\n    })\n  })\n\n/**\n * 封装 service request，code !== 0 的情况统一返回 error\n */\ntype PromiseValue<T> = T extends Promise<infer U> ? U : T\n\ntype RequestValue<\n  R extends {\n    code: InlineResponse200.CodeEnum\n    resultCode: InlineResponse200.ResultCodeEnum\n    message: string\n    result?: any\n    error?: InlineResponse200ResultError\n  },\n  T extends (...args: any[]) => Promise<R>\n> = (\n  ...args: Parameters<T>\n) => Promise<\n  [\n    Error | null,\n    PromiseValue<ReturnType<T>>['result'],\n    PromiseValue<ReturnType<T>>\n  ]\n>\n\nexport function withRequest<\n  R extends {\n    code: InlineResponse200.CodeEnum\n    resultCode: InlineResponse200.ResultCodeEnum\n    message: string\n    result?: any\n    error?: InlineResponse200ResultError\n  },\n  T extends (...args: any[]) => Promise<R>\n>(request: T, showToast = true): RequestValue<R, T> {\n  const callback = (...args: Parameters<T>) =>\n    request(...args).then((res) => {\n      if (res.code === 0 && res.result) {\n        return [null, res.result, res]\n      }\n\n      let message = res.message || res.error?.message || '请求失败'\n\n      if (showToast && ![400001, 400002].includes(res.code)) {\n        Taro.showToast({\n          title: message,\n          // @ts-ignore\n          icon: 'error',\n          duration: 2000,\n        })\n      }\n\n      console.error(res.error, res.message)\n\n      return [new Error(message), res.result, res]\n    }) as ReturnType<RequestValue<R, T>>\n  return callback\n}\n","import Taro from '@tarojs/taro'\n\nimport { routes as rs } from '../app.config'\n\nexport { routes } from '../app.config'\n\nexport const goWebviewPage = (url: string, title = '理工喵', type = 2 as number) => {\n  if (type === 1) {\n    Taro.navigateTo({\n      url\n    })\n  } else {\n    Taro.navigateTo({\n      url: rs.webview + `?url=${encodeURIComponent(url)}&title=${title}`\n    })\n  }\n}\n\nexport const goPage = (url: string, to = Taro.navigateTo) => to({\n  url,\n})\n"],"names":[],"sourceRoot":""}