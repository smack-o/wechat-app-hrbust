{"version":3,"file":"custom-tab-bar/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AASA;AAAA;AACA;AACA;AAEA;AAFA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AAEA;AAGA;AAAA;AAGA;AAEA;AAAA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_custom-tab-bar_index.tsx","webpack://wechat-app-hrbust/./src/custom-tab-bar/index.tsx?6ef0"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Taro from '@tarojs/taro'\nimport { CoverView, CoverImage } from '@tarojs/components'\nimport { connect } from 'react-redux'\nimport { IRootState } from '@/types'\nimport cn from 'classnames'\nimport { store } from '@/redux/store'\nimport { toLogin } from '@/utils'\nimport '@/assets/icon/soul.png'\nimport './index.less'\n\nconst tabInfo = {\n  borderStyle: 'black',\n  color: '#ccc',\n  selectedColor: '#000',\n  list: [\n    {\n      pagePath: 'pages/index/index',\n      text: '首页',\n      iconPath: '/assets/icon/home.png',\n      selectedIconPath: '/assets/icon/home_selected.png',\n    },\n    {\n      pagePath: 'pages/resource/index',\n      text: '资源站',\n      iconPath: '/assets/icon/campus.png',\n      selectedIconPath: '/assets/icon/campus_selected.png',\n    },\n    {\n      pagePath: 'pages3/community/index',\n      text: 'Soul',\n      iconPath: '/assets/icon/soul.png',\n      selectedIconPath: '/assets/icon/soul.png',\n    },\n    {\n      pagePath: 'pages/shop/index',\n      text: '优惠购',\n      iconPath: '/assets/icon/shop.png',\n      selectedIconPath: '/assets/icon/shop_selected.png',\n    },\n    {\n      pagePath: 'pages/account/index',\n      text: '我',\n      iconPath: '/assets/icon/account.png',\n      selectedIconPath: '/assets/icon/account_selected.png',\n    },\n  ],\n}\n\nconst isEqualPath = (a: string, b: string) =>\n  (a || '').replace(/^\\//, '') === (b || '').replace(/^\\//, '')\n\nconst switchTo = (path: string, index: number) => () => {\n  const url = '/' + path\n\n  if (index === 1) {\n    Taro.showToast({\n      title: '暂不可用',\n      icon: 'none',\n    })\n    return\n  }\n  if (index === 2) {\n    const isWechatLogin = store.getState().user.isWechatLogin\n    if (!isWechatLogin) {\n      toLogin(isWechatLogin, url)\n      return\n    }\n    // wx.requestSubscribeMessage({\n    //   tmplIds: ['g0WWyXyMj-fU7kscwpXU89Q_Ola7sfJgIjKv7CdIVIc'],\n    //   success: () => {\n    //     Taro.navigateTo({\n    //       url\n    //     })\n    //   }\n    // })\n    Taro.navigateTo({\n      url,\n    })\n    return\n  }\n  Taro.switchTab({\n    url,\n  })\n}\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\ntype PropsFromDispatch = {}\n\ntype PageOwnProps = {}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nexport function CustomTabBar(props: IProps) {\n  const { unreadCount } = props\n  const [path, setPath] = useState(\n    Taro.getCurrentInstance()?.router?.path || ''\n  )\n\n  useEffect(() => {\n    // @ts-ignore\n    wx.onAppRoute(function (res) {\n      setPath(res.path)\n    })\n  }, [])\n\n  return (\n    <CoverView className=\"tab-bar\">\n      <CoverView className=\"tab-bar-border\"></CoverView>\n      {tabInfo.list.map((item, index) => {\n        const isSelected = isEqualPath(path, item.pagePath)\n        return (\n          <CoverView\n            className={cn('tab-bar-item', {\n              large: index === 2,\n            })}\n            onClick={switchTo(item.pagePath, index)}\n            data-path={item.pagePath}\n            key={index}\n          >\n            <CoverImage\n              className=\"custom-tab-item-img\"\n              src={isSelected ? item.selectedIconPath : item.iconPath}\n            />\n            <CoverView\n              className=\"custom-tab-item-text\"\n              style={{\n                color: isSelected ? tabInfo.selectedColor : tabInfo.color,\n              }}\n            >\n              {item.text}\n            </CoverView>\n            {index === 4 && unreadCount > 0 && (\n              <CoverView className=\"custom-tab-item-dot\">\n                {unreadCount > 99 ? '99+' : unreadCount}\n              </CoverView>\n            )}\n          </CoverView>\n        )\n      })}\n    </CoverView>\n  )\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  unreadCount: state.user.unreadCount,\n})\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps\n)(CustomTabBar)\n","import { createComponentConfig } from '@tarojs/runtime'\nimport component from \"../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar inst = Component(createComponentConfig(component, 'custom-tab-bar/index'))\n\nexport default component\n"],"names":[],"sourceRoot":""}