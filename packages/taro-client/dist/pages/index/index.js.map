{"version":3,"file":"pages/index/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAgBA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAMA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAunPA;AACA;AAAA;AAAA;AAAA;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAqKA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAGA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAQA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAsBA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAKA;AACA;;;;;;;;;;;;;;;;;;;;AC7jBA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages_index_index.tsx","webpack://wechat-app-hrbust/._src_pages_index_components_SwiperChild_index.tsx","webpack://wechat-app-hrbust/./src/pages/index/index.tsx?5490"],"sourcesContent":["import { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Dispatch, bindActionCreators } from 'redux'\nimport Taro from '@tarojs/taro'\nimport { View, Text, Swiper, SwiperItem, Image } from '@tarojs/components'\nimport { getBanner } from '@/redux/actions/common'\nimport { IRootState } from '@/types'\n\nimport cn from 'classnames'\nimport { goPage, routes } from '@/utils/router'\nimport { Loading, withShare } from '@/components'\nimport { APIS } from '@/services2'\n\n// images\nimport courseIcon from '@/assets/icon/course.png'\nimport examIcon from '@/assets/icon/exam_schedule.png'\nimport gradeIcon from '@/assets/icon/grade.png'\nimport shopIcon from '@/assets/icon/shop_selected.png'\nimport queryRoomIcon from '@/assets/icon/query_room.png'\nimport afficheIcon from '@/assets/icon/affiche.png'\nimport phoneBookIcon from '@/assets/icon/phone_book.png'\nimport newStudentIcon from '@/assets/icon/new_student.png'\nimport doNotTouchMeIcon from '@/assets/icon/do_not_touch_me.png'\nimport arrowRight from '@/assets/icon/arrow_right.png'\nimport CommentIcon from '@/assets/community-imgs/comment.png'\nimport LikeIcon from '@/assets/community-imgs/like.png'\nimport ViewIcon from '@/assets/community-imgs/view.png'\nimport { getCdnUrl, toLogin, withRequest } from '@/utils'\nimport Time from '@/components/Time'\n\n// import bgImg from './res/home-bg.png'\nimport SwiperChild from './components/SwiperChild'\n\nimport './index.less'\nimport ImageCache from '@/components/ImageCache'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\n\ntype PropsFromDispatch = ReturnType<typeof mapDispatchToProps>\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  cIndex: number\n  resourceList: GetApiResultType<typeof APIS.ResourceApi.apiResourceListHotGet>\n  wallList: GetApiResultType<typeof APIS.WallApi.apiWallListHotGet>\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nlet interstitialAd: Taro.InterstitialAd\n\nconst SWIPER_MARGIN = '45rpx'\nconst prefix = 'index-container'\nclass Index extends Component<IProps, PageState> {\n  state: PageState = {\n    cIndex: 0,\n    resourceList: [],\n    wallList: [],\n  }\n  config = {} as { [key: string]: any }\n\n  componentDidShow() {\n    this.handleShow()\n  }\n\n  handleShow = async () => {\n    // banner\n    // await this.getConfig()\n    this.props.getBanner()\n\n    // 在适合的场景显示插屏广告\n    if (interstitialAd) {\n      interstitialAd.show().catch((err) => {\n        console.log(err)\n      })\n    }\n\n    await this.props.user.getUserInfoPromise\n    this.getWall()\n    // if (this.props.user.config.global?.config?.showAllResource) {\n    //   this.getResource()\n    // }\n  }\n\n  // getConfig = async () => {\n  //   const [err, res] = await withRequest(APIS.ConfigApi.apiConfigGet)({\n  //     key: 'global'\n  //   })\n  //   if (err) {\n  //     return\n  //   }\n  //   this.config = res || {}\n  // }\n\n  // getResource = async () => {\n  //   const [err, res] = await withRequest(\n  //     APIS.ResourceApi.apiResourceListHotGet\n  //   )({\n  //     pageNum: '0',\n  //     pageSize: '5',\n  //   })\n\n  //   if (err) {\n  //     return\n  //   }\n  //   this.setState({\n  //     resourceList: res,\n  //   })\n  // }\n\n  getWall = async () => {\n    const [err, res] = await withRequest(APIS.WallApi.apiWallListHotGet)({\n      pageNum: '0',\n      pageSize: '10',\n    })\n\n    if (err) {\n      return\n    }\n    this.setState({\n      wallList: res,\n    })\n  }\n\n  onLoad() {\n    // 在页面onLoad回调事件中创建插屏广告实例\n    // 插屏广告\n    // if (Taro.createInterstitialAd) {\n    //   interstitialAd = Taro.createInterstitialAd({\n    //     adUnitId: 'adunit-167f2a17e8f9ecc4'\n    //   })\n    //   interstitialAd.onLoad(() => { console.log('adload') })\n    //   interstitialAd.onError((error) => { console.log('aderror:', error) })\n    //   interstitialAd.onClose(() => { console.log('adclose') })\n    // }\n  }\n\n  onShow() {\n    // Taro.getCurrentInstance()?.page?.getTabBar?.()\n    // Taro.getCurrentInstance()?.page?.getTabBar().setData({\n    //   selected: 0,\n    // })\n  }\n\n  // 金刚位模块列表\n  modules = [\n    // {\n    //   image: courseIcon,\n    //   text: '课表',\n    //   url: routes.course,\n    //   needLogin: true,\n    //   shadowColor: 'box-shadow: 0px 5px 25px 0px rgba(243, 170, 66, 0.2);'\n    // },\n    // {\n    //   image: gradeIcon,\n    //   text: '成绩查询',\n    //   url: routes.grade,\n    //   needLogin: true,\n    //   shadowColor: 'box-shadow: 0px 5px 25px 0px rgba(233, 96, 110, 0.2);'\n    // },\n    // // {\n    // //   image: '../assets/icon/cetlogo.png',\n    // //   text: '无证查询',\n    // //   url: './cet4',\n    // //   needLogin: true,\n    // //   shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(183, 98, 237, 0.2);'\n    // // },\n    // // {\n    // //   image: '../assets/icon/affiche.png',\n    // //   text: '教务公告',\n    // //   url: './news/news',\n    // //   needLogin: true,\n    // //   shadowColor: 'box-shadow: 0px 5px 25px 0px rgba(72, 98, 246, 0.2);'\n    // // },\n    // {\n    //   image: queryRoomIcon,\n    //   text: '查空教室',\n    //   url: routes.classroom,\n    //   needLogin: true,\n    //   shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(255, 0, 220, 0.2);'\n    // },\n    // {\n    //   image: examIcon,\n    //   text: '考试安排',\n    //   url: routes.exam,\n    //   needLogin: true,\n    //   shadowColor: 'box-shadow: 0px 5px 25px 0px rgba(95, 205, 222, 0.2);'\n    // }\n    // {\n    //   image: '../assets/icon/news_icon.png',\n    //   text: '教务公告',\n    //   url: '.news'\n    // }, {\n    //   image: '../assets/icon/job_icon.png',\n    //   text: '校招信息',\n    //   url: './job'\n    // },\n    // {\n    //   image: '../assets/icon/search_icon.png',\n    //   text: '新生速查',\n    //   url: './info'\n    //   // image: '../assets/icon/search_icon.png',\n    //   // text: '新生速查',\n    //   // url: '../info/info',\n    // }\n    {\n      image: courseIcon,\n      text: '课表',\n      url: routes.course,\n      needLogin: true,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(243, 170, 66, 0.2);',\n    },\n    {\n      image: gradeIcon,\n      text: '成绩查询',\n      url: routes.grade,\n      needLogin: true,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(233, 96, 110, 0.2);',\n    },\n    {\n      image: queryRoomIcon,\n      text: '查空教室',\n      url: routes.classroom,\n      needLogin: true,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(255, 0, 220, 0.2);',\n    },\n    {\n      image: examIcon,\n      text: '考试安排',\n      url: routes.exam,\n      needLogin: true,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(95, 205, 222, 0.2);',\n    },\n    {\n      image: afficheIcon,\n      text: '教务公告',\n      url: routes.news,\n      // needLogin: true,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(72, 98, 246, 0.2);',\n    },\n    {\n      image: phoneBookIcon,\n      text: '理工电邮',\n      url: `${routes.webview}?url=${encodeURIComponent(\n        'https://mp.weixin.qq.com/s/8Lsdsd7tMdjM6YgU2rGkbA'\n      )}&title=理工电邮`,\n      // needLogin: true,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(20, 235, 89, 0.2);',\n    },\n    {\n      image: newStudentIcon,\n      text: '新生速查',\n      url: routes.yingxin,\n      needLogin: false,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(72, 98, 246, 0.2);',\n    },\n    {\n      image: doNotTouchMeIcon,\n      text: '别点我',\n      url: routes.aboutme,\n      needLogin: false,\n      shadowColor: 'box-shadow: 0px 10px 25px 0px rgba(72, 98, 246, 0.2);',\n    },\n  ]\n\n  // 测试更改主题逻辑\n  // change = () => {\n  //   this.setState({\n  //     style: \"--bg-color2: blue;\"\n  //   })\n  // }\n\n  // 轮播图index变更\n  slideChange = (e: TaroBaseEventOrig) => {\n    this.setState({\n      cIndex: e.detail.current,\n    })\n  }\n\n  goPage = (index: number) => {\n    const {\n      user: { isLogin, isWechatLogin },\n    } = this.props\n    const { needLogin, url } = this.modules[index]\n    if (!isLogin && needLogin) {\n      // Taro.showToast({\n      //   title: '该功能需要登录~请先登录！',\n      //   icon: 'none'\n      // })\n      Taro.showModal({\n        title: '提示',\n        content: '该功能需要登录~请先登录！',\n        confirmText: '去登录',\n        success: function (res) {\n          if (res.confirm) {\n            toLogin(isWechatLogin, routes.login)\n          } else if (res.cancel) {\n            console.log('用户点击取消')\n          }\n        },\n      })\n      return\n    }\n\n    goPage(url)\n  }\n\n  render() {\n    const { cIndex, resourceList, wallList } = this.state\n    const {\n      banners,\n      user: { isLogin, isWechatLogin },\n      loading,\n    } = this.props\n\n    if (loading) {\n      return <Loading loading></Loading>\n    }\n\n    return (\n      <View className=\"index-container\">\n        <Swiper\n          onChange={this.slideChange}\n          className=\"slide-wrapper\"\n          indicatorDots={false}\n          autoplay\n          interval={5000}\n          previousMargin={SWIPER_MARGIN}\n          nextMargin={SWIPER_MARGIN}\n          circular\n          duration={400}\n        >\n          {banners.map((item, index) => {\n            return (\n              <SwiperItem key={item._id}>\n                <SwiperChild\n                  className=\"slide-item\"\n                  item={item}\n                  active={cIndex === index}\n                />\n              </SwiperItem>\n            )\n          })}\n        </Swiper>\n\n        <View className=\"modules\">\n          {this.modules.map((item, index) => {\n            return (\n              <View\n                key={index}\n                className={cn('module', {\n                  disabled: !(isLogin || !item.needLogin),\n                })}\n                onClick={() => this.goPage(index)}\n              >\n                <Image\n                  className=\"modules_image\"\n                  style={item.shadowColor}\n                  src={item.image}\n                  mode=\"widthFix\"\n                />\n                <Text className=\"modules_text\">{item.text}</Text>\n              </View>\n            )\n          })}\n        </View>\n\n        {/* {isLogin && (\n          <Image className=\"discover-image\" src={bgImg} mode=\"widthFix\" />\n        )} */}\n\n        {(!isWechatLogin || !isLogin) && (\n          <View className=\"login-wrapper\">\n            <View\n              className=\"login\"\n              onClick={() => toLogin(isWechatLogin, routes.login)}\n            >\n              <Text className=\"login-text\" style=\"color: #999999\">\n                部分校园功能仅对绑定学号用户开放\n              </Text>\n              <View className=\"login-button\">\n                <Text className=\"login-text\">\n                  {isWechatLogin ? '绑定学号' : '立即登录'}\n                </Text>\n              </View>\n            </View>\n          </View>\n        )}\n        {/*\n        {resourceList.length > 0 && (\n          <View className=\"resource-wrapper\">\n            {resourceList.map((item, index) => {\n              return (\n                <Fragment key={item._id}>\n                  <ResourceItem\n                    showHotComments\n                    data={item}\n                    onClick={() =>\n                      goPage(`${routes.resourceDetail}?id=${item._id}`)\n                    }\n                  ></ResourceItem>\n                </Fragment>\n              )\n            })}\n          </View>\n        )} */}\n        {wallList.length > 0 && (\n          <Fragment>\n            <View className=\"placeholder-block\"></View>\n            <View className=\"info\">\n              <View className=\"info-title\">\n                <View className=\"line\"></View>\n                <View className=\"title\">热门表白墙</View>\n              </View>\n              <View className=\"info-content\">\n                {wallList.map((item) => {\n                  return (\n                    <View\n                      className=\"item-wrapper\"\n                      key={item._id}\n                      onClick={() =>\n                        goPage(`${routes.wallDetail}?id=${item._id}`)\n                      }\n                    >\n                      <View className=\"item\">\n                        {item.photos && item.photos.length > 0 && (\n                          <ImageCache\n                            className=\"image\"\n                            mode=\"aspectFill\"\n                            src={getCdnUrl(item.photos[0])}\n                          ></ImageCache>\n                        )}\n                        {/* <Image className=\"image\" src={item.images} mode=\"widthFix\" /> */}\n                        <View className=\"text\">\n                          <View className=\"title\">{item.content}</View>\n                          <View className=\"date\">\n                            发布日期：<Time time={item.createdAt}></Time>\n                          </View>\n                        </View>\n                        <Image className=\"arrow-right\" src={arrowRight} />\n                      </View>\n                      <View className={`${prefix}__footer`}>\n                        <View className={`${prefix}__footer-right`}>\n                          <View className={`${prefix}__footer-item`}>\n                            <Image\n                              src={ViewIcon}\n                              className=\"view-icon\"\n                              mode=\"widthFix\"\n                            ></Image>\n                            {item.viewCount}\n                          </View>\n                          <View className={`${prefix}__footer-item`}>\n                            <Image src={CommentIcon} mode=\"widthFix\"></Image>\n                            {item.commentCount}\n                          </View>\n                          <View className={`${prefix}__footer-item`}>\n                            <Image src={LikeIcon} mode=\"widthFix\"></Image>\n                            <Text>{item.likeCount}</Text>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  )\n                })}\n              </View>\n              <View\n                className=\"load-more\"\n                onClick={() => {\n                  Taro.navigateTo({\n                    url: routes.community,\n                  })\n                }}\n              >\n                查看更多\n              </View>\n            </View>\n          </Fragment>\n        )}\n\n        {resourceList.length > 0 && (\n          <Fragment>\n            <View className=\"placeholder-block\"></View>\n            <View className=\"info\">\n              <View className=\"info-title\">\n                <View className=\"line\"></View>\n                <View className=\"title\">热门资源</View>\n              </View>\n              <View className=\"info-content\">\n                {resourceList.map((item) => {\n                  return (\n                    <View\n                      className=\"item-wrapper\"\n                      key={item._id}\n                      onClick={() =>\n                        goPage(`${routes.resourceDetail}?id=${item._id}`)\n                      }\n                    >\n                      <View className=\"item\">\n                        {/* <Image className=\"image\" src={item.images} mode=\"widthFix\" /> */}\n                        <View className=\"text\">\n                          <View className=\"title\">{item.name}</View>\n                          <View className=\"date\">\n                            发布日期：<Time time={item.createdAt}></Time>\n                          </View>\n                        </View>\n                        <Image className=\"arrow-right\" src={arrowRight} />\n                      </View>\n                      <View className={`${prefix}__footer`}>\n                        <View className={`${prefix}__footer-right`}>\n                          <View className={`${prefix}__footer-item`}>\n                            <Image\n                              src={ViewIcon}\n                              className=\"view-icon\"\n                              mode=\"widthFix\"\n                            ></Image>\n                            {item.viewCount}\n                          </View>\n                          <View className={`${prefix}__footer-item`}>\n                            <Image src={CommentIcon} mode=\"widthFix\"></Image>\n                            {item.commentCount}\n                          </View>\n                          <View className={`${prefix}__footer-item`}>\n                            <Image src={LikeIcon} mode=\"widthFix\"></Image>\n                            <Text>{item.likeCount}</Text>\n                          </View>\n                        </View>\n                      </View>\n                    </View>\n                  )\n                })}\n              </View>\n              <View\n                className=\"load-more\"\n                onClick={() => {\n                  Taro.switchTab({\n                    url: routes.resource,\n                  })\n                }}\n              >\n                查看更多\n              </View>\n            </View>\n          </Fragment>\n        )}\n\n        <View\n          className=\"shop-icon\"\n          onClick={() => Taro.switchTab({ url: routes.shop })}\n        >\n          <Image src={shopIcon} mode=\"widthFix\" />\n          <Text>寝室必备</Text>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  user: state.user,\n  banners: state.common.banners,\n  loading: state.global.loading,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ getBanner }, dispatch)\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  withShare({\n    title: '理工喵儿，理工人专属小程序',\n  })(Index)\n)\n","import React, { useCallback, useEffect } from 'react'\nimport { View, Image } from '@tarojs/components'\nimport { goWebviewPage } from '@/utils/router'\nimport ImageCache from '@/components/ImageCache'\n\nexport default function SwiperChild(props) {\n  const { item, active } = props\n\n  const linkToWebView = useCallback(() => {\n    const { type, link } = item\n    goWebviewPage(link, undefined, type)\n  }, [item])\n\n  return (\n    <View className=\"slide-item\" onClick={linkToWebView}>\n      <ImageCache\n        src={item.image}\n        className={active ? 'slide-curimage' : 'slide-image'}\n      />\n    </View>\n  )\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"首页\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}