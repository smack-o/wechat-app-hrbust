{"version":3,"file":"pages2/course/index.js","mappings":"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AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmHA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAEA;AAGA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAGA;AAAA;AAGA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAMA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAIA;AAEA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;AC/zBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApBA;AAAA;AAAA","sources":["webpack://wechat-app-hrbust/._src_pages2_course_index.tsx","webpack://wechat-app-hrbust/./src/pages2/course/index.tsx?dbbc","webpack://wechat-app-hrbust/._src_services_week.ts"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Taro from '@tarojs/taro'\nimport { View, Text, Button, Picker, Ad, Navigator } from '@tarojs/components'\nimport { IRootState } from '@/types'\nimport { routes } from '@/utils/router'\nimport request from '@/utils/request'\nimport { cError, showToast } from '@/utils'\nimport { Loading, CaptchaModal } from '@/components'\nimport { getWeekAndTerm } from '@/services/week'\nimport infoIcon from '@/assets/icon/icon_info.png'\nimport errorIcon from '@/assets/icon/error_icon.png'\nimport { setCurrentTerm } from '@/redux/actions/user'\nimport { Dispatch, bindActionCreators } from 'redux'\n\n// images\nimport './index.less'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\n\ntype PropsFromDispatch = ReturnType<typeof mapDispatchToProps>\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  loading: boolean\n  slectedWeek: number\n  thisWeek: number\n  thisWeekNum: number\n  nowDayIndex: number\n  // termId: number,\n  courseData: any[]\n  // detailData: any[],\n  unplanCourse: any[]\n  // detailOpen: boolean,\n  selectOpen: boolean\n  // currentTerm: number,\n  isShowCaptchaModal: boolean\n  captchaImage: string\n}\n\nlet thisWeekStorage = Taro.getStorageSync('course:week') || 3\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nlet interstitialAd: Taro.InterstitialAd\nclass Course extends Component<IProps, PageState> {\n  state: Readonly<PageState> = {\n    loading: false,\n    slectedWeek: thisWeekStorage ? thisWeekStorage - 1 : 0,\n    thisWeek: thisWeekStorage || 1,\n    thisWeekNum: thisWeekStorage || 1,\n    nowDayIndex: new Date().getDay(),\n    // termId: 0,\n    courseData: [],\n    unplanCourse: [],\n    selectOpen: false,\n    // currentTerm: 0,\n    isShowCaptchaModal: false,\n    captchaImage: '',\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.currentTerm !== nextProps.currentTerm) {\n      this.getCourseHandel(nextProps.currentTerm)\n    }\n  }\n\n  courseCardStyleMap = Array.from(new Array(14)).map((_, index) => {\n    return 'class' + (index + 1)\n  })\n\n  // 周\n  weeks = Array.from(new Array(25), (_, index) => index + 1)\n  // 用户信息\n  userInfo: any = {}\n  // 学期\n  terms = [\n    '大一 第1学期',\n    '大一 第2学期',\n    '大二 第1学期',\n    '大二 第2学期',\n    '大三 第1学期',\n    '大三 第2学期',\n    '大四 第1学期',\n    '大四 第2学期',\n    '大五 第1学期',\n    '大五 第2学期',\n  ]\n  dayNum = ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n  time = [\n    ['1', '2'],\n    ['3', '4'],\n    ['5', '6'],\n    ['7', '8'],\n    ['9', '10'],\n  ]\n  month = new Date().getMonth() + 1\n  unplanCourseTitle = [\n    '课程名称',\n    '任课教师',\n    '合班',\n    '上课周次',\n    '上课时间',\n    '上课地点',\n  ]\n\n  getTime = () => {\n    const time = [\n      ['1', '2'],\n      ['3', '4'],\n      ['5', '6'],\n      ['7', '8'],\n      ['9', '10'],\n    ]\n    if (this.state.courseData.length > 10) {\n      time.push(['11', '12'])\n      return time\n    }\n    return time\n  }\n  timeList = () => {\n    const currentTerm = +this.props.currentTerm\n    // 大一\n    if (currentTerm === 0 || currentTerm === 1) {\n      return [\n        ['08:00', '09:35'],\n        ['09:50', '11:25'],\n        ['13:30', '15.05'],\n        ['15:30', '17:05'],\n        ['18:10', '19:45'],\n        ['19:50', '21:25'],\n        // ['08:00', '09:25'],\n        // ['09:50', '11:15'],\n        // ['13:30', '14:55'],\n        // ['15:30', '16:55'],\n        // ['18:10', '19:35'],\n        // ['19:50', '21:15'],\n      ]\n    }\n\n    // 大二\n    if (currentTerm === 2 || currentTerm === 3) {\n      return [\n        ['08:05', '09:40'],\n        ['10:10', '11:45'],\n        ['13:35', '15:10'],\n        ['15:45', '17:20'],\n        ['18:15', '19:50'],\n        ['19:55', '21:30'],\n        // ['08:05', '09:30'],\n        // ['10:10', '11:35'],\n        // ['13:35', '15:00'],\n        // ['15:45', '17:10'],\n        // ['18:15', '19:40'],\n        // ['19:55', '21:20'],\n      ]\n    }\n\n    // 大三\n    if (currentTerm === 4 || currentTerm === 5) {\n      return [\n        ['08:10', '09:45'],\n        ['10:30', '12:05'],\n        ['13:40', '15:15'],\n        ['16:00', '17:35'],\n        ['18:20', '19:55'],\n        ['20:00', '21:35'],\n        // ['08:10', '09:35'],\n        // ['10:30', '11:55'],\n        // ['13:40', '15:05'],\n        // ['16:00', '17:25'],\n        // ['18:20', '19:45'],\n        // ['20:00', '21:25'],\n      ]\n    }\n\n    return [\n      ['08:10', '09:45'],\n      ['10:30', '12:05'],\n      ['13:40', '15:15'],\n      ['16:00', '17:35'],\n      ['18:20', '19:55'],\n      ['20:00', '21:35'],\n      // ['08:15', '09:40'],\n      // ['10:50', '12:15'],\n      // ['13:45', '15:10'],\n      // ['16:15', '17:40'],\n      // ['18:25', '19:50'],\n      // ['20:05', '21:30'],\n    ]\n  }\n\n  async onLoad() {\n    // 在页面onLoad回调事件中创建插屏广告实例\n    interstitialAd = Taro.createInterstitialAd({\n      adUnitId: 'adunit-167f2a17e8f9ecc4',\n    })\n    interstitialAd.onLoad(() => {})\n    interstitialAd.onError(() => {})\n    interstitialAd.onClose(() => {})\n\n    // 分享\n    Taro.showShareMenu({\n      withShareTicket: true,\n    })\n\n    const username = this.props.user.studentInfo.username\n    //  || '1705030215'\n    // 未登陆跳转\n    if (!username) {\n      return Taro.reLaunch({ url: routes.index })\n    }\n\n    // 获取storage数据\n    const userInfo = Taro.getStorageSync(`course:${username}`)\n\n    if (userInfo) {\n      this.userInfo = userInfo || {}\n      this.props.setCurrentTerm(this.userInfo.term)\n    }\n\n    this.setLoading(true)\n\n    // 获取当前周数、以及学期数\n    // TODO: 优化 优先本地取 term 和 week\n    this.getWeekAndTerm()\n\n    const course = this.userInfo.course\n    const unplanCourse = this.userInfo.unplanCourse\n    if (course) {\n      // storage 存在课程数据，直接渲染\n      this.setState({\n        courseData: course,\n        unplanCourse: unplanCourse,\n      })\n      this.setLoading(false)\n    } else {\n      // storage不存在课程数据，发送请求，重新获取，并存入storage\n      this.getCourseHandel(this.props.currentTerm)\n    }\n  }\n\n  onShow() {\n    // 在适合的场景显示插屏广告\n    if (interstitialAd) {\n      interstitialAd.show().catch((err) => {\n        console.log(err)\n      })\n    }\n  }\n\n  // 下拉同步课表\n  async onPullDownRefresh() {\n    this.syncCourse()\n    Taro.stopPullDownRefresh()\n  }\n\n  // 同步课程表\n  syncCourse = async (captcha = '') => {\n    this.setLoading(true)\n    // this.selectOpen = false\n    this.setState({\n      selectOpen: false,\n    })\n\n    const [createNewTermError] = await cError(\n      this.createNewTerm(this.props.currentTerm, captcha)\n    )\n\n    this.setLoading(false)\n    if (createNewTermError) {\n      return\n    }\n\n    await this.getCourseHandel(this.props.currentTerm)\n  }\n\n  // 创建新学期\n  createNewTerm = async (term: number, captcha = '') => {\n    if (term === undefined) return\n    const reqData = { term, captcha }\n\n    const [err, res] = await cError(\n      request({\n        url: '/api/hrbust/updateCourse',\n        data: reqData,\n      })\n    )\n\n    const { status } = res\n\n    if (status === 404) {\n      Taro.showToast({\n        title: '课表为空',\n        image: infoIcon,\n        duration: 1000,\n      })\n      return Promise.reject('课表为空')\n    }\n\n    // 用户名密码错误需要重新登录\n    if (status === 400006) {\n      Taro.showModal({\n        title: '账号密码错误',\n        content: '可能是您近期更改教务在线密码了，是否重新登录？',\n        success(r) {\n          if (r.confirm) {\n            Taro.reLaunch({\n              url: routes.login,\n            })\n            // console.log('用户点击确定')\n          } else if (r.cancel) {\n            // console.log('用户点击取消')\n            Taro.switchTab({\n              url: routes.index,\n            })\n          }\n        },\n      })\n      return Promise.reject('账号密码错误')\n    }\n\n    // 登录失效，需要输入验证码\n    if (res.status === 400005) {\n      this.showCaptchaModal(res.data.captcha)\n      return Promise.reject('登录失效，需要输入验证码')\n    }\n\n    // 错误验证码\n    if (res.status === 400001) {\n      showToast({\n        title: '验证码输入错误，请重新输入',\n        complete: () => {\n          this.showCaptchaModal(res.data.captcha)\n        },\n      })\n      return Promise.reject('验证码输入错误，请重新输入')\n    }\n\n    if (err) {\n      Taro.showToast({\n        title: '抓取课表失败',\n        image: errorIcon,\n        duration: 1000,\n      })\n      return Promise.reject('抓取课表失败')\n    }\n\n    return Promise.resolve(res)\n  }\n\n  // 验证码弹窗确认\n  onCaptchaModalSubmit = (captcha: string) => {\n    this.setState({\n      isShowCaptchaModal: false,\n    })\n    this.syncCourse(captcha)\n  }\n\n  // 展示验证码弹窗\n  showCaptchaModal = (captcha: string) => {\n    this.setState({\n      captchaImage: captcha,\n      isShowCaptchaModal: true,\n    })\n  }\n\n  // 获取周、学期\n  async getWeekAndTerm() {\n    const [err, res] = await cError(getWeekAndTerm(this.userInfo.term))\n\n    if (err) {\n      Taro.showModal({\n        content: '服务器故障，获取周数错误，请稍后重试。',\n        showCancel: false,\n        success: () => {\n          Taro.reLaunch({ url: routes.index })\n        },\n      })\n      return Promise.reject('获取周数错误')\n    }\n\n    const { week } = res\n\n    // 设置当前周数，如果教务在线获取的周数超过25周，当前周数设置为25\n    const MAX_WEEK_NUM = 25\n    const isExceed = week > MAX_WEEK_NUM\n    const thisWeek = isExceed ? MAX_WEEK_NUM : week\n    const slectedWeek = isExceed ? MAX_WEEK_NUM - 1 : week - 1\n\n    this.setState({\n      thisWeek: thisWeek,\n      thisWeekNum: thisWeek,\n      slectedWeek: slectedWeek,\n      // currentTerm: term,\n    })\n\n    Taro.setStorage({ key: 'course:week', data: thisWeek })\n    Taro.setStorage({ key: 'course:week.timestamp', data: Date.now() })\n    return Promise.resolve()\n  }\n\n  // 选择第几周\n  changeWeek = (event: TaroBaseEventOrig) => {\n    this.setState({\n      slectedWeek: event.detail.value,\n      thisWeek: parseInt(String(this.weeks[event.detail.value])),\n      selectOpen: false,\n    })\n  }\n\n  // 右上角加号，更新学期\n  selectListSwitch = () => {\n    this.setState({\n      selectOpen: !this.state.selectOpen,\n    })\n  }\n\n  setLoading = (loading: boolean) => {\n    this.setState({ loading })\n  }\n\n  // 获取课表\n  getCourseHandel = async (term) => {\n    // console.log(term)\n    this.setLoading(true)\n    this.setState({\n      selectOpen: false,\n    })\n\n    const [getCourseError] = await cError(this.getCourse(term))\n    this.setLoading(false)\n    if (getCourseError) {\n      if (getCourseError.message === '课表为空') {\n        Taro.showToast({\n          title: '课表为空',\n          image: infoIcon,\n          duration: 1000,\n        })\n      }\n      return\n    }\n  }\n\n  // 获取课表接口处理\n  getCourse = async (term) => {\n    const [err, res] = await cError(\n      request({\n        url: '/api/hrbust/course',\n        data: { term },\n      })\n    )\n\n    if (err) {\n      Taro.showToast({\n        title: '获取课表失败',\n        image: errorIcon,\n        duration: 1000,\n      })\n      return Promise.reject('获取课表失败')\n    }\n\n    const { course: getCourseData, courseTermId, unplanCourse } = res.data\n    this.setState({\n      // termId: courseTermId,\n      unplanCourse: unplanCourse || [],\n    })\n    // const getCourseData = res.data.data.course\n    // 课表为空的话，提示\n    if (!getCourseData && !unplanCourse) {\n      Taro.showModal({\n        content: '该学期未查询到课表，请创建该学期',\n        showCancel: false,\n        success: () => {\n          Taro.navigateTo({ url: routes.courseTerm })\n        },\n      })\n\n      return\n    }\n\n    // 处理返回数据\n    let courseList: any[] = []\n    let courseIdList = {}\n    let courseCardStyleIndex = 0\n\n    for (let i = 0; i < 10; i++) {\n      courseList[i] = []\n    }\n\n    getCourseData.forEach((courseItem) => {\n      if (!courseIdList[courseItem.courseId]) {\n        let cardClassName =\n          this.courseCardStyleMap[\n            courseCardStyleIndex % this.courseCardStyleMap.length\n          ]\n        courseIdList[courseItem.courseId] = cardClassName\n        courseItem.class = cardClassName\n        courseCardStyleIndex++\n      } else {\n        courseItem.class = courseIdList[courseItem.courseId]\n      }\n\n      // 兼容 12 节课的情况\n      if (!courseList[courseItem.sectionstart]) {\n        courseList[courseItem.sectionstart] = []\n      }\n      courseList[courseItem.sectionstart].push(courseItem)\n    })\n\n    this.setState({\n      courseData: courseList,\n    })\n\n    // 学期数、课程、未安排课程存入Storage\n    const userInfo = { term, course: courseList, unplanCourse }\n    this.userInfo = userInfo\n    Taro.setStorage({\n      key: `course:${this.props.user.studentInfo.username}`,\n      data: userInfo,\n    })\n\n    Taro.showToast({ title: '获取课表成功', icon: 'success', duration: 1000 })\n    return Promise.resolve()\n  }\n\n  // 课程详情\n  detailHandler = (dayIndex, timeIndex) => {\n    Taro.navigateTo({\n      url: `${routes.courseDetail}?dayIndex=${dayIndex}&timeIndex=${timeIndex}&thisWeek=${this.state.thisWeek}`,\n    })\n  }\n\n  currentWeekList() {\n    let week\n    const { thisWeekNum, slectedWeek } = this.state\n    if (thisWeekNum === 25) {\n      if (slectedWeek === 24) {\n        week = 0\n      } else {\n        week = +slectedWeek + 1\n      }\n    } else {\n      week = slectedWeek - thisWeekNum + 1\n    }\n    const aDayTimeStamp = 24 * 60 * 60 * 1000\n    const aWeekTimeStamp = 7 * aDayTimeStamp\n    const timeStamp = Date.now() + week * aWeekTimeStamp\n    const currentDay = new Date(timeStamp).getDay()\n    const month =\n      new Date(\n        timeStamp + ((aDayTimeStamp * (currentDay + 6)) % 7)\n      ).getMonth() + 1\n\n    const days = Array.from(new Array(7)).map((_, i) => {\n      return new Date(\n        timeStamp + aDayTimeStamp * (i - ((currentDay + 6) % 7))\n      ).getDate()\n    })\n\n    return {\n      days,\n      month,\n    }\n  }\n\n  currentPart() {\n    const date = new Date()\n    const hour = date.getHours()\n    const minute =\n      date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()\n    const dateNum = parseInt('' + hour + minute)\n\n    if (dateNum >= 600 && dateNum <= 950) {\n      return 0\n    } else if (dateNum > 950 && dateNum <= 1230) {\n      return 1\n    } else if (dateNum > 1230 && dateNum <= 1520) {\n      return 2\n    } else if (dateNum > 1520 && dateNum <= 1730) {\n      return 3\n    } else if (dateNum > 1730 && dateNum <= 1850) {\n      return 4\n    } else {\n      return -1\n    }\n  }\n\n  render() {\n    const {\n      slectedWeek,\n      thisWeekNum,\n      // currentTerm,\n      selectOpen,\n      nowDayIndex,\n      unplanCourse,\n      courseData,\n      thisWeek,\n      loading,\n      isShowCaptchaModal,\n      captchaImage,\n    } = this.state\n\n    const { currentTerm } = this.props\n\n    const currentWeekList = this.currentWeekList()\n    const currentPart = this.currentPart()\n    const timeList = this.timeList()\n    const time = this.getTime()\n\n    if (loading) {\n      return <Loading loading />\n    }\n    return (\n      <View className=\"course-page\">\n        <CaptchaModal\n          captchaImage={captchaImage}\n          onSubmit={this.onCaptchaModalSubmit}\n          isOpened={isShowCaptchaModal}\n        ></CaptchaModal>\n        <View className=\"wrap\">\n          <View className=\"refresh\">更新课表请下拉刷新</View>\n          <View className=\"picker-wrapper\">\n            <View className=\"wrapper-left\"></View>\n            <Picker\n              mode=\"selector\"\n              onChange={this.changeWeek}\n              value={slectedWeek}\n              range={this.weeks}\n            >\n              <View>\n                <View>\n                  第\n                  <text className=\"num\">\n                    {' '}\n                    {this.weeks.length > 0 ? this.weeks[slectedWeek] : 0}{' '}\n                  </text>\n                  周{this.weeks[slectedWeek] == thisWeekNum && '(当前)'}\n                </View>\n                <View>{this.terms[currentTerm]}</View>\n              </View>\n            </Picker>\n            <View\n              className={`wrapper-right ${selectOpen ? 'rotate' : ''}`}\n              onClick={this.selectListSwitch}\n            >\n              +\n            </View>\n          </View>\n          <View className=\"tips\">\n            *每节课上课时间仅供参考，具体时间以不同年级实际情况为准\n          </View>\n          <View className=\"course-header\">\n            <View className=\"item\">{currentWeekList.month}月</View>\n            {this.dayNum.map((dayItem, dayIndex) => {\n              return (\n                <View\n                  className={`item ${\n                    dayIndex + 1 === nowDayIndex ? 'now-day' : ''\n                  }`}\n                  key={dayIndex}\n                >\n                  <View>{dayItem}</View>\n                  <View>{currentWeekList.days[dayIndex]}日</View>\n                </View>\n              )\n            })}\n          </View>\n          <View className=\"course-body\">\n            {time.map((timeItem, timeIndex) => {\n              return (\n                <View className=\"line-item\" key={timeItem[0]}>\n                  {[0, 1, 2, 3, 4, 5, 6, 7].map((_, dayIndex) => {\n                    if (dayIndex === 0) {\n                      // <!-- 左侧时间列表 -->\n                      return (\n                        <View\n                          className={`time item ${\n                            currentPart === timeIndex ? 'now-time' : ''\n                          }`}\n                          key={dayIndex}\n                        >\n                          <View className=\"time-item\">\n                            <View>\n                              第{timeItem[0]}/{timeItem[1]}节\n                            </View>\n                          </View>\n                          <View className=\"time-item-num\">\n                            <View>{timeList[timeIndex][0]}</View>\n                            <View>~</View>\n                            <View>{timeList[timeIndex][1]}</View>\n                          </View>\n                        </View>\n                      )\n                    }\n                    // <!-- 课表内容 -->\n                    return (\n                      <View\n                        className=\"item\"\n                        onClick={() =>\n                          this.detailHandler(dayIndex, timeItem[0])\n                        }\n                        key={dayIndex}\n                      >\n                        <View className=\"item-content\">\n                          {courseData.length > 0 &&\n                            courseData[timeItem[0]].map((item, index) => {\n                              if (item.day != dayIndex) {\n                                return null\n                              }\n                              if (+item.period[thisWeek] === 1) {\n                                return (\n                                  <View\n                                    key={index}\n                                    className={`this-week ${item.class} ${\n                                      item.day === nowDayIndex &&\n                                      (currentPart + 1) * 2 === item.sectionend\n                                        ? 'use-border'\n                                        : ''\n                                    }`}\n                                  >\n                                    <Text>\n                                      《{item.name}》@{item.locale}\n                                    </Text>\n                                  </View>\n                                )\n                              }\n\n                              return (\n                                <View className=\"no-this-week\" key={index}>\n                                  <text>\n                                    《{item.name}》@{item.locale}\n                                  </text>\n                                </View>\n                              )\n                            })}\n                        </View>\n                      </View>\n                    )\n                  })}\n                </View>\n              )\n            })}\n          </View>\n\n          {unplanCourse.length > 0 && (\n            <View className=\"unplan-course\">\n              <View className=\"title\">没有具体上课时间或地点的课程</View>\n              <View className=\"content\">\n                <View className=\"content-header\">\n                  {this.unplanCourseTitle.map((item, index) => {\n                    return <View key={index}>{item}</View>\n                  })}\n                </View>\n                {unplanCourse.map((unplanCourseObj, i) => {\n                  return (\n                    <View className=\"unplan-item\" key={i}>\n                      {Object.keys(unplanCourseObj).map((key) => {\n                        return (\n                          <View key={key}>\n                            <Text className=\"text\">{unplanCourseObj[key]}</Text>\n                          </View>\n                        )\n                      })}\n                    </View>\n                  )\n                })}\n              </View>\n            </View>\n          )}\n\n          {/* <!-- SelectList --> */}\n          {selectOpen && (\n            <View className=\"select-list\">\n              <View\n                className=\"empty-top\"\n                onClick={this.selectListSwitch}\n              ></View>\n              <View className=\"select-wrapper\">\n                <Navigator url={routes.courseTerm} className=\"select-item\">\n                  <View className=\"select-text\">选择学期</View>\n                  <View className=\"select-data\">{this.terms[currentTerm]}</View>\n                  <View className=\"select-arrow\"></View>\n                </Navigator>\n                <Picker\n                  mode=\"selector\"\n                  onChange={this.changeWeek}\n                  value={slectedWeek}\n                  range={this.weeks}\n                >\n                  <View className=\"select-item\">\n                    <View className=\"select-text\">选择周数</View>\n                    <View className=\"select-data\">\n                      第\n                      <Text className=\"num\">\n                        {' '}\n                        {this.weeks.length > 0\n                          ? this.weeks[slectedWeek]\n                          : 0}{' '}\n                      </Text>\n                      周{this.weeks[slectedWeek] == thisWeekNum && '(当前)'}\n                    </View>\n                    <View className=\"select-arrow\"></View>\n                  </View>\n                </Picker>\n                <Button type=\"primary\" onClick={() => this.syncCourse()}>\n                  同步教务在线课表\n                </Button>\n              </View>\n              <View\n                className=\"empty-bottom\"\n                onClick={this.selectListSwitch}\n              ></View>\n            </View>\n          )}\n          <Ad className=\"advertising\" unitId=\"adunit-f1ef7db925a525a8\"></Ad>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  user: state.user,\n  currentTerm: state.user.currentTerm,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ setCurrentTerm }, dispatch)\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(Course)\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"课程表\",\"enablePullDownRefresh\":true};\n\n\nvar inst = Page(createPageConfig(component, 'pages2/course/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","import { cError } from '@/utils'\nimport request from '@/utils/request'\nimport { store } from '@/redux/store'\nimport { setCurrentTerm } from '@/redux/actions/user'\n\n// 获取周、学期\nexport const getWeekAndTerm = async (defaultTerm?: number) => {\n  const [err, res] = await cError(request({ url: '/api/hrbust/week' }))\n\n  if (err) {\n    return Promise.reject('获取周数错误')\n  }\n\n  const { week: onlineWeek,term: onlineTerm } = res.data\n\n  // 设置当前周数，如果教务在线获取的周数超过25周，当前周数设置为25\n  const MAX_WEEK_NUM = 25\n  const isExceed = onlineWeek > MAX_WEEK_NUM\n  const term = defaultTerm || onlineTerm\n\n  const thisWeek = isExceed ? MAX_WEEK_NUM : onlineWeek\n  await store.dispatch(setCurrentTerm(term))\n  return Promise.resolve({\n    term,\n    week: thisWeek,\n  })\n}\n"],"names":[],"sourceRoot":""}