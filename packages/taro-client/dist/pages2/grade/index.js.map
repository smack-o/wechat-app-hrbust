{"version":3,"file":"pages2/grade/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AA2BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA2BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAFA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAIA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3MA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA8MA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAMA;AAAA;AAAA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAGA;AAGA;AAIA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAEA;AAAA;AAAA;AAEA;AAGA;AAGA;AAMA;AAGA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAEA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;ACngBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages2_grade_index.tsx","webpack://wechat-app-hrbust/./src/pages2/grade/index.tsx?bb9f","webpack://wechat-app-hrbust/.._.._node_modules_.pnpm_@babel+runtime@7.26.9_node_modules_@babel_runtime_helpers_esm_objectDestructuringEmpty.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  View,\n  Ad,\n  Image,\n  Text,\n  Picker,\n  Button,\n  ScrollView\n} from '@tarojs/components'\nimport Taro from '@tarojs/taro'\nimport { IRootState } from '@/types'\nimport { Dispatch, bindActionCreators } from 'redux'\nimport { getGrades } from '@/redux/actions/user'\nimport { Loading, CaptchaModal } from '@/components'\nimport { cError, showToast, dateFormat } from '@/utils'\nimport { routes, goWebviewPage, goPage } from '@/utils/router'\n\nimport pingguImg from './res/pinggu.jpg'\nimport tipLogoIcon from './res/tip_logo.png'\nimport tipArrowIcon from './res/tip_arrow.png'\nimport tipButtonIcon from './res/tip_button_icon.png'\n\nimport './index.less'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\n\ntype PropsFromDispatch = ReturnType<typeof mapDispatchToProps>\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  loading: boolean\n  captchaImage: string\n  isShowCaptchaModal: boolean\n  year: number\n  term: number\n  showEmpty?: boolean\n  needComments: boolean\n  AVERAGE_GPA?: string\n  AVERAGE_GRADE?: string\n  OBLIGATORY_AVERAGE_GPA?: string\n  showGDP?: boolean\n  myGrades: any[]\n  maxRemarkLength: number\n  isFirstFull: boolean\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nconst passSignStyle = {\n  及格: '#cccccc',\n  及格标志: '#999999',\n  无成绩: '#e36363',\n  不及格: '#e36363'\n}\n\nconst getTerms = () => {\n  let terms: string[] = []\n  let date = new Date()\n  for (let i = date.getFullYear(); i >= date.getFullYear() - 5; i -= 1) {\n    terms.push(`${i} 秋`)\n    terms.push(`${i} 春`)\n  }\n  return terms\n}\n\nconst terms = getTerms()\n\nclass Grade extends Component<IProps, PageState> {\n  state: Readonly<PageState> = {\n    loading: false,\n    captchaImage: '',\n    isShowCaptchaModal: false,\n    showEmpty: false,\n    needComments: false,\n    myGrades: [\n      {\n        gradeName: '课程',\n        mark: '成绩',\n        passSign: '及格标志',\n        credit: '学分',\n        gpa: 'GPA',\n        courseAttribute: '选课属性',\n        courseRemark: '备注',\n        courseCharacter: '考试性质'\n      }\n    ],\n    maxRemarkLength: 0,\n    year: +dateFormat(new Date(), 'yyyy'),\n    term: 1,\n    isFirstFull: (() => {\n      const hasFullGrade = Taro.getStorageSync('grade:hasFullGrade')\n      if (!hasFullGrade) {\n        Taro.setStorageSync('grade:hasFullGrade', true)\n      }\n      return !hasFullGrade\n    })()\n  }\n\n  async onLoad() {\n    let time = new Date()\n    // time.setFullYear(2008,1,9);\n    const natureYear = +dateFormat(time, 'yyyy')\n    const computedDate = +dateFormat(time, 'Mdd')\n    let year: number = natureYear\n    let term: number = 1\n    if (computedDate <= 220) {\n      year = natureYear - 1\n      term = 2\n    } else if (computedDate > 220 && computedDate <= 820) {\n      year = natureYear\n      term = 1\n    } else if (computedDate > 820) {\n      year = natureYear\n      term = 2\n    }\n    this.setState({\n      year,\n      term\n    })\n\n    await this.getList(year, term)\n  }\n\n  // 拉取数据、错误处理等\n  getList = async (year: number, term: number, captcha = '') => {\n    this.setLoading(true)\n    const [err, res] = await cError(\n      this.props.getGrades(year - 1980, term, captcha)\n    )\n    this.setLoading(false)\n    if (err && err.status === 400) {\n      this.setState({\n        needComments: true\n      })\n      return\n    }\n\n    // 登录失效，需要输入验证码\n    if (res.status === 400005) {\n      this.showCaptchaModal(res.data.captcha)\n      return\n    }\n\n    // 错误验证码\n    if (res.status === 400001) {\n      showToast({\n        title: '验证码输入错误，请重新输入',\n        icon: 'none',\n        complete: () => {\n          this.showCaptchaModal(res.data.captcha)\n        }\n      })\n      return\n    }\n    // 用户名密码错误需要重新登录\n    if (res.status === 400006) {\n      Taro.showModal({\n        title: '账号密码错误',\n        content: '可能是您近期更改教务在线密码了，是否重新登录？',\n        success(mRes) {\n          if (mRes.confirm) {\n            // console.log('用户点击确定')\n            Taro.reLaunch({\n              url: routes.login\n            })\n          } else if (res.cancel) {\n            // console.log('用户点击取消')\n            Taro.switchTab({\n              url: routes.index\n            })\n          }\n        }\n      })\n      return\n    }\n\n    if (!this.props.grades?.grades?.length) {\n      this.setState({\n        showEmpty: true\n      })\n    } else {\n      this.setState({\n        showEmpty: false\n      })\n\n      const {\n        AVERAGE_GPA,\n        AVERAGE_GRADE,\n        OBLIGATORY_AVERAGE_GPA,\n        grades\n      } = this.props.grades\n      let maxRemarkLength = 0\n      const myGrades = grades.map(item => {\n        let itemObj = {\n          gradeName: item.courseName ? item.courseName : '--',\n          mark: item.grade ? item.grade : '--',\n          passSign: item.passFlag ? item.passFlag : '--',\n          credit: item.credit ? item.credit : '--',\n          gpa: item.gpa ? item.gpa : '--',\n          courseAttribute: item.courseAttribute ? item.courseAttribute : '--',\n          courseRemark: item.courseRemark ? item.courseRemark : '--',\n          courseCharacter: item.courseCharacter ? item.courseCharacter : '--'\n        }\n\n        maxRemarkLength =\n          itemObj.courseRemark.length > maxRemarkLength\n            ? itemObj.courseRemark.length\n            : maxRemarkLength\n        return itemObj\n      })\n\n      myGrades.unshift({\n        gradeName: '课程',\n        mark: '成绩',\n        passSign: '及格标志',\n        credit: '学分',\n        gpa: 'GPA',\n        courseAttribute: '选课属性',\n        courseRemark: '备注',\n        courseCharacter: '考试性质'\n      })\n\n      const nextState: any = {\n        AVERAGE_GPA: `${AVERAGE_GPA === 'NaN' ? '--' : AVERAGE_GPA}`,\n        AVERAGE_GRADE: `${AVERAGE_GRADE === 'NaN' ? '--' : AVERAGE_GRADE}`,\n        OBLIGATORY_AVERAGE_GPA: `${\n          OBLIGATORY_AVERAGE_GPA === 'NaN' ? '--' : OBLIGATORY_AVERAGE_GPA\n        }`,\n        myGrades,\n        maxRemarkLength\n      }\n\n      nextState.showGDP = !(\n        nextState.AVERAGE_GPA === '--' &&\n        nextState.AVERAGE_GRADE === '--' &&\n        nextState.OBLIGATORY_AVERAGE_GPA === '--'\n      )\n\n      this.setState(nextState)\n    }\n  }\n\n  // loading\n  setLoading = (loading: boolean) => this.setState({ loading })\n\n  // 展示验证码弹窗\n  showCaptchaModal = (captcha: string) => {\n    this.setState({\n      captchaImage: captcha,\n      isShowCaptchaModal: true\n    })\n  }\n\n  // 验证码弹窗确认\n  onCaptchaModalSubmit = (captcha: string) => {\n    this.setState({\n      isShowCaptchaModal: false\n    })\n    const { year, term } = this.state\n    this.getList(year, term, captcha)\n  }\n\n  // 跳转到弹窗页面\n  toPingGu = () => {\n    goWebviewPage(\n      'https://mp.weixin.qq.com/s?__biz=MzUwOTk3NTEzNg==&mid=2247483740&idx=1&sn=f65b45ddfe6e6429a54864f4f7074d4c&chksm=f90b4e53ce7cc7456f6ec8d3e8c8db309092001f62f51fe1df89610ef86ebbcac543c734ec50&token=2073460005&lang=zh_CN#rd',\n      '去评教'\n    )\n  }\n\n  // 切换学期\n  changeTerm = e => {\n    const value = terms[e.detail.value]\n    const year = +value.split(' ')[0]\n    const term = value.split(' ')[1] === '春' ? 1 : 2\n    this.setState({\n      year,\n      term\n    })\n    this.getList(year, term)\n  }\n\n  // 关闭tip提示\n  closeTipModal = () => {\n    this.setState({\n      isFirstFull: false\n    })\n  }\n\n  // 成绩分享\n  onGradeShare = () => {\n    const { AVERAGE_GPA, myGrades } = this.state\n    // TODO: change usl\n    Taro.setStorageSync(\n      'grade:data',\n      JSON.stringify({\n        grade: myGrades,\n        gpa: AVERAGE_GPA\n      })\n    )\n    goPage(routes.gradeShare)\n  }\n\n  render() {\n    const {} = this.props\n    const {\n      loading,\n      captchaImage,\n      isShowCaptchaModal,\n      needComments,\n      myGrades = [],\n      showEmpty,\n      AVERAGE_GPA,\n      AVERAGE_GRADE,\n      OBLIGATORY_AVERAGE_GPA,\n      showGDP,\n      year,\n      term = '',\n      maxRemarkLength,\n      isFirstFull\n    } = this.state\n\n    if (needComments) {\n      return (\n        <View className=\"grade-page\">\n          <View className=\"pinggu-wrapper\">\n            <View className=\"pinggu\" onClick={this.toPingGu}>\n              <Image className=\"pinggu_image\" src={pingguImg} mode=\"widthFix\" />\n              <View className=\"color-blue\">查看如何评教</View>\n              <View>{needComments}</View>\n              <Text user-select className=\"pinggu__info\">\n                请您去教务在线官网进行评估课程\n              </Text>\n            </View>\n            <View>\n              <Text user-select className=\"pinggu__info\">\n                教务在线地址：http://jwzx.hrbust.edu.cn\n              </Text>\n            </View>\n          </View>\n        </View>\n      )\n    }\n\n    return (\n      <View className=\"grade-page\">\n        <CaptchaModal\n          captchaImage={captchaImage}\n          onSubmit={this.onCaptchaModalSubmit}\n          isOpened={isShowCaptchaModal}\n        ></CaptchaModal>\n        <Loading loading={loading}></Loading>\n\n        <View className=\"container\">\n          <View className=\"selecter\">\n            {/* @ts-ignore */}\n            <Picker\n              className=\"picker-year\"\n              onChange={this.changeTerm}\n              range={terms}\n            >\n              <View className=\"select-button\">\n                <Text className=\"select-text\">\n                  学期{year} {term === 1 ? '春' : '秋'}(点击切换)\n                </Text>\n              </View>\n            </Picker>\n            {AVERAGE_GPA &&\n              AVERAGE_GPA !== '--' &&\n              myGrades &&\n              myGrades.length >= 1 && (\n                <Button className=\"extra-button\" onClick={this.onGradeShare}>\n                  生成成绩单\n                </Button>\n              )}\n          </View>\n          {showEmpty && (\n            <View className=\"empty\">\n              <Text className=\"select-text\">还没有这学期的成绩</Text>\n            </View>\n          )}\n          {!showEmpty && (\n            <View className=\"grade-list\">\n              {showGDP && (\n                <View className=\"total-wrapper\">\n                  <View className=\"total-item\">\n                    <Text className=\"num-text\">{AVERAGE_GRADE}</Text>\n                    <Text className=\"total-text\">加权平均分</Text>\n                  </View>\n                  <View className=\"total-item\">\n                    <Text className=\"num-text\">{AVERAGE_GPA}</Text>\n                    <Text className=\"total-text\">平均学分绩点GPA(全部)</Text>\n                  </View>\n                  <View className=\"total-item\">\n                    <Text className=\"num-text\">{OBLIGATORY_AVERAGE_GPA}</Text>\n                    <Text className=\"total-text\">平均学分绩点GPA(仅必修)</Text>\n                  </View>\n                </View>\n              )}\n              <View className=\"grade-list-wrapper\">\n                <View className=\"grade-title-list\">\n                  {myGrades.map((item, index) => {\n                    return (\n                      <View\n                        key={index}\n                        className={`title-row ${\n                          index % 2 === 0 ? 'list-row-even' : 'list-row-odd'\n                        }`}\n                        style={\n                          index === 0\n                            ? 'color: #999999; background-color: #fff; padding-top: 40rpx'\n                            : 'color: #333333'\n                        }\n                      >\n                        <View className=\"list-item gradeName\">\n                          <Text className=\"list-text\">{item.gradeName}</Text>\n                        </View>\n                      </View>\n                    )\n                  })}\n                </View>\n                <ScrollView scroll-x=\"true\" className=\"grade-list\">\n                  {myGrades.map((item, index) => {\n                    return (\n                      <View\n                        key={index}\n                        className={`list-row ${\n                          index % 2 === 0 ? 'list-row-even' : 'list-row-odd'\n                        }`}\n                        style={`color: ${\n                          index === 0 ? '#999999' : '#333333'\n                        };background-color: ${index === 0 &&\n                          '#fff'};padding-top:${index === 0 &&\n                          '40rpx'};width: ${\n                          maxRemarkLength > 8 ? '1700rpx' : '1450rpx'\n                        };`}\n                      >\n                        <View\n                          className={`list-item gradeName ${\n                            index % 2 === 0 ? 'list-row-even' : 'list-row-odd'\n                          }`}\n                          style={index === 0 ? 'background-color: #fff' : ''}\n                        >\n                          <Text className=\"list-text\">{item.gradeName}</Text>\n                        </View>\n                        <View className=\"list-item mark\">\n                          <Text className=\"list-text\">{item.mark}</Text>\n                        </View>\n                        <View className=\"list-item passSign\">\n                          <Text\n                            className=\"list-text\"\n                            style={`color:${passSignStyle[item.passSign]}`}\n                          >\n                            {item.passSign}\n                          </Text>\n                        </View>\n                        <View className=\"list-item credit\">\n                          <Text className=\"list-text\">{item.credit}</Text>\n                        </View>\n                        <View className=\"list-item gpa\">\n                          <Text className=\"list-text\">{item.gpa}</Text>\n                        </View>\n                        <View className=\"list-item courseAttribute\">\n                          <Text className=\"list-text\">\n                            {item.courseAttribute}\n                          </Text>\n                        </View>\n                        <View\n                          className=\"list-item courseRemark\"\n                          style={\n                            maxRemarkLength > 8\n                              ? 'width: 360rpx; min-width: 360rpx'\n                              : 'width: 110rpx; min-width: 110rpx'\n                          }\n                        >\n                          <Text className=\"list-text\">{item.courseRemark}</Text>\n                        </View>\n                        <View className=\"list-item courseCharacter\">\n                          <Text className=\"list-text\">\n                            {item.courseCharacter}\n                          </Text>\n                        </View>\n                      </View>\n                    )\n                  })}\n                </ScrollView>\n              </View>\n            </View>\n          )}\n        </View>\n\n        {/* 新手引导 */}\n        {isFirstFull && (\n          <View className=\"tip-modal\" onClick={this.closeTipModal}>\n            <Image className=\"tip-logo\" src={tipLogoIcon} mode=\"widthFix\" />\n            <Image className=\"tip-arrow\" src={tipArrowIcon} mode=\"widthFix\" />\n            <Image className=\"tip-button\" src={tipButtonIcon} mode=\"widthFix\" />\n          </View>\n        )}\n        <Ad className=\"advertising\" unitId=\"adunit-764ee39c0d27492c\"></Ad>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  grades: state.user.grades\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ getGrades }, dispatch)\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(Grade)\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"成绩\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages2/grade/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };"],"names":[],"sourceRoot":""}