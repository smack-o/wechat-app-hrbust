{"version":3,"file":"pages2/login/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAapFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;ACxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages2_login_index.tsx","webpack://wechat-app-hrbust/./src/pages2/login/index.tsx?8725"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { View, Image } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\nimport { IRootState } from '@/types'\nimport { AtInput, AtButton, AtIcon } from 'taro-ui'\nimport { getCaptcha, login } from '@/services/user'\nimport { cError } from '@/utils'\nimport { routes } from '@/utils/router'\nimport { init } from '@/redux/actions/user'\nimport { Dispatch, bindActionCreators } from 'redux'\n\nimport './index.less'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\n\ntype PropsFromDispatch = ReturnType<typeof mapDispatchToProps>\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  username: string\n  password: string\n  captcha: string\n  captchaImage: string\n  showPassword: boolean\n}\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nclass Login extends Component<IProps, PageState> {\n  state = {\n    username: '',\n    password: '',\n    captcha: '',\n    captchaImage: '',\n    showPassword: false\n  }\n\n  componentDidShow() {\n    const loginInfo = JSON.parse(Taro.getStorageSync('user:loginInfo') || '{}')\n    this.setState(loginInfo)\n  }\n\n  async onLoad() {\n    const { user } = this.props\n    await user.getUserInfoPromise\n    // this.getCaptcha()\n  }\n\n  getCaptcha = async () => {\n    Taro.showLoading({\n      title: '加载中...'\n    })\n    const [err, res] = await cError(getCaptcha())\n    Taro.hideLoading()\n    if (err) {\n      Taro.showToast({\n        title: '服务暂时挂了呀~请退出稍后重试！',\n        icon: 'none'\n      })\n    }\n    this.setState({\n      captchaImage: res.data.captcha\n    })\n  }\n\n  onInputChange = (key: keyof PageState, value) => {\n    const state = {\n      [key]: value\n    } as PageState\n    this.setState(state)\n  }\n\n  onSubmit = async (e: TaroBaseEventOrig) => {\n    Taro.showLoading({\n      title: '登陆中...'\n    })\n    // 授权失败不允许登录\n    if (/fail auth deny/.test(e.detail.errMsg)) {\n      return\n    }\n    if (e.detail.userInfo) {\n      Taro.setStorageSync('userInfo', e.detail.userInfo)\n    }\n\n    console.log(e.detail.userInfo)\n\n    const { username, password, captcha } = this.state\n\n    Taro.setStorageSync(\n      'loginInfo',\n      JSON.stringify({\n        username,\n        password\n      })\n    )\n\n    const [err] = await cError(login({ username, password, captcha }))\n    if (err) {\n      Taro.showModal({\n        content: err.message,\n        showCancel: false\n      })\n\n      Taro.hideLoading()\n\n      this.getCaptcha()\n      return\n    }\n\n    await this.props.init()\n\n    Taro.hideLoading()\n\n    Taro.reLaunch({\n      url: routes.index\n    })\n  }\n\n  changePassWordType = () => {\n    this.setState({\n      showPassword: !this.state.showPassword\n    })\n  }\n\n  render() {\n    const {\n      username,\n      password,\n      captcha,\n      captchaImage,\n      showPassword\n    } = this.state\n\n    return (\n      <View className=\"login-page\">\n        <View className=\"title\">账号学号</View>\n        <View className=\"desc\">\n          学号可以暂时不绑定，未绑定学号理工喵部分服务不可用\n        </View>\n        <AtInput\n          name=\"username\"\n          title=\"学号\"\n          type=\"number\"\n          placeholder=\"请输入学号\"\n          value={username}\n          onChange={e => this.onInputChange('username', e)}\n        />\n\n        <AtInput\n          name=\"password\"\n          title=\"密码\"\n          type={showPassword ? 'text' : 'password'}\n          placeholder=\"请输入密码\"\n          value={password}\n          onChange={e => this.onInputChange('password', e)}\n        >\n          <AtIcon\n            value=\"eye\"\n            size=\"26\"\n            onClick={this.changePassWordType}\n          ></AtIcon>\n        </AtInput>\n        <AtInput\n          name=\"value\"\n          title=\"验证码\"\n          type=\"text\"\n          placeholder=\"请输入验证码\"\n          value={captcha}\n          onChange={e => this.onInputChange('captcha', e)}\n        >\n          {!captchaImage ? (\n            <AtButton className=\"captcha-btn\" onClick={this.getCaptcha}>\n              点击获取验证码\n            </AtButton>\n          ) : (\n            <Image src={captchaImage} onClick={this.getCaptcha}></Image>\n          )}\n          {/* <Image src={captchaImage} onClick={this.getCaptcha} /> */}\n        </AtInput>\n        <View className=\"tips\">\n          <View className=\"item\">\n            *默认密码身份证号（如最后一位X，需要大写）\n          </View>\n          <View className=\"item\">*点击验证码图片切换验证码</View>\n          <View className=\"item\">\n            *登录学号将绑定到该微信，如需绑定其它账号，请先去个人中心解绑\n          </View>\n          <View className=\"item\">\n            *学号可以暂时不绑定，未绑定学号理工喵部分服务不可用\n          </View>\n          <View className=\"item orange\">\n            *理工喵账号密码均与哈理工教务在线同步，若登录失败请先查看教务在线是否修改过密码\n          </View>\n        </View>\n        <AtButton\n          className=\"login-button\"\n          disabled={!username || !password || !captcha}\n          type=\"primary\"\n          openType=\"getUserInfo\"\n          onGetUserInfo={this.onSubmit}\n        >\n          登录\n        </AtButton>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  user: state.user\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators({ init }, dispatch)\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login)\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"绑定学号\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages2/login/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}