{"version":3,"file":"pages2/news/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAcA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages2_news_index.tsx","webpack://wechat-app-hrbust/./src/pages2/news/index.tsx?5979"],"sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { View, Text } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\nimport { IRootState } from '@/types'\nimport { Dispatch, bindActionCreators } from 'redux'\nimport { getNews } from '@/redux/actions/common'\nimport { Loading } from '@/components'\nimport { cError, showToast } from '@/utils'\nimport { goWebviewPage } from '@/utils/router'\nimport { API_BASE_URL } from '@/utils/request'\n\nimport './index.less'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\n\ntype PropsFromDispatch = ReturnType<typeof mapDispatchToProps>\n\ntype PageOwnProps = {\n}\n\ntype PageState = {\n  loading: boolean\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nclass News extends Component<IProps, PageState> {\n  state: Readonly<PageState> = {\n    loading: false,\n  }\n\n  pageNo = 1\n\n  async onLoad() {\n    await this.getList()\n    if (this.props.news.length === 0) {\n      Taro.showToast({\n        title: '没有拉取到数据~请稍后重试',\n        icon: 'none'\n      })\n    }\n  }\n\n  // TODO: 拉取时有可能会出现报错，需要单独处理一下\n  // TODO: 详情页跳转压缩包需要兼容打开\n  // 拉取数据、错误处理等\n  getList = async () => {\n    this.setLoading(true)\n    const [, res] = await cError(this.props.getNews({ page: this.pageNo }))\n    this.setLoading(false)\n\n    if (this.pageNo > 1 && res.data.length === 0) {\n      showToast({\n        title: '喵，已经到底了~',\n        icon: 'none',\n        duration: 2000\n      })\n      this.pageNo -= 1\n    }\n  }\n\n  // loading\n  setLoading = (loading: boolean) => this.setState({ loading })\n\n  // 上拉加载\n  onReachBottom() {\n    if (!this.state.loading) {\n      this.pageNo += 1\n      this.getList()\n    }\n  }\n\n  toDetail = (e) => {\n    const id = e.currentTarget.dataset.id\n    const url = `${API_BASE_URL}/api/news/${id}`\n\n    goWebviewPage(url, '教务公告详情')\n  }\n\n  render () {\n    const { news } = this.props\n    const { loading } = this.state\n\n    return (\n      <Fragment>\n        <Loading loading={loading}></Loading>\n        <View className=\"news-page\">\n          {\n            news.map((item) => {\n              return <View className=\"news-item\" key={item.id}>\n                <View onClick={this.toDetail} data-id={item.id}>\n                  <View className=\"padding-wrapper\">\n                    <View className=\"news-message\">\n                      <View className=\"news-title\"> <Text className=\"top\">{item.top ? '(置顶)' : ''}</Text> {item.title}</View>\n                      <View className=\"text-small\"> 发布时间：{item.date}</View>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            })\n          }\n        </View>\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  news: state.common.news,\n})\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({ getNews }, dispatch)\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(mapStateToProps, mapDispatchToProps)(News)\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"教务公告\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages2/news/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}