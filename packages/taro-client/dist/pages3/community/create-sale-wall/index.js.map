{"version":3,"file":"pages3/community/create-sale-wall/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAmBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAFA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;AC1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages3_community_create-sale-wall_index.tsx","webpack://wechat-app-hrbust/./src/pages3/community/create-sale-wall/index.tsx?568d"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { View, Input, Textarea, Picker } from '@tarojs/components'\nimport { IRootState } from '@/types'\nimport { AtButton, AtImagePicker } from 'taro-ui'\nimport { goPage, routes } from '@/utils/router'\nimport Taro from '@tarojs/taro'\nimport { APIS } from '@/services2'\nimport { showToast, withRequest, uploadFileToServer } from '@/utils'\nimport { File } from 'taro-ui/types/image-picker'\n\nimport './index.less'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\ntype PropsFromDispatch = {}\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  name: string\n  gender: number\n  major: string\n  description: string\n  content?: string\n  files: (File & { uploaded?: boolean; id?: string })[]\n  fetching: boolean\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nconst prefix = 'create-wall'\nclass CreateSaleWall extends Component<IProps, PageState> {\n  state: PageState = {\n    name: '',\n    gender: 0,\n    major: '',\n    description: '',\n    content: '',\n    files: [],\n    fetching: false\n  }\n\n  genderRange = ['男', '女']\n\n  onInputChange = (key: keyof PageState, e) => {\n    const state = {\n      [key]: e.target.value\n    } as PageState\n    this.setState(state)\n  }\n\n  changeFetching = (fetching: boolean) => {\n    this.setState({\n      fetching\n    })\n  }\n\n  onSubmit = async () => {\n    const { name, description, gender, major, content, files } = this.state\n\n    // 部分前置条件\n    let toastMsg = ''\n    if (!name) {\n      toastMsg = '请输入姓名'\n    } else if (!major) {\n      toastMsg = '请输入专业'\n    } else if (!description) {\n      toastMsg = '请输入对室友简介'\n    } else if (!files.length) {\n      toastMsg = '请上传至少一张照片'\n    }\n\n    if (toastMsg) {\n      Taro.showToast({\n        title: toastMsg,\n        icon: 'none'\n      })\n      return\n    }\n\n    this.changeFetching(true)\n\n    let photos: string[] = []\n\n    if (files.length > 0) {\n      Taro.showLoading({\n        title: '上传图片中...'\n      })\n      try {\n        photos = await this.uploadFiles()\n      } catch (error) {\n        Taro.hideLoading()\n        this.changeFetching(false)\n        return\n      }\n      Taro.hideLoading()\n    }\n\n    const [err, res] = await withRequest(APIS.SaleWallApi.apiSaleWallPost)({\n      name,\n      description,\n      gender,\n      major,\n      content,\n      photos: photos.length ? photos : undefined\n    })\n\n    this.changeFetching(false)\n\n    if (!err && res?.id) {\n      showToast({\n        title: '发布成功',\n        icon: 'success',\n        finished: () => {\n          goPage(`${routes.saleWallDetail}?id=${res.id}`, Taro.redirectTo)\n        }\n      })\n    }\n  }\n\n  uploadFiles = async () => {\n    const { files } = this.state\n\n    const promises = files.map(async file => {\n      // 已经上传过的 不要重复上传\n      if (!file.uploaded) {\n        file.uploaded = true\n        file.id = await uploadFileToServer({\n          url: file.url\n        })\n      }\n      return file\n    })\n\n    const newFiles = await Promise.all(promises)\n\n    this.setState({\n      files: newFiles\n    })\n\n    return newFiles.reduce((pre, item) => {\n      if (item.id) {\n        pre.push(item.id)\n      }\n      return pre\n    }, [] as string[])\n  }\n\n  onFileChange = (files: File[]) => {\n    this.setState({\n      files\n    })\n  }\n\n  render() {\n    const {\n      name,\n      gender,\n      major,\n      description,\n      content,\n      files,\n      fetching\n    } = this.state\n    return (\n      <View className={prefix}>\n        <View className={`${prefix}__form-item`}>\n          <View className={`${prefix}__form-item__title`}>名字*</View>\n          <Input\n            className={`${prefix}__form-item__input`}\n            placeholder=\"名字\"\n            value={name}\n            type=\"text\"\n            onInput={e => this.onInputChange('name', e)}\n          ></Input>\n        </View>\n        <View className={`${prefix}__form-item`}>\n          <View className={`${prefix}__form-item__title`}>性别*</View>\n          <Picker\n            className={`${prefix}__form-item__input`}\n            value={gender}\n            range={this.genderRange}\n            onChange={e => {\n              this.setState({\n                gender: +e.detail.value\n              })\n            }}\n          >\n            {this.genderRange[gender]}\n          </Picker>\n        </View>\n\n        <View className={`${prefix}__form-item`}>\n          <View className={`${prefix}__form-item__title`}>专业*</View>\n          <Input\n            className={`${prefix}__form-item__input`}\n            placeholder=\"专业\"\n            value={major}\n            type=\"text\"\n            onInput={e => this.onInputChange('major', e)}\n          ></Input>\n        </View>\n\n        <View className={`${prefix}__form-item`}>\n          <View className={`${prefix}__form-item__title`}>\n            对另一半的期望({content?.length}/100字)\n          </View>\n          <Textarea\n            className={`${prefix}__form-item__textarea`}\n            placeholder=\"请输入对另一半的期望（非必填）\"\n            value={content}\n            autoHeight\n            maxlength={100}\n            onInput={e => this.onInputChange('content', e)}\n          ></Textarea>\n        </View>\n\n        <View className={`${prefix}__form-item`}>\n          <View className={`${prefix}__form-item__title`}>\n            室友简介*({description.length}/100字)\n          </View>\n          <Textarea\n            className={`${prefix}__form-item__textarea`}\n            placeholder=\"请输入内容\"\n            value={description}\n            autoHeight\n            maxlength={100}\n            onInput={e => this.onInputChange('description', e)}\n          ></Textarea>\n        </View>\n\n        <View className={`${prefix}__form-item`}>\n          <AtImagePicker\n            files={files}\n            onChange={this.onFileChange}\n            length={3}\n            count={9}\n            showAddBtn={files.length < 9}\n          ></AtImagePicker>\n          <View className={`${prefix}__form-item__image-picker-message`}>\n            <View>添加室友照片*</View>\n            <View>({files.length}/9)</View>\n          </View>\n        </View>\n\n        <View className={`${prefix}__tips`}>\n          <View className={`${prefix}__tips-title`}>*关于卖舍友</View>\n          出售您的室友前请先征得本人同意哦，否则后果自负\n        </View>\n        <AtButton\n          type=\"primary\"\n          onClick={this.onSubmit}\n          className={`${prefix}__button`}\n          loading={fetching}\n        >\n          发表\n        </AtButton>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  user: state.user\n})\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps\n)(CreateSaleWall)\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"发布卖舍友\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages3/community/create-sale-wall/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}