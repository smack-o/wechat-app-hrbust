{"version":3,"file":"pages3/community/index.js","mappings":"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;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAKA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAMA;AAEA;AAGA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages3_community_index.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_bottom-bar_BottomBar.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_bottom-bar_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_lovers-face_LoversFace.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_lovers-face_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_sale-wall_SaleWall.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_sale-wall_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_wall_Wall.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_wall_index.ts","webpack://wechat-app-hrbust/./src/pages3/community/index.tsx?5677"],"sourcesContent":["import React, { Component, createRef } from 'react'\nimport { connect } from 'react-redux'\nimport { View } from '@tarojs/components'\nimport { IRootState } from '@/types'\nimport Taro from '@tarojs/taro'\nimport { withShare } from '@/components'\nimport { routes } from '@/app.config'\nimport BottomBar, { barList } from './_components/bottom-bar'\n\nimport './index.less'\nimport { IBottomBarProps } from './_components/bottom-bar/BottomBar'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\ntype PropsFromDispatch = {}\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  currentTab: number\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nclass Discover extends Component<IProps, PageState> {\n  state: PageState = {\n    currentTab: 0\n  }\n\n  ref = createRef<any>()\n\n  _shareOptions = {\n    title: '分享了你理工喵社区，快来看看吧',\n    path: routes.community\n  }\n\n  onShareAppMessage() {}\n  onShareTimeline() {}\n\n  onLoad(e) {\n    if (e.currentTab !== undefined) {\n      this.setState({\n        currentTab: +e.currentTab\n      })\n    }\n  }\n\n  componentDidShow() {\n    this.ref?.current?.onShow?.()\n  }\n\n  onBarChange: IBottomBarProps['onChange'] = index => {\n    Taro.pageScrollTo({\n      scrollTop: 0\n    })\n    this.setState({\n      currentTab: index\n    })\n\n    this._shareOptions = {\n      title: '分享了你理工喵社区，快来看看吧',\n      path: `${routes.community}?currentTab=${index}`\n    }\n  }\n\n  // 下拉同步课表\n  async onPullDownRefresh() {\n    await this.ref?.current?.onPullDownRefresh?.()\n    Taro.stopPullDownRefresh()\n  }\n\n  // 上拉加载\n  onReachBottom() {\n    this.ref?.current?.onReachBottom?.()\n  }\n\n  render() {\n    const { currentTab } = this.state\n\n    const Comp = barList[currentTab].component\n\n    if (!Comp) {\n      return\n    }\n\n    return (\n      <View className=\"community-container\">\n        <Comp ref={this.ref} />\n        <BottomBar current={currentTab} onChange={this.onBarChange}></BottomBar>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  user: state.user\n})\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps\n)(\n  withShare({\n    title: '分享了你理工喵社区，快来看看吧',\n    path: routes.community\n  })(Discover)\n)\n","import React, { useEffect, useState } from 'react'\nimport { View, Image } from '@tarojs/components'\nimport { routes } from '@/app.config'\nimport Taro from '@tarojs/taro'\nimport { IRootState } from '@/types'\nimport { connect } from 'react-redux'\nimport FixBlock from '@/components/fix-block'\nimport faceIcon from '@/assets/community-imgs/bar/face.png'\nimport faceSelectIcon from '@/assets/community-imgs/bar/face_selected.png'\nimport mineIcon from '@/assets/community-imgs/bar/mine.png'\nimport mineSelectIcon from '@/assets/community-imgs/bar/mine_selected.png'\nimport saleIcon from '@/assets/community-imgs/bar/sale.png'\nimport saleSelectIcon from '@/assets/community-imgs/bar/sale_selected.png'\nimport wallIcon from '@/assets/community-imgs/bar/wall.png'\nimport wallSelectIcon from '@/assets/community-imgs/bar/wall_selected.png'\n\nimport './BottomBar.less'\nimport Wall from '../wall'\nimport SaleWall from '../sale-wall'\nimport LoversFace from '../lovers-face'\n\nexport const barList = [\n  {\n    key: 'wall',\n    icon: wallIcon,\n    selectIcon: wallSelectIcon,\n    text: '表白墙',\n    component: Wall\n  },\n  {\n    key: 'mine',\n    icon: saleIcon,\n    selectIcon: saleSelectIcon,\n    component: SaleWall,\n    text: '卖室友'\n  },\n  {\n    key: 'sale',\n    icon: faceIcon,\n    selectIcon: faceSelectIcon,\n    text: '情侣脸',\n    component: LoversFace\n  },\n  {\n    key: 'mine',\n    icon: mineIcon,\n    selectIcon: mineSelectIcon,\n    text: '我的'\n  }\n]\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\ntype PropsFromDispatch = {}\n\nexport interface IBottomBarProps {\n  onChange?: (\n    index: number,\n    item: {\n      key: string\n      icon: string\n      selectIcon: string\n      text: string\n    }\n  ) => void\n  current: number\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & IBottomBarProps\n\nexport function BottomBar(props: IProps) {\n  const { current: propsCurrent } = props\n  const [current, setCurrent] = useState(0)\n  const { onChange, unreadCount } = props\n\n  useEffect(() => {\n    Taro.setNavigationBarTitle({\n      title: barList[propsCurrent].text\n    })\n    setCurrent(propsCurrent)\n  }, [propsCurrent])\n\n  return (\n    <FixBlock bottom={0} height={100}>\n      <View className=\"bottom-bar\">\n        {barList.map((item, index) => {\n          const active = current === index\n          return (\n            <View\n              key={item.key}\n              className={`bottom-bar__item ${active ? 'active' : ''}`}\n              onClick={() => {\n                if (index === 3) {\n                  Taro.switchTab({ url: routes.account })\n                  return\n                }\n                Taro.setNavigationBarTitle({\n                  title: item.text\n                })\n                setCurrent(index)\n                onChange?.(index, item)\n              }}\n            >\n              <View className=\"bottom-bar__item-icon\">\n                <Image\n                  src={active ? item.selectIcon : item.icon}\n                  mode=\"widthFix\"\n                />\n              </View>\n              <View className=\"bottom-bar__item-text\">{item.text}</View>\n              {index === 3 && unreadCount > 0 && (\n                <View className=\"custom-tab-item-dot\">\n                  {unreadCount > 99 ? '99+' : unreadCount}\n                </View>\n              )}\n            </View>\n          )\n        })}\n      </View>\n    </FixBlock>\n  )\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  unreadCount: state.user.unreadCount\n})\n\nexport default connect<PropsFromState, PropsFromDispatch, IBottomBarProps>(\n  mapStateToProps\n)(BottomBar)\n","export { default } from './BottomBar'\nexport * from './BottomBar'\n","import React from 'react'\nimport { View, Text } from '@tarojs/components'\nimport { loginModal, withRequest } from '@/utils'\nimport Taro from '@tarojs/taro'\nimport { compressImage } from '@/utils/image'\nimport { APIS } from '@/services2'\nimport { AtButton, AtImagePicker } from 'taro-ui'\nimport { File } from 'taro-ui/types/image-picker'\n\nimport './LoversFace.less'\n\ntype LoversFaceState = {\n  filesA: File[]\n  filesB: File[]\n  confidence: number\n  fetching: boolean\n}\n\ntype LoversFaceProps = {}\n// 在页面中定义激励视频广告\n\nconst prefix = 'lovers-face'\n\nconst AD_STORAGE_KEY = 'loversface:thisDayTimeData'\nexport default class LoversFace extends React.Component<\n  LoversFaceProps,\n  LoversFaceState\n> {\n  state: LoversFaceState = {\n    filesA: [],\n    filesB: [],\n    confidence: -1,\n    fetching: false\n  }\n  videoAd: any = null\n  loadAdError: boolean\n  thisDayTimestamp: number\n\n  async componentDidMount() {\n    await loginModal()\n\n    const videoAd = Taro.createRewardedVideoAd({\n      adUnitId: 'adunit-76ab74da0c0d4251'\n    })\n    videoAd.onLoad(() => {})\n    videoAd.onError(err => {\n      console.log('loadAdError', err)\n      this.loadAdError = true\n    })\n    videoAd.onClose(res => {\n      // 用户点击了【关闭广告】按钮\n      if (res && res.isEnded) {\n        // 正常播放结束，可以下发游戏奖励\n        this.onCompare()\n      } else {\n        // 播放中途退出，不下发游戏奖励\n      }\n    })\n\n    this.thisDayTimestamp =\n      new Date(new Date().toLocaleDateString()).getTime() +\n      24 * 60 * 60 * 1000 -\n      1\n\n    this.videoAd = videoAd\n  }\n\n  onChangeA = (files: File[]) => {\n    this.setState({\n      filesA: files\n    })\n  }\n\n  onChangeB = (files: File[]) => {\n    this.setState({\n      filesB: files\n    })\n  }\n\n  getImageBase64 = async (path: string): Promise<string> =>\n    new Promise((resolve, reject) => {\n      const fileSystemManager = Taro.getFileSystemManager()\n\n      fileSystemManager.readFile({\n        filePath: path, // 例如图片临时路径\n        encoding: 'base64',\n        success(res) {\n          // let { data } = res // 编码后的数据\n          // @ts-ignore\n          resolve(res.data)\n        }\n      })\n    })\n\n  onCompare = async (adTimes?: number) => {\n    if (adTimes !== undefined) {\n      Taro.setStorageSync(\n        AD_STORAGE_KEY,\n        JSON.stringify({\n          timestamp: this.thisDayTimestamp,\n          times: adTimes\n        })\n      )\n    }\n    const { filesA, filesB } = this.state\n    if (filesA.length === 0 || filesB.length === 0) {\n      Taro.showToast({\n        title: '请先添加图片',\n        icon: 'none'\n      })\n      return\n    }\n    this.setState({\n      fetching: true\n    })\n\n    const files = await Promise.all([\n      compressImage(filesA[0].url),\n      compressImage(filesB[0].url)\n    ])\n\n    const data = await Promise.all(\n      files.map(async file => this.getImageBase64(file))\n    ).then(async res => {\n      const [imageDataA, imageDataB] = res\n      const data = {\n        imageDataA,\n        imageDataB\n      }\n      // console.log(data)\n      // console.log(data)\n      // APIS.postLoversFace(data).then(res => {\n      //   console.log(res)\n      // })\n      return data\n    })\n\n    const [err, res] = await withRequest(APIS.MediaApi.apiMediaComparefacePost)(\n      data\n    )\n\n    if (!err && res) {\n      this.setState({\n        confidence: +res.confidence\n      })\n    }\n\n    this.setState({\n      fetching: false\n    })\n  }\n\n  onSubmit = () => {\n    const { filesA, filesB } = this.state\n    if (filesA.length === 0 || filesB.length === 0) {\n      Taro.showToast({\n        title: '请先添加图片',\n        icon: 'none'\n      })\n      return\n    }\n\n    // 广告逻辑\n    let thisDayTimeData = Taro.getStorageSync(AD_STORAGE_KEY)\n    if (thisDayTimeData) {\n      thisDayTimeData = JSON.parse(thisDayTimeData)\n\n      // 如果缓存时间已经小于当前时间清空缓存\n      if (thisDayTimeData.timestamp < this.thisDayTimestamp) {\n        Taro.removeStorageSync(AD_STORAGE_KEY)\n        thisDayTimeData = undefined\n      }\n    }\n\n    // 用户触发广告后，显示激励视频广告\n    // console.log(this.videoAd, this.loadAdError, thisDayTimeData, thisDayTimeData.times >= 2)\n    if (\n      this.videoAd &&\n      !this.loadAdError &&\n      thisDayTimeData &&\n      thisDayTimeData.times >= 1\n    ) {\n      Taro.showModal({\n        title: '是否观看广告',\n        content: '每日第一次免费查询。（理工喵已经没钱恰饭啦，大家理解下哈~）',\n        success: res => {\n          if (res.confirm && this.videoAd) {\n            this.videoAd.show().catch(() => {\n              // 失败重试\n              this.videoAd!.load()\n                .then(() => this.videoAd!.show())\n                .catch(() => {\n                  console.log('激励视频 广告显示失败')\n                })\n            })\n          } else if (res.cancel) {\n            // console.log('用户点击取消')\n          }\n        }\n      })\n      return\n    }\n\n    this.onCompare(thisDayTimeData.times ? thisDayTimeData.times + 1 : 1)\n  }\n\n  onReset = () => {\n    this.setState({\n      // filesA: [],\n      // filesB: [],\n      confidence: -1\n    })\n  }\n\n  render() {\n    const { filesA, filesB, confidence, fetching } = this.state\n    return (\n      <View className={prefix}>\n        <View className={`${prefix}__title`}>试试你跟 TA 有没有情侣相吧~</View>\n        <View className={`${prefix}__picker`}>\n          <View className={`${prefix}__picker-item`}>\n            <AtImagePicker\n              files={filesA}\n              multiple={false}\n              onChange={this.onChangeA}\n              length={1}\n              count={1}\n              showAddBtn={filesA.length < 1}\n            ></AtImagePicker>\n            {!filesA[0] && <Text className=\"tip\">添加第一张图片</Text>}\n          </View>\n          <View className={`${prefix}__picker-item`}>\n            <AtImagePicker\n              files={filesB}\n              multiple={false}\n              onChange={this.onChangeB}\n              length={1}\n              count={1}\n              showAddBtn={filesB.length < 1}\n            ></AtImagePicker>\n            {!filesB[0] && <Text className=\"tip\">添加第二张图片</Text>}\n          </View>\n        </View>\n\n        {confidence >= 0 && (\n          <View className={`${prefix}__result`}>\n            情侣契合分数：{confidence}\n            <View className=\"tips\">\n              *分数过低可能是由于正面不清晰的原因，尝试更换图片再次尝试\n            </View>\n            <View className=\"tips\">\n              *数据结果来自于阿里云人脸比对服务，仅供参考\n            </View>\n          </View>\n        )}\n\n        {confidence > 0 ? (\n          <AtButton\n            type=\"primary\"\n            className={`${prefix}__button`}\n            onClick={this.onReset}\n          >\n            重新测试\n          </AtButton>\n        ) : (\n          <AtButton\n            type=\"primary\"\n            className={`${prefix}__button`}\n            onClick={this.onSubmit}\n            loading={fetching}\n          >\n            开始测试\n          </AtButton>\n        )}\n      </View>\n    )\n  }\n}\n","export { default } from './LoversFace'\n","import React from 'react'\nimport { Image, View } from '@tarojs/components'\nimport { loginModal, withRequest } from '@/utils'\nimport { APIS } from '@/services2'\nimport Taro, { navigateTo } from '@tarojs/taro'\nimport { routes } from '@/app.config'\nimport AddSaleWallIcon from '@/assets/community-imgs/add_sale_wall.png'\nimport Tab from '../tab'\nimport { ITabProps } from '../tab/Tab'\nimport SaleWallItem from '../sale-wall-item'\n\nimport './SaleWall.less'\n\ntype List = GetApiResultType<typeof APIS.SaleWallApi.apiSaleWallListGet>\n\ntype WallState = {\n  listLeft: {\n    height: number\n    list: List\n  }\n  listRight: {\n    height: number\n    list: List\n  }\n  activeTab: number\n  hasNext: boolean\n  loading: boolean\n}\n\ntype WallProps = {}\n\nconst prefix = 'sale-wall'\n\nexport default class SaleWall extends React.Component<WallProps, WallState> {\n  state: WallState = {\n    listLeft: {\n      height: 0,\n      list: []\n    },\n    listRight: {\n      height: 0,\n      list: []\n    },\n    activeTab: 0,\n    hasNext: true,\n    loading: true\n  }\n\n  tabList = [\n    {\n      key: 'all',\n      text: '全部',\n      api: APIS.SaleWallApi.apiSaleWallListGet\n    },\n    {\n      key: 'like',\n      text: '喜欢',\n      api: APIS.SaleWallApi.apiSaleWallListLikeGet\n    },\n    {\n      key: 'hot',\n      text: '最热',\n      api: APIS.SaleWallApi.apiSaleWallListHotGet\n    }\n  ]\n\n  pageNum = 0\n  pageSize = 20\n  fetching = false\n\n  // 重新进入页面时，需要重新获取数据\n  onShow = () => {\n    if (\n      this.state.listLeft.list.length === 0 &&\n      this.state.listRight.list.length === 0\n    ) {\n      return\n    }\n    this.fetchList(false, true)\n  }\n\n  async componentDidMount() {\n    try {\n      await loginModal()\n      Taro.showLoading({\n        title: '加载中...'\n      })\n      await this.init()\n      this.setState({\n        loading: false\n      })\n      Taro.hideLoading()\n    } catch (error) {\n      Taro.hideLoading()\n    }\n  }\n\n  init = async () => {\n    this.pageNum = 0\n    await this.fetchList(true)\n  }\n\n  fetchList = async (reset?: boolean, refresh?: boolean) => {\n    Taro.showLoading({\n      title: '加载中...'\n    })\n    this.fetching = true\n    let pageNum = String(this.pageNum)\n    let pageSize = String(this.pageSize)\n\n    // 刷新当前数据\n    if (refresh) {\n      pageNum = '0'\n      pageSize = String((this.pageNum + 1) * this.pageSize)\n    }\n\n    const api = this.tabList[this.state.activeTab].api\n    const [err, res] = await withRequest(api)({\n      pageNum,\n      pageSize\n    })\n\n    this.fetching = false\n\n    Taro.hideLoading()\n    if (err || !res) {\n      return Promise.reject()\n    }\n\n    this.listPush(res, reset, refresh)\n\n    this.setState({\n      hasNext: res.length >= this.pageSize\n    })\n  }\n\n  /**\n   * 瀑布流高度计算\n   * @param list\n   * @param reset\n   */\n  listPush = (list: List, reset?: boolean, refresh?: boolean) => {\n    let { listLeft, listRight } = this.state\n    if (reset || refresh) {\n      listLeft = {\n        height: 0,\n        list: []\n      }\n      listRight = {\n        height: 0,\n        list: []\n      }\n    }\n\n    list.forEach(item => {\n      const imgHeight = item.photos?.[0]?.height || 400\n      const imgWidth = item.photos?.[0]?.width || 400\n      // 拉齐到同一宽度对比高度\n      const relHeight = (imgHeight / imgWidth) * 100\n\n      if (listLeft.height <= listRight.height) {\n        listLeft.list.push(item)\n        listLeft.height += relHeight\n      } else {\n        listRight.list.push(item)\n        listRight.height += relHeight\n      }\n    })\n\n    this.setState({\n      listLeft,\n      listRight\n    })\n  }\n\n  onTabChange: ITabProps['onChange'] = async index => {\n    this.setState(\n      {\n        activeTab: index\n      },\n      () => {\n        this.init()\n      }\n    )\n  }\n\n  onReachBottom = () => {\n    if (!this.state.hasNext || this.fetching) {\n      return\n    }\n    this.pageNum++\n    return this.fetchList().catch(() => {\n      this.pageNum--\n    })\n  }\n\n  onPullDownRefresh = async () => this.init()\n\n  onAddWallClick = () => {\n    navigateTo({\n      url: routes.createSaleWall\n    })\n  }\n\n  render() {\n    const { activeTab, listLeft, listRight, loading } = this.state\n\n    if (loading) {\n      return null\n    }\n\n    return (\n      <View className={prefix}>\n        <Tab\n          currentIndex={activeTab}\n          tabList={this.tabList}\n          onChange={this.onTabChange}\n        >\n          {listLeft.list.length === 0 && listRight.list.length === 0 ? (\n            <View className=\"community-no-data\">暂无内容</View>\n          ) : (\n            <View className={`${prefix}__list`}>\n              <View className={`${prefix}__list-column`}>\n                {listLeft.list.map(item => (\n                  <SaleWallItem key={item._id} data={item}></SaleWallItem>\n                ))}\n              </View>\n              <View className={`${prefix}__list-column`}>\n                {listRight.list.map(item => (\n                  <SaleWallItem key={item._id} data={item}></SaleWallItem>\n                ))}\n              </View>\n            </View>\n          )}\n        </Tab>\n        <View className={`${prefix}__add-wall`} onClick={this.onAddWallClick}>\n          <Image src={AddSaleWallIcon} mode=\"widthFix\"></Image>\n        </View>\n        {/* {!hasNext && <View>到底了~</View>} */}\n      </View>\n    )\n  }\n}\n","export { default } from './SaleWall'\n","import React, { Fragment } from 'react'\nimport { Image, View, Input, Ad } from '@tarojs/components'\nimport { loginModal, withRequest } from '@/utils'\nimport { APIS } from '@/services2'\nimport Taro, { navigateTo } from '@tarojs/taro'\nimport { goPage, routes } from '@/utils/router'\nimport AddWallIcon from '@/assets/community-imgs/add_wall.png'\nimport SearchIcon from '@/assets/community-imgs/search.png'\nimport Tab from '../tab'\nimport { ITabProps } from '../tab/Tab'\nimport WallItem from '../wall-item'\n\nimport './Wall.less'\n\ntype WallState = {\n  list: GetApiResultType<typeof APIS.WallApi.apiWallListGet>\n  activeTab: number\n  hasNext: boolean\n  loading: boolean\n}\n\ntype WallProps = {}\n\nexport default class Wall extends React.Component<WallProps, WallState> {\n  tabList = [\n    {\n      key: 'all',\n      text: '全部',\n      api: APIS.WallApi.apiWallListGet\n    },\n    {\n      key: 'like',\n      text: '喜欢',\n      api: APIS.WallApi.apiWallListLikeGet\n    },\n    {\n      key: 'hot',\n      text: '最热',\n      api: APIS.WallApi.apiWallListHotGet\n    }\n  ]\n\n  pageNum = 0\n  pageSize = 20\n  fetching = false\n\n  state: WallState = {\n    list: [],\n    activeTab: 0,\n    hasNext: true,\n    loading: true\n  }\n\n  // 重新进入页面时，需要重新获取数据\n  onShow = () => {\n    if (this.state.list.length === 0) {\n      return\n    }\n    this.fetchList(false, true)\n  }\n\n  // 重新进入页面时，需要重新获取数据\n  componentDidMount = async () => {\n    try {\n      await loginModal()\n      Taro.showLoading({\n        title: '加载中...'\n      })\n      await this.init()\n      this.setState({\n        loading: false\n      })\n      Taro.hideLoading()\n    } catch (error) {\n      console.log(error, 'error')\n      Taro.hideLoading()\n    }\n  }\n\n  init = async () => {\n    this.pageNum = 0\n    await this.fetchList(true)\n  }\n\n  fetchList = async (reset?: boolean, refresh?: boolean) => {\n    Taro.showLoading({\n      title: '加载中...'\n    })\n    this.fetching = true\n    let pageNum = String(this.pageNum)\n    let pageSize = String(this.pageSize)\n\n    // 刷新当前数据\n    if (refresh) {\n      pageNum = '0'\n      pageSize = String((this.pageNum + 1) * this.pageSize)\n    }\n\n    const api = this.tabList[this.state.activeTab].api\n    const [err, res] = await withRequest(api)({\n      pageNum,\n      pageSize\n    })\n\n    this.fetching = false\n\n    Taro.hideLoading()\n\n    if (err || !res) {\n      return Promise.reject()\n    }\n\n    this.setState({\n      list: reset || refresh ? res : this.state.list.concat(res),\n      hasNext: res.length >= this.pageSize\n    })\n  }\n\n  onTabChange: ITabProps['onChange'] = async index => {\n    this.setState(\n      {\n        activeTab: index\n      },\n      () => {\n        this.init()\n      }\n    )\n  }\n\n  onReachBottom = () => {\n    if (!this.state.hasNext || this.fetching) {\n      return\n    }\n    this.pageNum++\n    return this.fetchList().catch(() => {\n      this.pageNum--\n    })\n  }\n\n  onPullDownRefresh = async () => this.init()\n\n  onAddWallClick = () => {\n    navigateTo({\n      url: routes.createWall\n    })\n  }\n\n  render() {\n    const { activeTab, loading, list = [] } = this.state\n    console.log(loading, 'loading')\n    if (loading) {\n      return null\n    }\n\n    return (\n      <View className=\"wall\">\n        <View\n          className=\"wall-search\"\n          onClick={() => {\n            goPage(routes.search)\n          }}\n        >\n          <Image className=\"wall-search__icon\" src={SearchIcon}></Image>\n          <Input placeholder=\"搜索关键词\" disabled></Input>\n        </View>\n        <Tab\n          currentIndex={activeTab}\n          tabList={this.tabList}\n          onChange={this.onTabChange}\n        >\n          {list.length === 0 ? (\n            <View className=\"community-no-data\">暂无内容</View>\n          ) : (\n            list.map((item, index) => {\n              return (\n                <Fragment key={item._id}>\n                  <WallItem\n                    showHotComments\n                    data={item}\n                    onClick={() =>\n                      goPage(`${routes.wallDetail}?id=${item._id}`)\n                    }\n                  ></WallItem>\n                  {index !== 0 && index % 5 === 0 && (\n                    <View className=\"wall-ad\">\n                      {/* <Ad\n                        className=\"advertising\"\n                        unitId=\"adunit-2d76930b51ac0dbe\"\n                      ></Ad> */}\n                      {/* @ts-ignore */}\n                      <c-ad></c-ad>\n                    </View>\n                  )}\n                </Fragment>\n              )\n            })\n          )}\n        </Tab>\n        <View className=\"wall__add-wall\" onClick={this.onAddWallClick}>\n          <Image src={AddWallIcon} mode=\"widthFix\"></Image>\n        </View>\n        {/* {!hasNext && <View>到底了~</View>} */}\n      </View>\n    )\n  }\n}\n","export { default } from './Wall'\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"表白墙\",\"enablePullDownRefresh\":true,\"backgroundTextStyle\":\"dark\",\"usingComponents\":{\"c-ad\":\"./_components/c-ad/index\"}};\ncomponent.enableShareTimeline = true\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages3/community/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}