{"version":3,"file":"pages3/community/my-wall/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAcA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAAA;AAKA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtCA;AACA;AAAA;AAAA;AAAA;AAwCA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages3_community_my-wall_index.tsx","webpack://wechat-app-hrbust/./src/pages3/community/my-wall/index.tsx?5bd6"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { View } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\nimport { IRootState } from '@/types'\nimport { APIS } from '@/services2'\nimport { withRequest } from '@/utils'\nimport './index.less'\nimport BrickMessageList from '../_components/brick-message-list'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\ntype PropsFromDispatch = {}\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  list: GetApiResultType<typeof APIS.WallApi.apiWallListPublishGet>\n  hasNext: boolean\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nconst prefix = 'message-page'\nclass Message extends Component<IProps, PageState> {\n  state: PageState = {\n    list: [],\n    hasNext: true\n  }\n\n  pageNum = 0\n  pageSize = 20\n  fetching = false\n\n  componentDidMount() {\n    this.init()\n  }\n\n  init = async () => {\n    this.pageNum = 0\n    await this.fetchList(true)\n  }\n\n  fetchList = async (reset?: boolean) => {\n    this.fetching = true\n    const [err, res] = await withRequest(APIS.WallApi.apiWallListPublishGet)({\n      pageNum: String(this.pageNum),\n      pageSize: String(this.pageSize)\n    })\n\n    this.fetching = false\n\n    if (err || !res) {\n      return\n    }\n\n    this.setState({\n      list: reset ? res : this.state.list.concat(res),\n      hasNext: res.length === this.pageSize\n    })\n  }\n\n  onReachBottom = () => {\n    if (!this.state.hasNext || this.fetching) {\n      return\n    }\n    this.pageNum++\n    this.fetchList()\n  }\n\n  onPullDownRefresh = async () => {\n    await this.init()\n    Taro.stopPullDownRefresh()\n  }\n\n  render() {\n    const { list } = this.state\n\n    return (\n      <View className={prefix}>\n        <BrickMessageList list={list}></BrickMessageList>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  user: state.user\n})\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps\n)(Message)\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"我的表白墙\",\"enablePullDownRefresh\":true};\n\n\nvar inst = Page(createPageConfig(component, 'pages3/community/my-wall/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}