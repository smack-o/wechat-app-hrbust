{"version":3,"file":"pages3/community/sale-wall-detail/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAiBA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAjBA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9LA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AA+KA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AAAA;AAEA;AAGA;AACA;AAAA;AAGA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;;;;;;;;;;;;;ACrXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages3_community_sale-wall-detail_index.tsx","webpack://wechat-app-hrbust/./src/pages3/community/sale-wall-detail/index.tsx?560d"],"sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Taro from '@tarojs/taro'\nimport { View, Swiper, SwiperItem, Image, Text } from '@tarojs/components'\nimport { IRootState } from '@/types'\nimport { APIS } from '@/services2'\nimport { getCdnUrl, loginModal, showToast, withRequest } from '@/utils'\nimport classNames from 'classnames'\nimport { routes } from '@/app.config'\nimport { withShare } from '@/components'\nimport PublisherTitle from '@/components/publisher-title'\nimport maleIcon from './imgs/male.png'\nimport femaleIcon from './imgs/female.png'\nimport locationIcon from './imgs/location.png'\nimport likeIcon from './imgs/like.png'\n\nimport './index.less'\nimport CommentList from '../_components/comment-list'\nimport { CommentType } from '../_components/comment-input'\n\ntype PropsFromState = ReturnType<typeof mapStateToProps>\ntype PropsFromDispatch = {}\n\ntype PageOwnProps = {}\n\ntype PageState = {\n  data: GetApiResultType<typeof APIS.SaleWallApi.apiSaleWallIdGet>\n  isLikeLocal: boolean\n  likeCountLocal: number\n  commentList: GetApiResultType<typeof APIS.CommentApi.apiCommentMateIdGet>\n  hasNext: boolean\n}\n\ntype IProps = PropsFromState & PropsFromDispatch & PageOwnProps\n\nconst prefix = 'sale-wall-detail'\nclass SaleWallDetail extends Component<IProps, PageState> {\n  state: PageState = {\n    data: undefined,\n    isLikeLocal: false,\n    likeCountLocal: 0,\n    commentList: [],\n    hasNext: true\n  }\n\n  id: string\n  pageNum = 0\n  pageSize = 20\n  fetching = false\n\n  genderMap = [\n    {\n      icon: maleIcon,\n      text: '男'\n    },\n    {\n      icon: femaleIcon,\n      text: '女'\n    }\n  ]\n\n  async onLoad(e) {\n    await loginModal()\n\n    if (e.id) {\n      this.id = e.id\n      this.getData()\n      this.getComment()\n    }\n  }\n\n  _shareOptions = {\n    title: '分享了你一条卖舍友',\n    imageUrl: '',\n    path: routes.community\n  }\n\n  onShareAppMessage() {}\n  onShareTimeline() {}\n\n  onImageClick = (index: number) => {\n    const photos = this.state.data?.photos || []\n    // @ts-ignore\n    wx.previewMedia({\n      current: index,\n      sources: photos.map(item => ({\n        url: getCdnUrl(item),\n        type: 'image'\n      })),\n      showmenu: true\n    })\n  }\n\n  getData = async () => {\n    const [err, res] = await withRequest(APIS.SaleWallApi.apiSaleWallIdGet)({\n      id: this.id\n    })\n\n    if (!err && res) {\n      if (!res._id) {\n        showToast({\n          title: '该内容不存在或已被删除',\n          icon: 'none',\n          finished: () => {\n            Taro.navigateBack({\n              fail() {\n                Taro.switchTab({\n                  url: routes.index\n                })\n              }\n            })\n          }\n        })\n        return\n      }\n      this.setState({\n        data: res,\n        isLikeLocal: res.isLike,\n        likeCountLocal: res.likeCount\n      })\n\n      this._shareOptions = {\n        title: '分享你一条卖舍友',\n        imageUrl: getCdnUrl(res?.photos?.[0]),\n        path: routes.saleWallDetail + '?id=' + res._id\n      }\n    }\n  }\n\n  onLikeClick = async () => {\n    const { data, isLikeLocal, likeCountLocal } = this.state\n\n    const [err, res] = await withRequest(APIS.SaleWallApi.apiSaleWallLikeIdPut)(\n      {\n        id: data?._id || ''\n      }\n    )\n\n    if (err || !res) {\n      return\n    }\n\n    this.setState({\n      isLikeLocal: !isLikeLocal,\n      likeCountLocal: isLikeLocal ? likeCountLocal - 1 : likeCountLocal + 1\n    })\n  }\n\n  onDelete = async () => {\n    const { data } = this.state\n    Taro.showModal({\n      title: '确认删除这条动态？',\n      content: '删除后无法找回，请谨慎操作。',\n      success: async res => {\n        if (res.confirm) {\n          const [err] = await withRequest(APIS.SaleWallApi.apiSaleWallIdDelete)(\n            {\n              id: data?._id || ''\n            }\n          )\n          if (!err) {\n            showToast({\n              title: '删除成功',\n              icon: 'success',\n              finished: () => {\n                Taro.navigateBack()\n              }\n            })\n          }\n        }\n      }\n    })\n  }\n\n  getComment = async (reset?: boolean, refresh?: boolean) => {\n    this.fetching = true\n    let pageNum = String(this.pageNum)\n    let pageSize = String(this.pageSize)\n\n    // 刷新当前数据\n    if (refresh) {\n      pageNum = '0'\n      pageSize = String((this.pageNum + 1) * this.pageSize)\n    }\n\n    const [err, res] = await withRequest(APIS.CommentApi.apiCommentMateIdGet)({\n      id: this.id,\n      pageNum,\n      pageSize\n    })\n\n    this.fetching = false\n\n    if (err || !res) {\n      return\n    }\n\n    this.setState({\n      commentList:\n        reset || refresh ? res : (this.state.commentList || []).concat(res),\n      hasNext: res.length >= this.pageSize\n    })\n  }\n\n  // 评论\n  onCommentSubmit = async (value: string, to?: string, commentId?: string) => {\n    const { data } = this.state\n\n    if (!data) {\n      return\n    }\n\n    const params: Parameters<typeof APIS.CommentApi.apiCommentPost>[0] = {\n      mateId: data._id,\n      content: value,\n      to: data.publisher?._id,\n      type: CommentType.MateComment\n    }\n    // 回复评论\n    if (commentId) {\n      params.to = to\n      params.type = CommentType.ReplyComment\n      params.commentId = commentId\n    }\n    const [err] = await withRequest(APIS.CommentApi.apiCommentPost)(params)\n\n    if (err) {\n      return Promise.reject()\n    }\n    Taro.showToast({\n      title: '评论成功',\n      icon: 'success'\n    })\n    this.getComment(false, true)\n    this.getData()\n  }\n\n  onReachBottom = () => {\n    if (!this.state.hasNext || this.fetching) {\n      return\n    }\n    this.pageNum++\n    return this.getComment().catch(() => {\n      this.pageNum--\n    })\n  }\n\n  onPullDownRefresh = async () => {\n    await this.getData()\n    this.getComment(true)\n    Taro.stopPullDownRefresh()\n  }\n\n  render() {\n    const { data, isLikeLocal, likeCountLocal, commentList } = this.state\n    if (!data) {\n      return null\n    }\n\n    const {\n      publisher,\n      createdAt,\n      photos,\n      name,\n      gender,\n      content,\n      description,\n      major,\n      isPublisher\n    } = data\n    return (\n      <View className={prefix}>\n        <PublisherTitle\n          className={`${prefix}__title`}\n          time={createdAt}\n          publisher={publisher}\n          timeType=\"relative\"\n          isPublisher={isPublisher}\n        ></PublisherTitle>\n        <Swiper\n          circular\n          indicatorDots\n          autoplay\n          className={`${prefix}__swiper`}\n          // displayMultipleItems={photos?.length}\n        >\n          {photos?.map((photo, index) => (\n            <SwiperItem key={photo.key}>\n              <Image\n                mode=\"aspectFill\"\n                src={getCdnUrl(photo)}\n                className={`${prefix}__swiper-item`}\n                onClick={() => this.onImageClick(index)}\n              ></Image>\n            </SwiperItem>\n          ))}\n        </Swiper>\n        <View className={`${prefix}__name`}>{name}</View>\n        <View className={`${prefix}__gender`}>\n          <Image src={this.genderMap[gender].icon}></Image>\n          {this.genderMap[gender].text}\n          <Image src={locationIcon} className={`${prefix}__location`}></Image>\n          暂无位置信息\n        </View>\n        <View className={`${prefix}__info`}>\n          <View className={`${prefix}__info-item`}>\n            <Text user-select className={`${prefix}__info-item__title`}>\n              专业：\n            </Text>\n            <Text user-select className={`${prefix}__info-item__text`}>\n              {major}\n            </Text>\n          </View>\n          <View className={`${prefix}__info-item`}>\n            <Text user-select className={`${prefix}__info-item__title`}>\n              喜欢TA：\n            </Text>\n            <Text user-select className={`${prefix}__info-item__text`}>\n              {content}\n            </Text>\n          </View>\n          <View className={`${prefix}__info-item`}>\n            <Text user-select className={`${prefix}__info-item__title`}>\n              舍友简介：\n            </Text>\n            <Text user-select className={`${prefix}__info-item__text`}>\n              {description}\n            </Text>\n          </View>\n        </View>\n        <View\n          className={classNames(`${prefix}__like`, {\n            liked: isLikeLocal\n          })}\n          onClick={this.onLikeClick}\n        >\n          <Image src={likeIcon}></Image>\n          {likeCountLocal}\n        </View>\n\n        <View className={`${prefix}__like-tips`}>\n          感兴趣的话就为TA点一颗小心心吧~~\n        </View>\n        {isPublisher && (\n          <View\n            className={`${prefix}__delete blue-text`}\n            onClick={this.onDelete}\n          >\n            删除\n          </View>\n        )}\n        <View className={`${prefix}__border-line`}></View>\n\n        <View className={`${prefix}__comment-list`}>\n          <CommentList\n            hotList={data.hotComments}\n            showInput\n            list={commentList}\n            onCommentSubmit={this.onCommentSubmit}\n            commentCount={data.commentCount}\n          ></CommentList>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst mapStateToProps = (state: IRootState) => ({\n  user: state.user\n})\n\nexport default connect<PropsFromState, PropsFromDispatch, PageOwnProps>(\n  mapStateToProps\n)(withShare({ title: '分享了你一条卖舍友' })(SaleWallDetail))\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"卖舍友详情\",\"enablePullDownRefresh\":true,\"backgroundTextStyle\":\"dark\"};\ncomponent.enableShareTimeline = true\ncomponent.enableShareAppMessage = true\nvar inst = Page(createPageConfig(component, 'pages3/community/sale-wall-detail/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}