{"version":3,"file":"pages3/community/search-resource/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;;;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages3_community_search-resource_index.tsx","webpack://wechat-app-hrbust/./src/pages3/community/search-resource/index.tsx?dcda"],"sourcesContent":["import React from 'react'\nimport { View, Image, Input } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\nimport { APIS } from '@/services2'\nimport { withRequest } from '@/utils'\nimport { goPage, routes } from '@/utils/router'\nimport SearchIcon from '@/assets/community-imgs/search.png'\nimport ResourceItem from '@/components/resource-item'\nimport './index.less'\n\nconst prefix = 'community-search'\n\ntype List = GetApiResultType<typeof APIS.ResourceApi.apiResourceSearchGet>\n\ninterface IState {\n  list: List\n  // hasNext: boolean\n  keyword: string\n}\nexport default class Search extends React.Component<{}, IState> {\n  state: IState = {\n    list: [],\n    // hasNext: true,\n    keyword: ''\n  }\n\n  pageNum = 0\n  pageSize = 20\n  fetching = false\n\n  onPullDownRefresh = () => {}\n\n  onKeywordChange = e => {\n    this.setState({\n      keyword: e.detail.value\n    })\n  }\n\n  fetchData = () => {\n    if (this.fetching) {\n      return\n    }\n    this.fetching = true\n    this.pageNum = 0\n\n    this.fetchList(true)\n  }\n\n  fetchList = async (reset?: boolean) => {\n    const { keyword } = this.state\n    this.fetching = true\n    const api = APIS.ResourceApi.apiResourceSearchGet\n    const [err, res] = await withRequest(api)({\n      pageNum: '' + this.pageNum,\n      pageSize: '' + this.pageSize,\n      keyword\n    })\n\n    this.fetching = false\n\n    if (err || !res) {\n      return\n    }\n\n    if (this.pageNum === 0 && res.length === 0) {\n      Taro.showToast({\n        title: '没有搜索到内容',\n        icon: 'none'\n      })\n    }\n\n    this.setState({\n      list: reset ? res : this.state.list.concat(res)\n      // hasNext: res.length === this.pageSize\n    })\n  }\n\n  render() {\n    const { list } = this.state\n    return (\n      <View className={prefix}>\n        <View className={`${prefix}-input`}>\n          <Image className={`${prefix}-input__icon`} src={SearchIcon}></Image>\n          <Input\n            confirmType=\"search\"\n            onInput={this.onKeywordChange}\n            placeholder=\"搜索关键词\"\n            onConfirm={this.fetchData}\n            autoFocus\n          ></Input>\n        </View>\n        <View className={`${prefix}-list`}>\n          {list.length === 0 ? (\n            <View className=\"community-no-data\">暂无内容</View>\n          ) : (\n            list.map(item => (\n              <ResourceItem\n                data={item}\n                key={item._id}\n                onClick={() =>\n                  goPage(`${routes.resourceDetail}?id=${item._id}`)\n                }\n              ></ResourceItem>\n            ))\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"资源搜索\",\"enablePullDownRefresh\":true};\n\n\nvar inst = Page(createPageConfig(component, 'pages3/community/search-resource/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}