{"version":3,"file":"pages3/community/search/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;;;;;;;;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://wechat-app-hrbust/._src_pages3_community_search_index.tsx","webpack://wechat-app-hrbust/./src/pages3/community/search/index.tsx?7dbd"],"sourcesContent":["import React from 'react'\nimport { View, Image, Input } from '@tarojs/components'\nimport { AtTag } from 'taro-ui'\nimport Taro from '@tarojs/taro'\nimport { APIS } from '@/services2'\nimport { withRequest } from '@/utils'\nimport { goPage, routes } from '@/utils/router'\nimport SearchIcon from '@/assets/community-imgs/search.png'\nimport WallItem from '../_components/wall-item'\nimport './index.less'\nimport SaleWallItem from '../_components/sale-wall-item'\n\nconst prefix = 'community-search'\n\nenum TagType {\n  brick = 'brick',\n  mate = 'mate',\n  comment = 'comment'\n}\n\ntype BrickList = GetApiResultType<typeof APIS.WallApi.apiWallListGet>\ntype MateList = GetApiResultType<typeof APIS.SaleWallApi.apiSaleWallListGet>\n\ninterface IState {\n  tag: TagType\n  brickList: BrickList\n  mateList: MateList\n  // hasNext: boolean\n  keyword: string\n}\nexport default class Search extends React.Component<{}, IState> {\n  state: IState = {\n    tag: TagType.brick,\n    brickList: [],\n    mateList: [],\n    // hasNext: true,\n    keyword: ''\n  }\n\n  pageNum = 0\n  pageSize = 20\n  fetching = false\n\n  onPullDownRefresh = () => {}\n\n  onKeywordChange = e => {\n    this.setState({\n      keyword: e.detail.value\n    })\n  }\n\n  setTag = (tag: TagType) => {\n    if (tag === TagType.comment) {\n      Taro.showToast({\n        title: '评论搜索暂未开放',\n        icon: 'none'\n      })\n      return\n    }\n    if (this.fetching) {\n      return\n    }\n    this.pageNum = 0\n    this.setState({ tag }, () => {\n      if (this.state.keyword.trim()) {\n        this.fetchData()\n      }\n    })\n  }\n\n  fetchData = () => {\n    const { tag } = this.state\n    if (this.fetching) {\n      return\n    }\n    this.fetching = true\n    this.pageNum = 0\n    if (tag === TagType.brick) {\n      this.fetchBrickList(true)\n    } else if (tag === TagType.mate) {\n      this.fetchMateList(true)\n    }\n  }\n\n  fetchBrickList = async (reset?: boolean) => {\n    const { keyword } = this.state\n    this.fetching = true\n    const api = APIS.WallApi.apiWallSearchGet\n    const [err, res] = await withRequest(api)({\n      pageNum: '' + this.pageNum,\n      pageSize: '' + this.pageSize,\n      keyword\n    })\n\n    this.fetching = false\n\n    if (err || !res) {\n      return\n    }\n\n    if (this.pageNum === 0 && res.length === 0) {\n      Taro.showToast({\n        title: '没有搜索到内容',\n        icon: 'none'\n      })\n    }\n\n    this.setState({\n      brickList: reset ? res : this.state.brickList.concat(res),\n      mateList: []\n      // hasNext: res.length === this.pageSize\n    })\n  }\n\n  fetchMateList = async (reset?: boolean) => {\n    const { keyword } = this.state\n    this.fetching = true\n    const api = APIS.SaleWallApi.apiSaleWallSearchGet\n    const [err, res] = await withRequest(api)({\n      pageNum: '' + this.pageNum,\n      pageSize: '' + this.pageSize,\n      keyword\n    })\n\n    this.fetching = false\n\n    if (err || !res) {\n      return\n    }\n\n    if (this.pageNum === 0 && res.length === 0) {\n      Taro.showToast({\n        title: '没有搜索到内容',\n        icon: 'none'\n      })\n    }\n\n    this.setState({\n      mateList: reset ? res : this.state.mateList.concat(res),\n      brickList: []\n      // hasNext: res.length === this.pageSize\n    })\n  }\n\n  render() {\n    const { tag } = this.state\n    return (\n      <View className={prefix}>\n        <View className={`${prefix}-input`}>\n          <Image className={`${prefix}-input__icon`} src={SearchIcon}></Image>\n          <Input\n            confirmType=\"search\"\n            onInput={this.onKeywordChange}\n            placeholder=\"搜索关键词\"\n            onConfirm={this.fetchData}\n            autoFocus\n          ></Input>\n        </View>\n        <View className={`${prefix}-tags`}>\n          <AtTag\n            type=\"primary\"\n            active={tag === TagType.brick}\n            onClick={() => this.setTag(TagType.brick)}\n          >\n            表白墙\n          </AtTag>\n          <AtTag\n            type=\"primary\"\n            active={tag === TagType.mate}\n            onClick={() => this.setTag(TagType.mate)}\n          >\n            卖舍友\n          </AtTag>\n          <AtTag\n            type=\"primary\"\n            active={tag === TagType.comment}\n            onClick={() => this.setTag(TagType.comment)}\n          >\n            评论\n          </AtTag>\n        </View>\n        <View className={`${prefix}-list`}>\n          {tag === TagType.brick && this.state.brickList.length === 0 ? (\n            <View className=\"community-no-data\">暂无内容</View>\n          ) : (\n            this.state.brickList.map(item => (\n              <WallItem\n                data={item}\n                key={item._id}\n                onClick={() => goPage(`${routes.wallDetail}?id=${item._id}`)}\n              ></WallItem>\n            ))\n          )}\n\n          {tag === TagType.mate && this.state.mateList.length === 0 ? (\n            <View className=\"community-no-data\">暂无内容</View>\n          ) : (\n            <View className={`${prefix}__sale-wall-list`}>\n              {this.state.mateList.map(item => (\n                <SaleWallItem data={item} key={item._id}></SaleWallItem>\n              ))}\n            </View>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../../../../node_modules/.pnpm/babel-loader@8.2.1_@babel+core@7.26.9_webpack@5.78.0_@swc+core@1.3.23_/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[5].use[0]!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"搜索\",\"enablePullDownRefresh\":true};\n\n\nvar inst = Page(createPageConfig(component, 'pages3/community/search/index', {root:{cn:[]}}, config || {}))\n\n\nexport default component\n"],"names":[],"sourceRoot":""}