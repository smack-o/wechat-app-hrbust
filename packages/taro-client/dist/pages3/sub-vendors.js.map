{"version":3,"file":"pages3/sub-vendors.js","mappings":"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","sources":["webpack://wechat-app-hrbust/._src_components_fix-block_FixBlock.tsx","webpack://wechat-app-hrbust/._src_components_fix-block_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_brick-message-list_index.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_comment-input_CommentInput.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_comment-input_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_comment-list_CommentList.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_comment-list_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_list-item_ListItem.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_list-item_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_mate-message-list_index.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_sale-wall-item_SaleWallItem.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_sale-wall-item_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_tab_Tab.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_tab_index.ts","webpack://wechat-app-hrbust/._src_pages3_community__components_wall-item_WallItem.tsx","webpack://wechat-app-hrbust/._src_pages3_community__components_wall-item_index.ts"],"sourcesContent":["import React, {\n  Fragment,\n  PropsWithChildren,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react'\n// import { PxToRem } from '@/utils'\nimport cn from 'classnames'\nimport { View } from '@tarojs/components'\nimport Taro from '@tarojs/taro'\nimport './FixBlock.less'\n\ninterface IProps {\n  className?: string\n  /**\n   * fix 距离顶部距离 单位 px 默认 0\n   */\n  top?: number\n  /**\n   * fix 距离底部距离 单位 px 默认 0\n   */\n  bottom?: number\n  disabled?: boolean\n  /**\n   * 高度，若不传动态计算，建议传入，计算有性能开销\n   */\n  height?: number\n}\n\nconst prefix = 'fix-block'\n\nexport default function FixBlock(props: PropsWithChildren<IProps>) {\n  const {\n    className,\n    children,\n    top,\n    disabled,\n    bottom,\n    height: propsHeight = 0\n  } = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const [height, setHeight] = useState(propsHeight)\n\n  const id = useMemo(\n    () => `id_${Date.now()}_${parseInt(`${Math.random() * 1000}`, 10)}`,\n    []\n  )\n\n  useEffect(() => {\n    if (propsHeight) {\n      return\n    }\n    setTimeout(() => {\n      Taro.createSelectorQuery()\n        .select('.' + id)\n        .boundingClientRect(function(rect) {\n          console.log(rect, id, 'rect')\n          setHeight(rect?.height || 0)\n        })\n        .exec()\n    }, 0)\n  }, [children, id, propsHeight])\n\n  const style =\n    height > 0\n      ? {\n          height: `${height}rpx`\n        }\n      : {}\n\n  if (disabled) {\n    return <Fragment>{children}</Fragment>\n  }\n\n  // fix top or bottom\n  const fixStyle: { [key: string]: string } = {}\n\n  if (bottom !== undefined) {\n    fixStyle.bottom = Taro.pxTransform(bottom)\n  } else {\n    fixStyle.top = Taro.pxTransform(top || 0)\n  }\n\n  return (\n    <View\n      className={cn(prefix, className, {\n        [`${prefix}--bottom`]: bottom === 0 && propsHeight\n      })}\n      style={style}\n    >\n      <View\n        className={cn(`${prefix}__children`, id, {\n          [`${prefix}__children--fixed`]: height > 0\n        })}\n        style={fixStyle}\n        ref={ref}\n      >\n        {children}\n      </View>\n    </View>\n  )\n}\n","export { default } from './FixBlock'\n","import React, { Fragment } from 'react'\nimport { View, Text } from '@tarojs/components'\nimport { APIS } from '@/services2'\nimport { goPage } from '@/utils/router'\nimport { routes } from '@/app.config'\nimport './index.less'\nimport ListItem from '../list-item'\n\ninterface IProps {\n  list: GetApiResultType<typeof APIS.WallApi.apiWallListGet>\n}\n\nexport default function BrickMessageList(props: IProps) {\n  const { list } = props\n\n  if (list.length === 0) {\n    return <View className=\"community-no-data\">暂未发布内容</View>\n  }\n  return (\n    <Fragment>\n      {list.map(item => {\n        return (\n          <ListItem\n            key={item._id}\n            userInfo={item.publisher?.userInfo}\n            userTags={item.publisher?.tags}\n            onClick={() => {\n              goPage(`${routes.wallDetail}?id=${item._id}`)\n            }}\n            time={item.createdAt}\n            photo={item.photos?.[0]}\n            // rightContent={item.content}\n            content={\n              <View>\n                {item.to && (\n                  <Fragment>\n                    表白&nbsp;\n                    <Text className=\"blue-text\">@{item.to}</Text>&nbsp;\n                  </Fragment>\n                )}\n\n                {item.content}\n              </View>\n            }\n          ></ListItem>\n        )\n      })}\n    </Fragment>\n  )\n}\n","import React, { useCallback, useRef } from 'react'\nimport { Input, View } from '@tarojs/components'\nimport { AtButton } from 'taro-ui'\nimport FixBock from '@/components/fix-block'\nimport { requestSubscribeMessage } from '@/utils'\nimport './CommentInput.less'\n\ninterface IProps {\n  placeholder?: string\n  onSubmit?: (value: string) => void\n  currentIndex?: number\n  onBlur?: () => void\n  isReply?: boolean\n}\n\nexport enum CommentType {\n  /**\n   * 表白墙评论\n   */\n  BrickComment = 0,\n  /**\n   * 卖舍友评论\n   */\n  MateComment = 1,\n  /**\n   * 评论回复\n   */\n  ReplyComment = 2,\n  /**\n   * 游戏商品评论\n   */\n  ResourceComment = 3\n}\n\nconst prefix = 'comment-input'\nexport default function CommentInput(props: IProps) {\n  const {\n    placeholder = '快来撩一下~',\n    onSubmit,\n    isReply = false,\n    onBlur\n  } = props\n\n  const [value, setValue] = React.useState('')\n  const ref = useRef()\n\n  const onInput = useCallback(e => {\n    setValue(e.target.value)\n  }, [])\n\n  const onSubmitHandle = useCallback(async () => {\n    await requestSubscribeMessage()\n\n    await onSubmit?.(value)\n    setValue('')\n  }, [onSubmit, value])\n\n  const onBlurHandler = useCallback(() => {\n    // 延迟清除数据\n    setTimeout(() => {\n      setValue('')\n      onBlur?.()\n    }, 300)\n  }, [onBlur])\n\n  console.log(isReply, 'isReply')\n  return (\n    <FixBock bottom={0} height={110}>\n      <View className={prefix}>\n        <Input\n          ref={ref}\n          maxlength={100}\n          placeholder={placeholder}\n          className={`${prefix}__input`}\n          value={value}\n          onInput={onInput}\n          placeholderClass={`${prefix}__input--placeholder`}\n          focus={isReply}\n          onBlur={onBlurHandler}\n          confirmHold\n          adjustPosition\n        ></Input>\n        <AtButton\n          className={`${prefix}__button`}\n          type=\"primary\"\n          size=\"small\"\n          onClick={onSubmitHandle}\n          // disabled={!value}\n        >\n          发送\n        </AtButton>\n        {/* 111 */}\n      </View>\n    </FixBock>\n  )\n}\n","export { default } from './CommentInput'\nexport * from './CommentInput'\n","import React, {\n  Fragment,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState\n} from 'react'\nimport Taro from '@tarojs/taro'\nimport { Image, Text, View } from '@tarojs/components'\nimport { APIS } from '@/services2'\nimport Avatar, { NickName } from '@/components/Avatar'\nimport { showToast, withRequest } from '@/utils'\nimport Time from '@/components/Time'\nimport LikeIcon from '@/assets/community-imgs/like.png'\nimport LikeSelectedIcon from '@/assets/community-imgs/like_selected.png'\nimport CommentInput, { CommentType } from '../comment-input'\nimport './CommentList.less'\n\ninterface IWrapperProps {\n  hotList?: GetApiResultType<typeof APIS.CommentApi.apiCommentBrickIdGet>\n  list: GetApiResultType<typeof APIS.CommentApi.apiCommentBrickIdGet>\n  onCommentSubmit?: (value: string, to?: string, commentId?: string) => void\n  showInput?: boolean\n  commentCount?: number\n}\n\ninterface IProps {\n  list: GetApiResultType<typeof APIS.CommentApi.apiCommentBrickIdGet>\n  onCommentSubmit?: (value: string, to?: string, commentId?: string) => void\n  onCommentItemClick?: (\n    to?: string,\n    commentId?: string,\n    nickName?: string\n  ) => void\n  showInput?: boolean\n  avatarSize?: string\n  /**\n   * 父级评论 id\n   */\n  parentId?: string\n  replyCount?: number\n}\n\nconst prefix = 'comment-list'\n\nexport function CommentList(props: IProps) {\n  const {\n    list = [],\n    avatarSize = '70rpx',\n    parentId = '',\n    onCommentItemClick,\n    replyCount = 0\n  } = props\n\n  const [listLocal, setListLocal] = useState(list)\n  const [pageNum, setPageNum] = useState(1)\n\n  let replyCountLocal = useMemo(() => replyCount, [replyCount])\n  console.log(listLocal.length, replyCount, replyCountLocal)\n  const showReplyMore = listLocal.length < replyCountLocal\n  // const [showReplyMore, setShowReplyMore] = useState(list.length < replyCount)\n\n  useEffect(() => {\n    setListLocal(list)\n    setPageNum(1)\n  }, [list])\n\n  // 点赞\n  const onLikeHandler = useCallback(\n    async (index: number, e) => {\n      e.stopPropagation()\n      const item = listLocal[index]\n      const [err] = await withRequest(APIS.CommentApi.apiCommentLikeIdPut)({\n        id: item._id\n      })\n\n      // 脏逻辑，直接更该数据，然后手动触发强制更新\n      if (!err) {\n        const isLike = item.isLike\n        item.isLike = !isLike\n        item.likeCount = item.likeCount + (isLike ? -1 : 1)\n      }\n      setListLocal([...listLocal])\n    },\n    [listLocal]\n  )\n\n  // 删除评论\n  const onDelete = useCallback(\n    async (index: number, e) => {\n      e.stopPropagation()\n      Taro.showModal({\n        title: '确认删除这条评论？',\n        content: '删除后无法找回，请谨慎操作。',\n        success: async res => {\n          if (res.confirm) {\n            const item = listLocal[index]\n            const [err] = await withRequest(APIS.CommentApi.apiCommentIdDelete)(\n              {\n                id: item._id\n              }\n            )\n            if (!err) {\n              setListLocal(\n                listLocal.slice(0, index).concat(listLocal.slice(index + 1))\n              )\n              showToast({\n                title: '删除成功',\n                icon: 'success'\n              })\n              replyCountLocal && (replyCountLocal -= 1)\n            }\n          }\n        }\n      })\n    },\n    [listLocal]\n  )\n\n  // 点击\n  const onItemClick = useCallback(\n    (item: typeof list[0]) => {\n      onCommentItemClick?.(\n        item.from?._id,\n        parentId || item._id,\n        item.from?.userInfo?.customName\n      )\n    },\n    [list, onCommentItemClick, parentId]\n  )\n\n  const loadReplyMore = useCallback(async () => {\n    const [err, res] = await withRequest(\n      APIS.CommentApi.apiCommentCommentIdGet\n    )({ id: parentId, pageNum: String(pageNum), pageSize: '3' })\n    setPageNum(pageNum + 1)\n    if (!err && res) {\n      setListLocal(listLocal.concat(res))\n      // if (res.length < 3) {\n      //   setShowReplyMore(false)\n      // }\n    }\n  }, [listLocal, pageNum, parentId])\n\n  return (\n    <Fragment>\n      {listLocal.length === 0 ? (\n        <View className={`${prefix}__community-no-data community-no-data`}>\n          暂无评论\n        </View>\n      ) : (\n        <View className={prefix}>\n          {listLocal.map((item, index) => {\n            const {\n              replyComment = [],\n              content,\n              from,\n              type,\n              to,\n              isPublisher\n            } = item\n            return (\n              <Fragment key={item._id}>\n                <View\n                  className={`${prefix}__item`}\n                  onClick={() => {\n                    onItemClick(item)\n                    // setCurrentIndex(index)\n                  }}\n                >\n                  <Avatar\n                    className={`${prefix}__item__avatar`}\n                    avatarSize={avatarSize}\n                    customAvatarUrl={from?.userInfo?.customAvatarUrl}\n                    avatarUrl={from?.userInfo?.avatarUrl}\n                    _id={from?._id}\n                    onClickType=\"jump\"\n                  ></Avatar>\n                  <View className={`${prefix}__item-right`}>\n                    <View className={`${prefix}__item__title`}>\n                      <NickName\n                        className={`${prefix}__item__title__name`}\n                        nickName={from?.userInfo?.nickName}\n                        customName={from?.userInfo?.customName}\n                        isPublisher={isPublisher}\n                        tags={from?.tags}\n                      ></NickName>\n                      <Time\n                        className={`${prefix}__item__title__time`}\n                        time={item.createdAt}\n                        type=\"relative\"\n                      ></Time>\n                    </View>\n                    <Text user-select className={`${prefix}__item__content`}>\n                      {type === CommentType.ReplyComment\n                        ? `@${to?.userInfo?.customName}: ${content}`\n                        : content}\n                    </Text>\n\n                    <View className={`${prefix}__item-footer`}>\n                      {isPublisher && (\n                        <View\n                          className={`${prefix}__item-footer__delete blue-text`}\n                          onClick={e => onDelete(index, e)}\n                        >\n                          删除\n                        </View>\n                      )}\n                      <View\n                        className={`${prefix}__item-footer__like`}\n                        onClick={e => onLikeHandler(index, e)}\n                      >\n                        <Image\n                          src={item.isLike ? LikeSelectedIcon : LikeIcon}\n                          mode=\"widthFix\"\n                        ></Image>\n                        <Text className={item.isLike ? 'red-text' : ''}>\n                          {item.likeCount}\n                        </Text>\n                      </View>\n                    </View>\n                  </View>\n                </View>\n\n                {replyComment?.length > 0 && (\n                  <View className={`${prefix}__item-replay`}>\n                    <CommentList\n                      list={replyComment}\n                      avatarSize=\"50rpx\"\n                      parentId={item._id}\n                      onCommentItemClick={onCommentItemClick}\n                      replyCount={item.replyCount}\n                    ></CommentList>\n                  </View>\n                )}\n              </Fragment>\n            )\n          })}\n          {parentId && showReplyMore && (\n            <View\n              className={`${prefix}__replay-more blue-text`}\n              onClick={loadReplyMore}\n            >\n              加载更多...\n            </View>\n          )}\n        </View>\n      )}\n    </Fragment>\n  )\n}\n\nexport default function CommentListWrapper(props: IWrapperProps) {\n  const {\n    list = [],\n    onCommentSubmit,\n    showInput = false,\n    hotList = [],\n    commentCount\n  } = props\n\n  const [currentComment, setCurrentComment] = useState<{\n    to?: string\n    commentId?: string\n    nickName?: string\n  } | null>(null)\n\n  const onCommentSubmitHandler = useCallback(\n    async (value: string) => {\n      console.log(value, currentComment?.to, currentComment?.commentId)\n      await onCommentSubmit?.(\n        value,\n        currentComment?.to,\n        currentComment?.commentId\n      )\n      setCurrentComment(null)\n    },\n    [onCommentSubmit, currentComment]\n  )\n\n  const onCommentItemClick = useCallback(\n    (to?: string, commentId?: string, nickName?: string) => {\n      setCurrentComment({ to, commentId, nickName })\n    },\n    []\n  )\n\n  return (\n    <Fragment>\n      {hotList && hotList.length > 0 && (\n        <Fragment>\n          <View className={`${prefix}__comment-title`}>\n            热门评论 ({hotList.length})\n          </View>\n          <CommentList\n            list={hotList}\n            onCommentItemClick={onCommentItemClick}\n          ></CommentList>\n        </Fragment>\n      )}\n\n      {commentCount !== undefined && (\n        <View className={`${prefix}__comment-title`}>\n          最新评论 ({commentCount})\n        </View>\n      )}\n\n      <CommentList\n        list={list}\n        onCommentItemClick={onCommentItemClick}\n      ></CommentList>\n\n      {showInput && (\n        <CommentInput\n          onSubmit={onCommentSubmitHandler}\n          placeholder={\n            currentComment?.nickName\n              ? `回复${currentComment?.nickName}`\n              : '快来撩一下~'\n          }\n          isReply={!!currentComment?.to}\n          onBlur={() => {\n            setCurrentComment(null)\n          }}\n        ></CommentInput>\n      )}\n    </Fragment>\n  )\n}\n","export { default } from './CommentList'\nexport * from './CommentList'\n","import React, { ReactChild } from 'react'\nimport Avatar, { NickName } from '@/components/Avatar'\nimport { View, Image, Text } from '@tarojs/components'\nimport { getCdnUrl } from '@/utils'\nimport Time from '@/components/Time'\nimport { UserState } from '@/redux/reducers/user'\nimport './ListItem.less'\nimport ImageCache from '@/components/ImageCache'\n\ntype IProps = {\n  onClick: () => void\n  userInfo?: UserState['userInfo']\n  showDot?: boolean\n  time?: number | string\n  content?: ReactChild\n  rightContent?: ReactChild\n  photo?: {\n    key?: string\n  }\n  userId?: string\n  userTags?: string[]\n}\n\nconst prefix = 'community-list-item'\nexport default function ListItem(props: IProps) {\n  const {\n    userId,\n    onClick,\n    userInfo,\n    showDot = false,\n    time,\n    content,\n    rightContent,\n    photo,\n    userTags,\n  } = props\n\n  return (\n    <View className={prefix} onClick={onClick}>\n      <Avatar\n        className={`${prefix}-left`}\n        avatarSize=\"70rpx\"\n        avatarUrl={userInfo?.avatarUrl}\n        customAvatarUrl={userInfo?.customAvatarUrl}\n        onClickType={userId ? 'jump' : undefined}\n        _id={userId}\n      ></Avatar>\n      <View className={`${prefix}-center`}>\n        <View className={`${prefix}-center__title`}>\n          {showDot && <View className={`${prefix}-center__dot`}></View>}\n          <NickName\n            className={`${prefix}-center__name`}\n            nickName={userInfo?.nickName}\n            customName={userInfo?.customName}\n            tags={userTags}\n          ></NickName>\n        </View>\n        <View user-select className={`${prefix}-center__content`}>\n          {content}\n        </View>\n        <Time\n          className={`${prefix}-center__time`}\n          type=\"relative\"\n          time={time}\n        ></Time>\n      </View>\n      {photo?.key ? (\n        <ImageCache\n          className={`${prefix}-right image`}\n          mode=\"aspectFill\"\n          src={getCdnUrl(photo)}\n        ></ImageCache>\n      ) : rightContent ? (\n        <View className={`${prefix}-right`}>{rightContent}</View>\n      ) : null}\n    </View>\n  )\n}\n","export { default } from './ListItem'\n","import React, { Fragment } from 'react'\nimport { View, Text } from '@tarojs/components'\nimport { APIS } from '@/services2'\nimport { goPage } from '@/utils/router'\nimport { routes } from '@/app.config'\nimport './index.less'\nimport ListItem from '../list-item'\n\ninterface IProps {\n  list: GetApiResultType<typeof APIS.SaleWallApi.apiSaleWallListPublishGet>\n}\n\nexport default function MateMessageList(props: IProps) {\n  const { list } = props\n\n  if (list.length === 0) {\n    return <View className=\"community-no-data\">暂未发布内容</View>\n  }\n  return (\n    <Fragment>\n      {list.map(item => {\n        return (\n          <ListItem\n            key={item._id}\n            userInfo={item.publisher?.userInfo}\n            userTags={item.publisher?.tags}\n            onClick={() => {\n              goPage(`${routes.saleWallDetail}?id=${item._id}`)\n            }}\n            time={item.createdAt}\n            photo={item.photos?.[0]}\n            content={\n              <View>\n                舍友&nbsp;\n                <Text className=\"blue-text\">@{item.name}</Text>&nbsp;\n                {item.content}\n              </View>\n            }\n          ></ListItem>\n        )\n      })}\n    </Fragment>\n  )\n}\n","import { APIS } from '@/services2'\nimport { getCdnUrl, withRequest } from '@/utils'\nimport { goPage } from '@/utils/router'\nimport Taro from '@tarojs/taro'\nimport { Image, Text, View } from '@tarojs/components'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { routes } from '@/app.config'\nimport Avatar from '@/components/Avatar'\nimport Time from '@/components/Time'\nimport classNames from 'classnames'\n\nimport SaleWallLike from '@/assets/community-imgs/sale_wall_like.png'\nimport SaleWallLiked from '@/assets/community-imgs/sale_wall_liked.png'\nimport CommentIcon from '@/assets/community-imgs/comment.png'\n// import { Avatar, Time } from '../publisher-title'\nimport './SaleWallItem.less'\nimport ImageCache from '@/components/ImageCache'\n\ninterface IWallItemProps {\n  data: GetApiResultType<typeof APIS.SaleWallApi.apiSaleWallListGet>[0]\n  timeType?: 'relative' | 'absolute'\n}\n\nconst prefix = 'sale-wall-item'\n\nexport default function WallItem(props: IWallItemProps) {\n  const {\n    data: {\n      photos = [],\n      publisher,\n      likeCount,\n      isLike,\n      _id,\n      createdAt,\n      commentCount,\n      isPublisher,\n    } = {},\n    timeType,\n  } = props\n\n  const [localIsLike, setLocalIsLike] = useState(isLike)\n  const [localIsLikeCount, setLocalIsLikeCount] = useState(likeCount || 0)\n\n  useEffect(() => {\n    setLocalIsLike(isLike)\n    setLocalIsLikeCount(likeCount || 0)\n  }, [isLike, likeCount])\n\n  const onLikeClick = useCallback(\n    async (e) => {\n      e.stopPropagation()\n      const [err] = await withRequest(APIS.SaleWallApi.apiSaleWallLikeIdPut)({\n        id: _id || '',\n      })\n\n      // 本地变更\n      if (!err) {\n        setLocalIsLike(!localIsLike)\n        setLocalIsLikeCount(localIsLikeCount + (localIsLike ? -1 : 1))\n      }\n    },\n    [_id, localIsLike, localIsLikeCount]\n  )\n\n  const onItemClick = useCallback(() => {\n    goPage(`${routes.saleWallDetail}?id=${_id}`)\n  }, [_id])\n\n  const { height, width, key } = photos[0]\n\n  return (\n    <View className={prefix} onClick={onItemClick}>\n      <ImageCache\n        style={{\n          height:\n            height && width ? Taro.pxTransform((height / width) * 347) : 'auto',\n        }}\n        className={`${prefix}__photo`}\n        src={getCdnUrl(photos[0])}\n        mode=\"widthFix\"\n      ></ImageCache>\n      <View className={`${prefix}__info`}>\n        <Avatar\n          className={`${prefix}__avatar`}\n          {...publisher?.userInfo}\n          avatarSize=\"40rpx\"\n          onClickType=\"jump\"\n          _id={publisher?._id}\n          isPublisher={isPublisher}\n          userTags={publisher?.tags}\n          // avatarUrl={publisher?.userInfo?.avatarUrl || ''}\n          // nickName={publisher?.userInfo?.nickName || ''}\n        ></Avatar>\n        <View className={`${prefix}__info-bottom`}>\n          <Time time={createdAt || ''} type={timeType}></Time>\n          <View\n            className={classNames(`${prefix}__info-like`, {\n              active: localIsLike && !isLike,\n            })}\n          >\n            <Image src={CommentIcon} mode=\"widthFix\"></Image>\n            {commentCount}\n            <Image\n              className={`${prefix}__info-like-icon`}\n              src={localIsLike ? SaleWallLiked : SaleWallLike}\n              mode=\"widthFix\"\n              onClick={onLikeClick}\n            ></Image>\n            <Text className={localIsLike ? 'red-text' : ''}>\n              {localIsLikeCount}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  )\n}\n","export { default } from './SaleWallItem'\n","import React from 'react'\nimport cn from 'classnames'\nimport { View } from '@tarojs/components'\n// import FixBlock from '@/components/fix-block'\n\nimport './Tab.less'\n\ninterface ITabItem<Key> {\n  key: Key\n  text?: string\n  render?: () => React.ReactNode\n}\n\nexport interface ITabProps<Key = string> {\n  currentIndex: number\n  tabList: ITabItem<Key>[]\n  children?: React.ReactNode\n  onChange?: (index: number, key?: Key, text?: string) => void\n  /** fix 距离顶部距离 */\n  fixBlockTop?: number\n  /** 点击相同 tab 是否有响应 */\n  canClickSameTab?: boolean\n}\n\nconst prefix = 'community-tab'\n\nexport default function TopBar<Key>(props: ITabProps<Key>) {\n  const {\n    currentIndex,\n    tabList,\n    onChange,\n    children,\n    canClickSameTab = false\n  } = props\n\n  return (\n    <View className={prefix}>\n      {/* <FixBlock top={0}> */}\n      <View className={`${prefix}-title`}>\n        {tabList.map((tabItem, index) => {\n          const { key, text, render } = tabItem\n          return (\n            <View\n              key={index}\n              className={cn(`${prefix}__item`, {\n                current: currentIndex === index\n              })}\n              onClick={() => {\n                if (currentIndex !== index || canClickSameTab) {\n                  onChange?.(index, key, text)\n                }\n              }}\n            >\n              {render ? render() : text}\n              {currentIndex === index && (\n                <View className={`${prefix}-active-bar`}></View>\n              )}\n            </View>\n          )\n        })}\n      </View>\n      {/* </FixBlock> */}\n      {children && <View className={`${prefix}__content`}>{children}</View>}\n    </View>\n  )\n}\n","export { default } from './Tab'\n","import React, { useCallback, useEffect, useState } from 'react'\nimport Taro from '@tarojs/taro'\nimport { APIS } from '@/services2'\nimport { getCdnUrl, showToast, withRequest } from '@/utils'\nimport { Image, View, Text } from '@tarojs/components'\nimport classNames from 'classnames'\n\nimport CommentIcon from '@/assets/community-imgs/comment.png'\nimport LikeIcon from '@/assets/community-imgs/like.png'\nimport ViewIcon from '@/assets/community-imgs/view.png'\nimport LikeSelectedIcon from '@/assets/community-imgs/like_selected.png'\nimport PublisherTitle from '@/components/publisher-title'\n\nimport './WallItem.less'\n\ninterface IWallItemProps {\n  timeType?: 'relative' | 'absolute'\n  data:\n    | GetApiResultType<typeof APIS.WallApi.apiWallListGet>[0]\n    | GetApiResultType<typeof APIS.WallApi.apiWallIdGet>\n  onClick?: () => void\n  showDelete?: boolean\n  showHotComments?: boolean\n}\n\nconst prefix = 'wall-item'\n\nconst getPhotosCol = (length = 0) => {\n  if (length === 4) {\n    return 2\n  }\n  if (length >= 3) {\n    return 3\n  }\n  return length\n}\n\nexport default function WallItem(props: IWallItemProps) {\n  const {\n    data: {\n      photos = [],\n      to,\n      publisher,\n      content,\n      likeCount,\n      isLike,\n      _id,\n      createdAt,\n      commentCount,\n      isPublisher,\n      hotComments = [],\n      viewCount\n    } = {},\n    timeType,\n    onClick,\n    showDelete = false,\n    showHotComments = false\n  } = props\n\n  const [localIsLike, setLocalIsLike] = useState(isLike)\n  const [localIsLikeCount, setLocalIsLikeCount] = useState(likeCount || 0)\n\n  useEffect(() => {\n    setLocalIsLike(isLike)\n    setLocalIsLikeCount(likeCount || 0)\n  }, [isLike, likeCount])\n\n  const onImageClick = useCallback(\n    (index: number, e) => {\n      e.stopPropagation()\n      // @ts-ignore\n      wx.previewMedia({\n        current: index,\n        sources: photos.map(item => ({\n          url: getCdnUrl(item),\n          type: 'image'\n        })),\n        showmenu: true\n      })\n    },\n    [photos]\n  )\n\n  const onLikeClick = useCallback(\n    async e => {\n      e.stopPropagation()\n      if (!_id) {\n        return\n      }\n\n      const [err] = await withRequest(APIS.WallApi.apiWallLikeIdPut)({\n        id: _id\n      })\n\n      // 本地变更\n      if (!err) {\n        setLocalIsLike(!localIsLike)\n        setLocalIsLikeCount(localIsLikeCount + (localIsLike ? -1 : 1))\n      }\n    },\n    [_id, localIsLike, localIsLikeCount]\n  )\n\n  const onDelete = useCallback(() => {\n    Taro.showModal({\n      title: '确认删除这条动态？',\n      content: '删除后无法找回，请谨慎操作。',\n      success: async res => {\n        if (res.confirm) {\n          const [err] = await withRequest(APIS.WallApi.apiWallIdDelete)({\n            id: _id || ''\n          })\n          if (!err) {\n            showToast({\n              title: '删除成功',\n              icon: 'success',\n              finished: () => {\n                Taro.navigateBack()\n              }\n            })\n          }\n        }\n      }\n    })\n  }, [_id])\n\n  return (\n    <View className={prefix} onClick={onClick}>\n      <PublisherTitle\n        time={createdAt}\n        publisher={publisher}\n        timeType={timeType}\n        isPublisher={isPublisher}\n      ></PublisherTitle>\n      <View\n        className={classNames(\n          `${prefix}__photos`,\n          `col-${getPhotosCol(photos?.length)}`\n        )}\n      >\n        {photos?.map((photo, index) => {\n          return (\n            <Image\n              onClick={e => onImageClick(index, e)}\n              className={`${prefix}__photos-item`}\n              key={photo.key}\n              mode={photos.length > 1 ? 'aspectFill' : 'widthFix'}\n              src={getCdnUrl(photo)}\n            ></Image>\n          )\n        })}\n      </View>\n      <Text user-select className={`${prefix}__content`}>\n        {to && <Text className={`${prefix}__content-to`}>@{to}</Text>}\n\n        <Text className={`${prefix}__content-detail`}>{content}</Text>\n      </Text>\n      <View className={`${prefix}__footer`}>\n        {showDelete && isPublisher && (\n          <View\n            className={`${prefix}__footer-delete blue-text`}\n            onClick={onDelete}\n          >\n            删除\n          </View>\n        )}\n        <View className={`${prefix}__footer-item`}>\n          <Image src={ViewIcon} className=\"view-icon\" mode=\"widthFix\"></Image>\n          {viewCount}\n        </View>\n        <View className={`${prefix}__footer-item`}>\n          <Image src={CommentIcon} mode=\"widthFix\"></Image>\n          {commentCount}\n        </View>\n        <View className={`${prefix}__footer-item`} onClick={onLikeClick}>\n          <Image\n            src={localIsLike ? LikeSelectedIcon : LikeIcon}\n            mode=\"widthFix\"\n          ></Image>\n          <Text className={localIsLike ? 'red-text' : ''}>\n            {localIsLikeCount}\n          </Text>\n        </View>\n      </View>\n      {showHotComments && hotComments.length > 0 && (\n        <View className={`${prefix}__comment-list`}>\n          {hotComments.map(item => {\n            return (\n              <View key={item._id} className={`${prefix}__comment-list__item`}>\n                <Text className=\"blue-text\">\n                  @{item.from?.userInfo?.customName}:{' '}\n                </Text>\n                {item.content}\n              </View>\n            )\n          })}\n        </View>\n      )}\n    </View>\n  )\n}\n","export { default } from './WallItem'\n"],"names":[],"sourceRoot":""}