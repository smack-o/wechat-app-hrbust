"use strict";
(wx["webpackJsonp"] = wx["webpackJsonp"] || []).push([["vendors-node_modules_taro_weapp_prebundle_axios-miniprogram-adapter_js"],{

/***/ "./node_modules/.taro/weapp/prebundle/axios-miniprogram-adapter.js":
/*!*************************************************************************!*\
  !*** ./node_modules/.taro/weapp/prebundle/axios-miniprogram-adapter.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ axios_miniprogram_adapter_default; }
/* harmony export */ });
/* harmony import */ var _chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-P7VEE7PG.js */ "./node_modules/.taro/weapp/prebundle/chunk-P7VEE7PG.js");
/* provided dependency */ var URLSearchParams = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js */ "./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js")["URLSearchParams"];
/* provided dependency */ var navigator = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js */ "./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js")["nav"];
/* provided dependency */ var window = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js */ "./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js")["window$1"];
/* provided dependency */ var document = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js */ "./node_modules/.taro/weapp/prebundle/chunk-6KSI5IDP.js")["document$1"];

// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/bind.js
var require_bind = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/bind.js" (exports, module) {
        "use strict";
        module.exports = function bind(fn, thisArg) {
            return function wrap() {
                var args = new Array(arguments.length);
                for(var i = 0; i < args.length; i++){
                    args[i] = arguments[i];
                }
                return fn.apply(thisArg, args);
            };
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/utils.js
var require_utils = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/utils.js" (exports, module) {
        "use strict";
        var bind = require_bind();
        var toString = Object.prototype.toString;
        function isArray(val) {
            return toString.call(val) === "[object Array]";
        }
        function isUndefined(val) {
            return typeof val === "undefined";
        }
        function isBuffer(val) {
            return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === "function" && val.constructor.isBuffer(val);
        }
        function isArrayBuffer(val) {
            return toString.call(val) === "[object ArrayBuffer]";
        }
        function isFormData(val) {
            return typeof FormData !== "undefined" && val instanceof FormData;
        }
        function isArrayBufferView(val) {
            var result;
            if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
                result = ArrayBuffer.isView(val);
            } else {
                result = val && val.buffer && val.buffer instanceof ArrayBuffer;
            }
            return result;
        }
        function isString(val) {
            return typeof val === "string";
        }
        function isNumber(val) {
            return typeof val === "number";
        }
        function isObject(val) {
            return val !== null && typeof val === "object";
        }
        function isDate(val) {
            return toString.call(val) === "[object Date]";
        }
        function isFile(val) {
            return toString.call(val) === "[object File]";
        }
        function isBlob(val) {
            return toString.call(val) === "[object Blob]";
        }
        function isFunction(val) {
            return toString.call(val) === "[object Function]";
        }
        function isStream(val) {
            return isObject(val) && isFunction(val.pipe);
        }
        function isURLSearchParams(val) {
            return typeof URLSearchParams !== "undefined" && val instanceof URLSearchParams;
        }
        function trim(str) {
            return str.replace(/^\s*/, "").replace(/\s*$/, "");
        }
        function isStandardBrowserEnv() {
            if (typeof navigator !== "undefined" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS")) {
                return false;
            }
            return typeof window !== "undefined" && typeof document !== "undefined";
        }
        function forEach(obj, fn) {
            if (obj === null || typeof obj === "undefined") {
                return;
            }
            if (typeof obj !== "object") {
                obj = [
                    obj
                ];
            }
            if (isArray(obj)) {
                for(var i = 0, l = obj.length; i < l; i++){
                    fn.call(null, obj[i], i, obj);
                }
            } else {
                for(var key in obj){
                    if (Object.prototype.hasOwnProperty.call(obj, key)) {
                        fn.call(null, obj[key], key, obj);
                    }
                }
            }
        }
        function merge() {
            var result = {};
            function assignValue(val, key) {
                if (typeof result[key] === "object" && typeof val === "object") {
                    result[key] = merge(result[key], val);
                } else {
                    result[key] = val;
                }
            }
            for(var i = 0, l = arguments.length; i < l; i++){
                forEach(arguments[i], assignValue);
            }
            return result;
        }
        function deepMerge() {
            var result = {};
            function assignValue(val, key) {
                if (typeof result[key] === "object" && typeof val === "object") {
                    result[key] = deepMerge(result[key], val);
                } else if (typeof val === "object") {
                    result[key] = deepMerge({}, val);
                } else {
                    result[key] = val;
                }
            }
            for(var i = 0, l = arguments.length; i < l; i++){
                forEach(arguments[i], assignValue);
            }
            return result;
        }
        function extend(a, b, thisArg) {
            forEach(b, function assignValue(val, key) {
                if (thisArg && typeof val === "function") {
                    a[key] = bind(val, thisArg);
                } else {
                    a[key] = val;
                }
            });
            return a;
        }
        module.exports = {
            isArray,
            isArrayBuffer,
            isBuffer,
            isFormData,
            isArrayBufferView,
            isString,
            isNumber,
            isObject,
            isUndefined,
            isDate,
            isFile,
            isBlob,
            isFunction,
            isStream,
            isURLSearchParams,
            isStandardBrowserEnv,
            forEach,
            merge,
            deepMerge,
            extend,
            trim
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/enhanceError.js
var require_enhanceError = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/enhanceError.js" (exports, module) {
        "use strict";
        module.exports = function enhanceError(error, config, code, request, response) {
            error.config = config;
            if (code) {
                error.code = code;
            }
            error.request = request;
            error.response = response;
            error.isAxiosError = true;
            error.toJSON = function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: this.config,
                    code: this.code
                };
            };
            return error;
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/createError.js
var require_createError = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/createError.js" (exports, module) {
        "use strict";
        var enhanceError = require_enhanceError();
        module.exports = function createError2(message, config, code, request, response) {
            var error = new Error(message);
            return enhanceError(error, config, code, request, response);
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/settle.js
var require_settle = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/settle.js" (exports, module) {
        "use strict";
        var createError2 = require_createError();
        module.exports = function settle2(resolve, reject, response) {
            var validateStatus = response.config.validateStatus;
            if (!validateStatus || validateStatus(response.status)) {
                resolve(response);
            } else {
                reject(createError2("Request failed with status code " + response.status, response.config, null, response.request, response));
            }
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/buildURL.js" (exports, module) {
        "use strict";
        var utils2 = require_utils();
        function encode(val) {
            return encodeURIComponent(val).replace(/%40/gi, "@").replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        module.exports = function buildURL2(url, params, paramsSerializer) {
            if (!params) {
                return url;
            }
            var serializedParams;
            if (paramsSerializer) {
                serializedParams = paramsSerializer(params);
            } else if (utils2.isURLSearchParams(params)) {
                serializedParams = params.toString();
            } else {
                var parts = [];
                utils2.forEach(params, function serialize(val, key) {
                    if (val === null || typeof val === "undefined") {
                        return;
                    }
                    if (utils2.isArray(val)) {
                        key = key + "[]";
                    } else {
                        val = [
                            val
                        ];
                    }
                    utils2.forEach(val, function parseValue(v) {
                        if (utils2.isDate(v)) {
                            v = v.toISOString();
                        } else if (utils2.isObject(v)) {
                            v = JSON.stringify(v);
                        }
                        parts.push(encode(key) + "=" + encode(v));
                    });
                });
                serializedParams = parts.join("&");
            }
            if (serializedParams) {
                var hashmarkIndex = url.indexOf("#");
                if (hashmarkIndex !== -1) {
                    url = url.slice(0, hashmarkIndex);
                }
                url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
            }
            return url;
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/isAbsoluteURL.js" (exports, module) {
        "use strict";
        module.exports = function isAbsoluteURL(url) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/helpers/combineURLs.js" (exports, module) {
        "use strict";
        module.exports = function combineURLs(baseURL, relativeURL) {
            return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
        };
    }
});
// ../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__commonJS)({
    "../../node_modules/.pnpm/axios@0.19.2/node_modules/axios/lib/core/buildFullPath.js" (exports, module) {
        "use strict";
        var isAbsoluteURL = require_isAbsoluteURL();
        var combineURLs = require_combineURLs();
        module.exports = function buildFullPath2(baseURL, requestedURL) {
            if (baseURL && !isAbsoluteURL(requestedURL)) {
                return combineURLs(baseURL, requestedURL);
            }
            return requestedURL;
        };
    }
});
// ../../node_modules/.pnpm/axios-miniprogram-adapter@0.3.2/node_modules/axios-miniprogram-adapter/dist/index.esm.js
var import_utils = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_utils());
var import_settle = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_settle());
var import_buildURL = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_buildURL());
var import_buildFullPath = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_buildFullPath());
var import_createError = (0,_chunk_P7VEE7PG_js__WEBPACK_IMPORTED_MODULE_0__.__toESM)(require_createError());
var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
function encoder(input) {
    var str = String(input);
    var block;
    var charCode;
    var idx = 0;
    var map = chars;
    var output = "";
    for(; str.charAt(idx | 0) || (map = "=", idx % 1); output += map.charAt(63 & block >> 8 - idx % 1 * 8)){
        charCode = str.charCodeAt(idx += 3 / 4);
        if (charCode > 255) {
            throw new Error("'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.");
        }
        block = block << 8 | charCode;
    }
    return output;
}
var platFormName = "wechat";
function getRequest() {
    switch(true){
        case typeof wx === "object":
            platFormName = "wechat";
            return wx.request.bind(wx);
        case typeof swan === "object":
            platFormName = "baidu";
            return swan.request.bind(swan);
        case typeof my === "object":
            platFormName = "alipay";
            return (my.request || my.httpRequest).bind(my);
        default:
            return wx.request.bind(wx);
    }
}
function transformResponse(mpResponse, config, mpRequestOption) {
    var headers = mpResponse.header || mpResponse.headers;
    var status = mpResponse.statusCode || mpResponse.status;
    var statusText = "";
    if (status === 200) {
        statusText = "OK";
    } else if (status === 400) {
        statusText = "Bad Request";
    }
    var response = {
        data: mpResponse.data,
        status,
        statusText,
        headers,
        config,
        request: mpRequestOption
    };
    return response;
}
function transformError(error, reject, config) {
    switch(platFormName){
        case "wechat":
            if (error.errMsg.indexOf("request:fail abort") !== -1) {
                reject((0, import_createError.default)("Request aborted", config, "ECONNABORTED", ""));
            } else if (error.errMsg.indexOf("timeout") !== -1) {
                reject((0, import_createError.default)("timeout of " + config.timeout + "ms exceeded", config, "ECONNABORTED", ""));
            } else {
                reject((0, import_createError.default)("Network Error", config, null, ""));
            }
            break;
        case "alipay":
            if ([
                14,
                19
            ].includes(error.error)) {
                reject((0, import_createError.default)("Request aborted", config, "ECONNABORTED", ""));
            } else if ([
                13
            ].includes(error.error)) {
                reject((0, import_createError.default)("timeout of " + config.timeout + "ms exceeded", config, "ECONNABORTED", ""));
            } else {
                reject((0, import_createError.default)("Network Error", config, null, ""));
            }
            break;
        case "baidu":
            reject((0, import_createError.default)("Network Error", config, null, ""));
            break;
    }
}
function transformConfig(config) {
    if (platFormName === "alipay") {
        config.headers = config.header;
        delete config.header;
    }
    return config;
}
var warn = console.warn;
var isJSONstr = function(str) {
    try {
        return typeof str === "string" && str.length && (str = JSON.parse(str)) && Object.prototype.toString.call(str) === "[object Object]";
    } catch (error) {
        return false;
    }
};
function mpAdapter(config) {
    var request = getRequest();
    return new Promise(function(resolve, reject) {
        var requestTask;
        var requestData = config.data;
        var requestHeaders = config.headers;
        var requestMethod = config.method && config.method.toUpperCase() || "GET";
        var mpRequestOption = {
            method: requestMethod,
            url: (0, import_buildURL.default)((0, import_buildFullPath.default)(config.baseURL, config.url), config.params, config.paramsSerializer),
            success: function(mpResponse) {
                var response = transformResponse(mpResponse, config, mpRequestOption);
                (0, import_settle.default)(resolve, reject, response);
            },
            fail: function(error) {
                transformError(error, reject, config);
            },
            complete: function() {
                requestTask = void 0;
            }
        };
        if (config.auth) {
            var _a = [
                config.auth.username || "",
                config.auth.password || ""
            ], username = _a[0], password = _a[1];
            requestHeaders.Authorization = "Basic " + encoder(username + ":" + password);
        }
        if (config.timeout !== 0) {
            warn('The "timeout" option is not supported by miniprogram. For more information about usage see "https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#\u5168\u5C40\u914D\u7F6E"');
        }
        import_utils.default.forEach(requestHeaders, function setRequestHeader(val, key) {
            var _header = key.toLowerCase();
            if (typeof requestData === "undefined" && _header === "content-type" || _header === "referer") {
                delete requestHeaders[key];
            }
        });
        mpRequestOption.header = requestHeaders;
        if (config.responseType) {
            mpRequestOption.responseType = config.responseType;
        }
        if (config.cancelToken) {
            config.cancelToken.promise.then(function onCanceled(cancel) {
                if (!requestTask) {
                    return;
                }
                requestTask.abort();
                reject(cancel);
                requestTask = void 0;
            });
        }
        if (isJSONstr(requestData)) {
            requestData = JSON.parse(requestData);
        }
        if (requestData !== void 0) {
            mpRequestOption.data = requestData;
        }
        requestTask = request(transformConfig(mpRequestOption));
    });
}
var index_esm_default = mpAdapter;
// entry:axios-miniprogram-adapter
var axios_miniprogram_adapter_default = index_esm_default;
 /*!
 * axios-miniprogram-adapter 0.3.1 (https://github.com/bigMeow/axios-miniprogram-adapter)
 * API https://github.com/bigMeow/axios-miniprogram-adapter/blob/master/doc/api.md
 * Copyright 2018-2020 bigMeow. All Rights Reserved
 * Licensed under MIT (https://github.com/bigMeow/axios-miniprogram-adapter/blob/master/LICENSE)
 */ 


/***/ })

}]);