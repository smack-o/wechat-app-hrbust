<style lang="less">
@import '../style/weui.less';
@import './assets/global.less';
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore, connect } from 'wepy-redux'
import { store } from './store'
import { host } from './utils'
import { init } from './store/actions'

setStore(store)

@connect(
  null,
  {
    init
  }
)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/home',
      'pages/test',
      'pages/login',
      'pages/course',
      'pages/choiceTrem',
      'pages/news/news',
      'pages/news/newsDetail',
      'pages/grade',
      'pages/exam',
      'pages/webview',
      'pages/discover',
      'pages/about',
      'pages/campus',
      'pages/account',
      'pages/CET'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fafafa',
      navigationBarTitleText: '理工喵',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      // color: '#999999',
      // selectedColor: '#1AAD19',
      borderStyle: 'black',
      color: '#ccc',
      selectedColor: '#000',
      backgroundColor: '#fff',
      list: [
        {
          pagePath: 'pages/index',
          text: '首页',
          iconPath: './assets/icon/home.png',
          selectedIconPath: './assets/icon/home_selected.png'
        },
        {
          pagePath: 'pages/campus',
          text: '校园',
          iconPath: './assets/icon/campus.png',
          selectedIconPath: './assets/icon/campus_selected.png'
        },
        {
          pagePath: 'pages/discover',
          text: '发现',
          iconPath: './assets/icon/find.png',
          selectedIconPath: './assets/icon/find_selected.png'
        },
        {
          pagePath: 'pages/account',
          text: '我',
          iconPath: './assets/icon/account.png',
          selectedIconPath: './assets/icon/account_selected.png'
        }
      ]
    }
  }

  // globalData = {
  //   userInfo: null,
  //   initPromise: null
  // }

  constructor () {
    super()
    this.use('requestfix')
    const that = this
    this.intercept('request', {
      config (p) {
        // p.timestamp = +new Date()
        const cookie = wepy.getStorageSync('app_cookie')
        p.url = host + p.url
        p.header = {
          cookie
        }
        return p
      },
      success (p) {
        const { data, header } = p
        if (data.status === 200) {
          // this.globalData.sessionId = data.sessionId
          const cookie = header['Set-Cookie']
          // resolve(cookie)
          wepy.setStorageSync('app_cookie', cookie)
        }
        if (p.statusCode === 401) {
          this.showToast()
          that.methods.init()
        } else {
          return p
        }
      },
      fail (p) {
        console.log(p, 'p')
        // console.log('request fail: ', p)
        return p
      },
      complete (p) {
        // console.log('request complete: ', p)
      }
    })
  }
  showToast() {
    wepy.showToast({
      title: '登录状态失效',
      image: '../assets/icon/icon_info.png',
      duration: 1000
    })
    setTimeout(() => {
      wepy.reLaunch({
        url: '/pages/index'
      })
    }, 1000)
  }
  onShow() {
    this.methods.init()
    // this.globalData.initPromise = this.init()
    // this.globalData.getUserInfo = this.getUserInfo.bind(this)
    // this.globalData.init = this.init.bind(this)
  }

  // // 初始化函数
  // async init() {
  //   try {
  //     // 检查微信登录 session
  //     const res = await request({
  //       url: '/api/user/userinfo'
  //     })
  //     const { isLogin, studentInfo } = res.data.data
  //     // console.log(isLogin, studentInfo)
  //     this.globalData.isLogin = isLogin
  //     this.globalData.studentInfo = studentInfo
  //     const checkSession = await this.checkSession()
  //     let cookie = wepy.getStorageSync('app_cookie')
  //     if (!checkSession || !cookie || !isLogin) {
  //       // 没有服务器登录态
  //       cookie = await this.login()
  //       await request({
  //         url: '/api/user/userinfo'
  //       })
  //     }
  //     // 获取用户头像等信息
  //     const userInfo = await this.getUserInfo()
  //     this.globalData.userInfo = userInfo
  //     console.log(userInfo)
  //     return Promise.resolve()
  //     // this.updateUserInfo(userInfo)
  //   } catch (e) {
  //     return Promise.resolve()
  //   }
  // }

  // updateUserInfo(userInfo) {
  //   return new Promise((resolve, reject) => {
  //     wepy.request({
  //       url: '/api/user/userinfo',
  //       method: 'PUT',
  //       data: {
  //         userInfo: JSON.stringify(userInfo)
  //       },
  //       success: (res) => {
  //         const { data } = res
  //         console.log(data)
  //         if (data.status === 200) {
  //           // this.globalData.sessionId = data.sessionId

  //         } else {
  //           reject(new Error('更新用户信息失败', data.message))
  //         }
  //       },
  //       fail: function() {
  //         reject(new Error('更新用户信息失败'))
  //       }
  //     })
  //   })
  // }

  // // 检查session_key是否失效
  // checkSession() {
  //   return new Promise((resolve, reject) => {
  //     wepy.checkSession({
  //       success () {
  //         resolve(true)
  //       },
  //       fail () {
  //         resolve(false)
  //       }
  //     })
  //   })
  // }
  // // 登录处理
  // login() {
  //   return new Promise((resolve, reject) => {
  //     wepy.login({
  //       success: function(res) {
  //         if (res.code) {
  //           // 获取我们自己服务器的登录 session
  //           wepy.request({
  //             url: '/api/user/wx-login',
  //             data: {
  //               code: res.code
  //             },
  //             success: (res) => {
  //               const { data, header } = res
  //               if (data.status === 200) {
  //                 // this.globalData.sessionId = data.sessionId
  //                 const cookie = header['Set-Cookie']
  //                 resolve(cookie)
  //                 wepy.setStorageSync('app_cookie', cookie)
  //               } else {
  //                 reject(new Error('理工喵登录失败！', data.message))
  //               }
  //             },
  //             fail: function() {
  //               reject(new Error('理工喵登录失败！'))
  //             }
  //           })
  //         } else {
  //           reject(new Error('登录失败！' + res.errMsg))
  //         }
  //       },
  //       fail: function() {
  //         reject(new Error('登录失败！'))
  //       }
  //     })
  //   })
  // }

  // 获取用户信息处理
  // getUserInfo(cb) {
  //   if (this.globalData.userInfo) {
  //     return Promise.resolve(this.globalData.userInfo)
  //   }
  //   return new Promise((resolve, reject) => {
  //     wepy.getUserInfo({
  //       withCredentials: true,
  //       success (res) {
  //         resolve(res)
  //       },
  //       fail (e) {
  //         reject(e)
  //       }
  //     })
  //   })
  // }
}
</script>
