<template>
  <view class="account">
    <view class="user">
      <open-data class="avatar" type="userAvatarUrl" lang="zh_CN"></open-data>
      <view wx:if="{{!isLogin}}" class="button" @tap="linkTo('./login')">登录</view>
      <view wx:else class="info">
        <view class="name"><open-data type="userNickName" lang="zh_CN"></open-data></view>
        <view class="student">
          <image class="image" src="../assets/icon/authentication.png" />
          <view>{{studentInfo.name}}</view>
        </view>
      </view>
    </view>
    <view class="other">
      <view wx:if="{{isLogin}}" class="item" @tap="logout">
        <image class="image" src="../assets/icon/remove_binding.png"/>
        <view class="info">
          <view>解除绑定</view>
          <image class="arrow-right" src="../assets/icon/arrow_right.png"/>
        </view>
      </view>
      <button class="item button" open-type="contact">
        <image class="image" src="../assets/icon/contact.png"/>
        <view class="info">
          <view>联系阿喵</view>
          <image class="arrow-right" src="../assets/icon/arrow_right.png"/>
        </view>
      </button>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import { init } from '../store/actions'
  import { request } from 'utils'
  @connect({
    loading (state) {
      return state.user.loading
    },
    isLogin(state) {
      return state.user.isLogin
    },
    studentInfo(state) {
      return state.user.studentInfo
    }
  }, {
    init
  })
  export default class Account extends wepy.page {
    config = {
      navigationBarTitleText: '个人中心'
    }
    logoutHander () {
      request({
        url: '/api/hrbust/logout'
      })
      .then(async (res) => {
        this.methods.init().then(() => {
          wepy.reLaunch({
            url: './index'
          })
        })
      })
    }
    methods = {
      linkTo(url) {
        wepy.navigateTo({
          url
        })
      },
      logout() {
        const that = this
        wepy.showModal({
          title: '确定要解绑学号？',
          content: '解绑学号将删除当前学号的部分信息，需要重新绑定拉取~',
          success (res) {
            if (res.confirm) {
              that.logoutHander.bind(that)()
            }
          }
        })
      }
    }
  }
</script>

<style lang="less">
.account {
  margin-top: 30rpx;
}
.user {
  width: 630rpx;
	height: 230rpx;
	background-color: #ffffff;
	box-shadow: 0px 5rpx 30rpx 0px
		rgba(0, 0, 80, 0.07);
  border-radius: 16rpx;
  margin: 0 auto;
  display: flex;
  justify-content: center;
  align-items: center;
  .avatar {
    width: 150rpx;
    height: 150rpx;
    border-radius: 50%;
    margin-right: 60rpx;
  }
  .button {
    width: 300rpx;
    height: 70rpx;
    background-color: #6dde9e;
    box-shadow: 0 10rpx 25rpx 0
      rgba(109, 222, 158, 0.26);
    border-radius: 34rpx;
    font-size: 26rpx;
    color: #ffffff;
    text-align: center;
    line-height: 70rpx;
  }
  .info {
    width: 280rpx;
    font-size: 36rpx;
    line-height: 0px;
    letter-spacing: 0px;
    color: #333333;
    .name {
      height: 35rpx;
      line-height: 35rpx;
    }
    .student {
      display: flex;
      align-items: center;
      margin-top: 38rpx;
      font-size: 26rpx;
	    color: #cccccc;
      .image {
        margin-right: 30rpx;
        width: 106rpx;
        height: 38rpx;
      }
    }
  }
}
.other {
  margin: 20rpx 0;
  .item {
    display: flex;
    align-items: center;
    justify-content: center;
    .image {
      width: 35rpx;
      height: 35rpx;
    }
    .info {
      height: 120rpx;
      box-sizing: border-box;
      font-size: 26rpx;
      margin-left: 8rpx;
      color: #999999;
      padding: 40rpx 30rpx 40rpx 20rpx;
      width: 547rpx;
      border-bottom: 1rpx solid#eeeeee;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
  }
}
.button {
  margin: 0;
  padding: 0;
  border: none;
  background: none;
  font-size: 100%;
  vertical-align: baseline;
  font-family: inherit;
  font-weight: inherit;
  color: inherit;
  appearance: none;
  font-smoothing: antialiased;
  outline: none;
  &::after {
    border: none;
  }
}
.arrow-right {
  width: 12rpx;
  height: 20rpx;
}
</style>
