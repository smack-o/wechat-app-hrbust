<template>
  <view class="container">
    <block wx:for="{{hasCourseTerms}}" wx:for-item="item" wx:for-index="index">
      <view class="grade">
        <view class="term-card" wx:if="{{item.first == 1}}" data-termid="{{index * 2}}" @tap="setTerm">
          <view class="text" wx:if="{{item.first == 1}}">{{termMap[index]}}第1学期</view>
          <view class="icon">
            <image class="check" src="../assets/icon/check.png" wx:if="{{currentTerm == index * 2}}"></image>
          </view>
        </view>
        <view class="term-card" wx:if="{{item.second == 1}}" data-termid="{{index * 2 + 1}}" @tap="setTerm">
          <view class="text" wx:if="{{item.second == 1}}">{{termMap[index]}}第2学期</view>
          <view class="icon">
            <image class="check" src="../assets/icon/check.png" wx:if="{{currentTerm == index * 2 + 1}}"></image>
          </view>
        </view>
      </view>
    </block>
    <picker mode="selector" range-key="label" bindchange="changeTrem" value="{{}}" range="{{terms}}">
      <view class="button">+ 创建新学期</view>
    </picker>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import { request } from 'utils'
  import courseMixin from '../mixins/course'
  import { setTempTerm } from '../store/actions'

  @connect({
    currentTerm (state) {
      return state.currentTerm.currentTerm
    }
  }, {
    setTempTerm
  })
  export default class ChoiceTrem extends wepy.page {
    config = {
      navigationBarTitleText: '选择学期'
    }

    data = {
      hasCourseTerms: [],
      terms: [
        {id: 0, label: '大一第一学期'},
        {id: 1, label: '大一第二学期'},
        {id: 2, label: '大二第一学期'},
        {id: 3, label: '大二第二学期'},
        {id: 4, label: '大三第一学期'},
        {id: 5, label: '大三第二学期'},
        {id: 6, label: '大四第一学期'},
        {id: 7, label: '大四第二学期'}
      ],
      termMap: ['大一', '大二', '大三', '大四']
    }

    mixins = [courseMixin]

    methods = {
      changeTrem (event) {
        wepy.showLoading({
          title: '课表抓取中'
        })

        this.createNewTerm(event.detail.value)
          .then(() => {
            return this.getHasCourseTerms()
          })
          .then(() => {
            this.methods.setTempTerm(event.detail.value)

            wepy.showToast({
              title: '成功创建学期',
              icon: 'success',
              duration: 1000
            })
          })
      },

      setTerm (event) {
        this.methods.setTempTerm(event.currentTarget.dataset.termid)
      }
    }

    getHasCourseTerms () {
      return request({
        url: '/api/hrbust/getHasCourseTerms'
      })
        .then((res) => {
          this.hasCourseTerms = res.data.data
          this.$apply()
        })
        .catch(() => {
          wepy.showToast({
            title: '获取列表失败',
            image: '../assets/icon/error_icon.png',
            duration: 1000
          })
          return Promise.reject('获取学期列表失败')
        })
    }

    onLoad () {
      this.getHasCourseTerms()
    }
  }
</script>

<style lang="less">
  page {
    background-color: #f4f7f9;
    .container {
      display: flex;
      flex-direction: column;
      width: 100%;
      height: 100%;
      background-color: #f4f7f9;
      .grade {
        width: 100%;
        margin-top: 20px;
        padding: 10px;
        background-color: #fff;
        .term-card {
          display: inline-flex;
          width: 40%;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          margin-right: 20px;
          padding: 10rpx 10rpx;
          text-align: center;
          background-color: #afc0d0;
          .text {
            font-size: 14px;
            color: #fff;
            font-weight: 700;
          }
          .icon {
            position: relative;
            width: 100%;
            height: 130rpx;
            margin-top: 5rpx;
            background-color: #fff;
            image {
              position: absolute;
              width: 25px;
              height: 25px;
              right: 15rpx;
              bottom: 15rpx;
            }
          }
        }
      }
      .button {
        position: fixed;
        bottom: 0;
        width: 100%;
        height: 100rpx;
        font-size: 18px;
        color: #fff;
        font-weight: 700;
        line-height: 100rpx;
        text-align: center;
        background-color: #12ddd4;
      }
    }
  }
</style>
