<style lang="less">
  .container {
    // width: 650rpx;
    // height: 650rpx;
    width: 300px;
    height: 300px;
    margin: 30rpx auto 60rpx;
    border: 10rpx solid #ffffff;
    position: relative;
  }
  .bg {
    // position: absolute;
    margin: auto;
    z-index: 0;
    width: 300px;
    height: 300px;
    // border: 10rpx solid #ffffff;
  }
  .wrapper {
    position: absolute;
    width: 100%;
    height: 100%;
    padding-top: 20rpx;
    background: #be3535;
  }
  button {
    width: 630rpx;
    height: 98rpx;
    margin: 40rpx auto 20rpx;
    background: #be3535;
    border: 5rpx solid #ffffff;
    color: #fff;
    text-align: center;
    align-items: center;
    justify-content: center;
  }
  .hat {
    height: 100px;
    width: 100px;
    position: absolute;
    border: dashed 4rpx yellow;
    top: 200rpx;
  }
  .handle,
  .cancel {
    position: absolute;
    z-index: 1;
    width: 20px;
    height: 20px;
  }
  .scrollView {
    margin: 30rpx auto;
    width: 650rpx;
    position: absolute;
    left: 0;
    right: 0;
    top: 950rpx;
    white-space: nowrap;
    background: #ffffff;
  }
  .imgList {
    width: 140rpx;
    height: 140rpx;
    // border: 2px solid;
    margin: 10rpx 30rpx;
  }

</style>

<template>
  <view class="wrapper" wx:if="{{!combine}}">
    <view class="container" id="container" bind:touchstart="touchStart" bind:touchend="touchEnd" bind:touchmove="touchMove">
      <image class="bg" src="{{bgPic}}"></image>
      <!--<icon type="cancel" class="cancel" id="cancel" style="top:{{cancelCenterY-10+'px'}};left:{{cancelCenterX-10+'px'}}"></icon>-->
      <icon type="waiting" class="handle" id="handle" color="green" style="top:{{handleCenterY-10+'px'}};left:{{handleCenterX-10+'px'}}"></icon>
      <image class="hat" id="hat"
        src="../../assets/interim/{{currentHatId}}.png"
        style="top:{{hatCenterY-hatSize/2-2+'px'}};left:{{hatCenterX-hatSize/2-wtf-2+'px'}};transform:rotate({{rotate+'deg'}}) scale({{scale}})"></image>
    </view>
    <button bind:tap="combinePic">行了</button>
    <scroll-view class="scrollView" scroll-x="true">
      <image class="imgList" wx:for="...imgList" wx:key="{{index+1}}" src="../../assets/interim/{{index+1}}.png" data-hat-id="{{index+1}}" bind:tap="chooseImg"></image>
    </scroll-view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {
    setBackgroundPic,
    setScale,
    setRotate,
    setHatCenterX,
    setHatCenterY,
    setCurrentHatId
  } from '../../store/actions'
  import {
    connect
  } from 'wepy-redux'
  @connect({
    bgPic(state) {
      return state.christmasHat.bgPic
    }
  }, {
    setBackgroundPic,
    setScale,
    setRotate,
    setHatCenterX,
    setHatCenterY,
    setCurrentHatId
  })
  export default class imageeditor extends wepy.page {
    config = {
      enablePullDownRefresh: false
    }
    data = {
      imgList: [1, 2, 3, 4, 5, 6, 7, 8],
      currentHatId: 1,
      hatCenterX: wepy.getSystemInfoSync().windowWidth / 2,
      hatCenterY: 150,
      cancelCenterX: wepy.getSystemInfoSync().windowWidth / 2 - 50 - 2,
      cancelCenterY: 100,
      handleCenterX: wepy.getSystemInfoSync().windowWidth / 2 + 50 - 2,
      handleCenterY: 200,
      hatSize: 100,
      scale: 1,
      rotate: 0,
      touchTarget: '',
      startX: 0,
      startY: 0
    }
    onLoad() {
      // this.bgPic = app.globalData.bgPic
      this.hatCenterXBefore = this.hatCenterX
      this.hatCenterYBefore = this.hatCenterY
      this.handleCenterXBefore = this.handleCenterX
      this.handleCenterYBefore = this.handleCenterY
      this.cancelCenterXBefore = this.cancelCenterX
      this.cancelCenterYBefore = this.cancelCenterY
      this.scaleBefore = this.scale
      this.rotateBefore = this.rotate
    //   this.touchTarget = ''
    //   this.startX = 0
    //   this.startY = 0
    }
    // (wepy.getSystemInfoSync().windowWidth / 2 - 300) / 2
    onReady() {
      // this.scale = this.scale
    //   this.rotate = this.rotate
    //   this.touchTarget = ''
    //   this.startX = 0
    //   this.startY = 0
    }
    props = {}
    computed = {
      wtf () {
        // console.log(wepy.getSystemInfoSync().windowWidth, (wepy.getSystemInfoSync().windowWidth / 2 - 300) / 2)
        return (wepy.getSystemInfoSync().windowWidth - 300) / 2
      }
    }

    methods = {
      touchStart(e) {
        if (e.target.id === 'hat') {
          this.touchTarget = 'hat'
        } else if (e.target.id === 'handle') {
          this.touchTarget = 'handle'
        } else {
          this.touchTarget = ''
        }
        if (this.touchTarget !== '') {
          this.startX = e.touches[0].clientX
          this.startY = e.touches[0].clientY
        }
      },
      touchEnd(e) {
        this.hatCenterXBefore = this.hatCenterX
        this.hatCenterYBefore = this.hatCenterY
        this.cancelCenterXBefore = this.cancelCenterX
        this.cancelCenterYBefore = this.cancelCenterY
        this.handleCenterXBefore = this.handleCenterX
        this.handleCenterYBefore = this.handleCenterY
        // }
        this.touchTarget = ''
        this.scaleBefore = this.scale
        this.rotateBefore = this.rotate
        // console.log(this.hatCenterX, this.hatCenterY)
      },
      touchMove(e) {
        var currentX = e.touches[0].clientX
        var currentY = e.touches[0].clientY
        var movedX = currentX - this.startX
        var movedY = currentY - this.startY
        if (this.touchTarget === 'hat') {
          // this.setData({
          this.hatCenterX = this.hatCenterX + movedX
          this.hatCenterY = this.hatCenterY + movedY
          this.cancelCenterX = this.cancelCenterX + movedX
          this.cancelCenterY = this.cancelCenterY + movedY
          this.handleCenterX = this.handleCenterX + movedX
          this.handleCenterY = this.handleCenterY + movedY
          // })
        }
        if (this.touchTarget === 'handle') {
          // this.setData({
          this.handleCenterX = this.handleCenterX + movedX
          this.handleCenterY = this.handleCenterY + movedY
          this.cancelCenterX = 2 * this.hatCenterX - this.handleCenterX
          this.cancelCenterY = 2 * this.hatCenterY - this.handleCenterY
          // });
          let diffXBefore = this.handleCenterXBefore - this.hatCenterXBefore
          let diffYBefore = this.handleCenterYBefore - this.hatCenterYBefore
          let diffXAfter = this.handleCenterX - this.hatCenterXBefore
          let diffYAfter = this.handleCenterY - this.hatCenterYBefore
          let distanceBefore = Math.sqrt(diffXBefore * diffXBefore + diffYBefore * diffYBefore)
          let distanceAfter = Math.sqrt(diffXAfter * diffXAfter + diffYAfter * diffYAfter)
          let angleBefore = Math.atan2(diffYBefore, diffXBefore) / Math.PI * 180
          let angleAfter = Math.atan2(diffYAfter, diffXAfter) / Math.PI * 180
          this.scale = distanceAfter / distanceBefore * this.scaleBefore
          this.rotate = angleAfter - angleBefore + this.rotateBefore
        }
        this.startX = currentX
        this.startY = currentY
      },
      chooseImg(e) {
        // console.log(e)
        this.currentHatId = e.target.dataset.hatId
      },
      combinePic() {
        this.methods.setScale(this.scale)
        this.methods.setRotate(this.rotate)
        this.methods.setHatCenterX(this.hatCenterX)
        this.methods.setHatCenterY(this.hatCenterY)
        this.methods.setCurrentHatId(this.currentHatId)
        wepy.navigateTo({
          url: '../christmas/combine'
        })
      }
    }
  }
</script>
