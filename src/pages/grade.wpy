<style lang="less">
@import "../assets/lib.less";
.selecter {
  padding-top: 40rpx;
  padding-bottom: 20rpx;
  display: flex;
  justify-content: center;
  .select-button {
    width: 456rpx;
    height: 72rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #ffffff;
	  box-shadow: 0 5rpx 30rpx 0 rgba(0, 0, 80, 0.07);
	  border-radius: 16rpx;
    border-width: 3;
  }
  .picker-year {
    padding: 10px 20px;

    .flex-box {
      width: 100%;
      display: flex;
    }
  }
}
.grade-list {
    display: flex;
    flex-direction: column;
    .grade-title-list {
      position: absolute;
      z-index: 1000;
    }
    .title-row {
      width: 350rpx;
      display: flex;
      flex-direction: row;
      align-items: center;
      padding-top: 20rpx;
      padding-bottom: 20rpx;
    }
    .list-row {
      width: 1350rpx;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: flex-start;
      padding-top: 20rpx;
      padding-bottom: 20rpx;
      padding-right: 60rpx;
    }
    .list-row-even {
      background-color: #f7f7f7
    }
    .list-row-odd {
      background-color: #fff
    }
    .list-item {
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .list-text {
      font-size: 26rpx;
    }
    .gradeName {
      width: 260rpx;
      min-width:260rpx;
      margin-right: 30rpx;
      margin-left:60rpx
    }
    .mark {
      width: 60rpx;
      min-width: 60rpx;
      max-height: 40rpx;
      margin-left: 30rpx;
      margin-right: 30rpx;
    }
    .passSign {
      width: 110rpx;
      min-width: 110rpx;
      max-height: 40rpx;
      margin-left: 30rpx;
      margin-right: 30rpx;
    }
    .credit {
      width: 60rpx;
      min-width: 60rpx;
      max-height: 40rpx;
      margin-left: 30rpx;
      margin-right: 30rpx;
    }
    .gpa {
      width: 60rpx;
      min-width: 60rpx;
      max-height: 40rpx;
      margin-left: 30rpx;
      margin-right: 30rpx;
    }
    .courseAttribute {
      width: 110rpx;
      min-width: 110rpx;
      max-height: 40rpx;
      margin-left: 30rpx;
      margin-right: 30rpx;
    }
    .courseRemark {
      max-height: 40rpx;
      margin-left: 30rpx;
      margin-right: 30rpx;
    }
    .courseCharacter {
      width: 150rpx;
      min-width: 150rpx;
      max-height: 40rpx;
      margin-left: 30rpx;
      margin-right: 30rpx;
    }
}
.empty {
  padding-top: 200rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
.total-wrapper {
  // height: 170rpx;
  display: flex;
  justify-content: space-between;
  // background: #fa9;
  padding-left: 60rpx;
  padding-right: 60rpx;
  padding-bottom: 30rpx;
  border-bottom: 1rpx solid #f0f0f0;
  .total-item {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    text-align: center;
    width: 140rpx;
    .num-text {
      font-size: 28rpx;
      color: #333333;
      margin-bottom: 10rpx;
    }
    .total-text {
      font-size: 22rpx;
      color: #cccccc;
    }
  }
}
.select-text {
  font-size: 26rpx;
  color: #cccccc;
}
.tip-modal {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: 1000;
  width: 100%;
  height: 100%;
  display: flex;
  background: rgba(0, 0, 0, .75);
  .tip-logo {
    width: 302rpx;
    position: absolute;
    left: 116rpx;
    top: 415rpx;
  }
  .tip-arrow {
    width: 227rpx;
    position: absolute;
    right: 31rpx;
    top: 466rpx;
    animation: spin 1s ease-in-out infinite;
  }
  .tip-button {
    width: 350rpx;
    position: absolute;
    left: 0;
    right: 0;
    margin: auto;
    bottom: 288rpx;
  }
  @keyframes spin {
        0% {
          opacity: .5;
          width: 227rpx;
          right: 31rpx
        }
        50% {
          opacity: 1;
          width: 227rpx;
          right: 50rpx
        }
        100% {
          opacity: .5;
          width: 227rpx;
          right: 31rpx
        }
      }
}
</style>
<template>
  <view>
    <loading wx:if="{{loading}}"/>
    <view wx:else class="container">
      <view class="selecter">
        <picker class="picker-year" bindchange="changeTerm" value="{{selected_term}}" range="{{terms}}">
          <view class="select-button">
              <text class="select-text">学期{{term}}(点击切换)</text>
          </view>
        </picker>
      </view>
      <view wx:if="{{showEmpty}}" class="empty">
        <text class="select-text">还没有这学期的成绩</text>
      </view>
      <view wx:else class="grade-list">
        <view wx:if="{{showGDP}}" class="total-wrapper">
          <view class="total-item">
            <text class="num-text">{{AVERAGE_GRADE}}</text>
            <text class="total-text">加权平均分</text>
          </view>
          <view class="total-item">
            <text class="num-text">{{AVERAGE_GPA}}</text>
            <text class="total-text">平均学分绩点GPA(全部)</text>
          </view>
          <view class="total-item">
            <text class="num-text">{{OBLIGATORY_AVERAGE_GPA}}</text>
            <text class="total-text">平均学分绩点GPA(仅必修)</text>
          </view>
        </view>
        <view class="grade-list-wrapper">
          <view class="grade-title-list">
            <block wx:for="{{gradeData}}" wx:key="index">
              <view
                class="title-row {{index % 2 === 0 ? 'list-row-even' : 'list-row-odd'}}"
                style="{{index === 0 ? 'color: #999999; background-color: #fff; padding-top: 40rpx' : 'color: #333333'}}">
                <view class="list-item gradeName">
                  <text class="list-text" >{{item.gradeName}}</text>
                </view>
              </view>
            </block>
          </view>
          <scroll-view scroll-x="true" class="grade-list">
            <block wx:for="{{gradeData}}" wx:key="index">
              <view
                class="list-row {{index % 2 === 0 ? 'list-row-even' : 'list-row-odd'}}"
                style="color: {{index === 0 ? '#999999' : '#333333'}};background-color: {{index === 0 && '#fff'}};padding-top:{{index === 0 &&  '40rpx'}};width:  {{maxRemarkLength > 8 ? '1640rpx' : '1390rpx'}};">
                <view
                  class="list-item gradeName {{index % 2 === 0 ? 'list-row-even' : 'list-row-odd'}}"
                  style="{{index === 0 && 'background-color: #fff'}}">
                  <text class="list-text" >{{item.gradeName}}</text>
                </view>
                <view class="list-item mark">
                  <text class="list-text" >{{item.mark}}</text>
                </view>
                <view class="list-item passSign">
                  <text class="list-text" style="color:{{passSignStyle[item.passSign]}}">{{item.passSign}}</text>
                </view>
                <view class="list-item credit">
                  <text class="list-text" >{{item.credit}}</text>
                </view>
                <view class="list-item gpa">
                  <text class="list-text" >{{item.gpa}}</text>
                </view>
                <view class="list-item courseAttribute">
                  <text class="list-text" >{{item.courseAttribute}}</text>
                </view>
                <view class="list-item courseRemark" style="{{maxRemarkLength > 8 ? 'width: 360rpx; min-width: 360rpx' : 'width: 110rpx; min-width: 110rpx'}}">
                  <text class="list-text" >{{item.courseRemark}}</text>
                </view>
                <view class="list-item courseCharacter">
                  <text class="list-text" >{{item.courseCharacter}}</text>
                </view>
              </view>
            </block>
          </scroll-view>
        </view>
      </view>
      <inputdialog wx:if="{{popDialog}}" :captchaimageprops.sync="captchaImage" :errormsg.sync="errormsg" pagetag="grade"/>
    </view>
    <view class="tip-modal" wx:if="{{isFirstFull}}" bindtap="closeModal">
      <image class="tip-logo" src="../assets/icon/tip_logo.png" mode="widthFix"/>
      <image class="tip-arrow" src="../assets/icon/tip_arrow.png" mode="widthFix"/>
      <image class="tip-button" src="../assets/icon/tip_button_icon.png" mode="widthFix"/>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Loading from '../components/loading'
  import InputDialog from '../components/inputDialog'
  import { request, dateFormat } from 'utils'
  import { connect } from 'wepy-redux'

  @connect({
    loading (state) {
      return state.user.loading
    },
    initPromise(state) {
      return state.user.initPromise
    },
    isLogin(state) {
      return state.user.initPromise
    },
    studentInfo (state) {
      return state.user.studentInfo
    }
  })
  export default class grade extends wepy.page {
    config = {
      navigationBarTitleText: '成绩'
    //   enablePullDownRefresh: true
    }
    components = {
      loading: Loading,
      inputdialog: InputDialog
    }
    data = {
      AVERAGE_GPA: '--',
      AVERAGE_GRADE: '--',
      OBLIGATORY_AVERAGE_GPA: '--',
      showGDP: true,
      term: '',
      showEmpty: false,
      popDialog: false,
      captchaImage: '',
      errormsg: '',
      maxRemarkLength: 8,
      reqYear: null,
      reqTerm: null,
      isFirstFull: false,
      hasFullGrade: 'hasFullGrade',
      // doNotRefresh: false,
      gradeData: [
        {
          gradeName: '课程',
          mark: '成绩',
          passSign: '及格标志',
          credit: '学分',
          gpa: 'GPA',
          courseAttribute: '选课属性',
          courseRemark: '备注',
          courseCharacter: '考试性质'
        }
      ],
      passSignStyle: {
        '及格': '#cccccc',
        '及格标志': '#999999',
        '无成绩': '#e36363',
        '不及格': '#e36363'
      }
    }
    computed = {
      now () {
        return +new Date()
      },
      termName () {

      },
      hrbustLogin () {
        return this.studentInfo && this.studentInfo.username
        // return false
      },
      terms () {
        let terms = []
        let date = new Date()
        for (let i = date.getFullYear(); i >= date.getFullYear() - 5; i -= 1) {
          terms.push(`${i} 秋`)
          terms.push(`${i} 春`)
        }
        return terms
      }
    }

    methods = {
      changeTerm(e) {
        const term = this.terms[e.detail.value]
        this.term = term
        this.getGrade(this.term.split(' ')[0], this.term.split(' ')[1])
      },

      closeModal() {
        this.isFirstFull = false
      }
    }
    events = {
      'submit-emit': (captcha, pagetag) => {
        if (pagetag !== 'grade') {
          return
        }
        this.getGrade(this.reqYear, this.reqTerm, captcha)
      },
      'closedialog-emit': () => {
        this.popDialog = false
      }
    }
    async onLoad () {
      let time = new Date()
      // time.setFullYear(2008,1,9);
      const natureYear = dateFormat(time, 'yyyy')
      const computedDate = dateFormat(time, 'Mdd')
      let academicYear
      let academicTerm
      if (computedDate <= 220) {
        academicYear = natureYear - 1
        academicTerm = '秋'
      } else if (computedDate > 220 && computedDate <= 820) {
        academicYear = natureYear
        academicTerm = '春'
      } else if (computedDate > 820) {
        academicYear = natureYear
        academicTerm = '秋'
      }
      this.term = `${academicYear} ${academicTerm}`
      await this.getGrade(academicYear, academicTerm)
      this.$apply()
    }
    getGrade (year, term, captcha = '') {
      this.errormsg = ''
      this.reqYear = year
      this.reqTerm = term
      this.showEmpty = false
      wepy.showLoading({
        title: '正在加载数据'
      })
      const data = {}
      if (year && term) {
        data.year = parseInt(year) - 1980
        const termsObj = {
          春: 1,
          秋: 2
        }
        data.term = termsObj[term]
        this.gradeData.length = 1
        this.AVERAGE_GPA = '--'
        this.AVERAGE_GRADE = '--'
        this.OBLIGATORY_AVERAGE_GPA = '--'
        this.maxRemarkLength = 8
      }
      let reqURL = `/api/hrbust/grade?year=${data.year}&term=${data.term}`
      if (captcha !== '') {
        data.captcha = captcha
        reqURL = `/api/hrbust/grade?year=${data.year}&term=${data.term}&captcha=${data.captcha}`
      }
      return request({
        url: reqURL
      }).then((res) => {
        const resData = res.data.data
        if (res.data.status === 400001) {
          this.errormsg = '您输入的验证码错误'
        }
        if (res.data.status === 400005 || res.data.status === 400001) {
          this.captchaImage = resData.captcha
          this.popDialog = true
          this.$apply()
          wepy.hideLoading()
          return
        }
        const list = resData.grades
        if (list.length === 0) {
          this.showEmpty = true
        } else {
          this.showEmpty = false
          this.AVERAGE_GPA = `${resData.AVERAGE_GPA}`
          this.AVERAGE_GRADE = `${resData.AVERAGE_GRADE}`
          this.OBLIGATORY_AVERAGE_GPA = `${resData.OBLIGATORY_AVERAGE_GPA}`
          if (this.AVERAGE_GPA === 'NaN' || this.AVERAGE_GRADE === 'NaN' || this.OBLIGATORY_AVERAGE_GPA === 'NaN') {
            this.showGDP = false
          }
          list.map((item, index) => {
            let itemObj = {}
            itemObj.gradeName = item.courseName ? item.courseName : '--'
            itemObj.mark = item.grade ? item.grade : '--'
            itemObj.passSign = item.passFlag ? item.passFlag : '--'
            itemObj.credit = item.credit ? item.credit : '--'
            itemObj.gpa = item.gpa ? item.gpa : '--'
            itemObj.courseAttribute = item.courseAttribute ? item.courseAttribute : '--'
            itemObj.courseRemark = item.courseRemark ? item.courseRemark : '--'
            itemObj.courseCharacter = item.courseCharacter ? item.courseCharacter : '--'

            this.gradeData.push(itemObj)
            this.maxRemarkLength = itemObj.courseRemark.length > this.maxRemarkLength ? itemObj.courseRemark.length : this.maxRemarkLength
          })
          console.log('hasFullGrade', wepy.getStorageSync(this.hasFullGrade))
          if (!wepy.getStorageSync(this.hasFullGrade)) {
            console.log('hasFullGrade', wepy.getStorageSync(this.hasFullGrade))
            wepy.setStorageSync(this.hasFullGrade, true)
            this.isFirstFull = true
            console.log('hasFullGrade', wepy.getStorageSync(this.hasFullGrade))
          } else {
            this.isFirstFull = false
          }
        }
        this.$apply()
        wepy.hideLoading()
      })
      .catch((e) => {
        this.showError(this, e)
        wepy.hideLoading()
      })
    }

    showError(that, error) {
      if (error) {
        console.error(error)
      }
      wepy.showModal({
        content: error || '加载失败。',
        confirmText: '重新加载',
        success(res) {
          if (res.confirm) {
            that.getList()
          }
        }
      })
    }
  }
</script>
