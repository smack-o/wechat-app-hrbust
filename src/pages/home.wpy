<style lang="less">
@import "../assets/lib.less";
.slide-image {
  width: 100%;
}
.modules {
  display: flex;
  flex-wrap: wrap;
  justify-content: start;
  align-items: center;
  .module {
    width: 25vw;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  .module--disable {
    opacity: .3;
  }
  .modules__image {
    width: 40px;
  }
}
.login {
  font-size: 16px;
  text-align: center;
  padding: 10px 0 30px 0;
  .login-text {
    color: @color-green;
  }
}
</style>
<template>
  <view>
    <loading wx:if="{{loading}}" />
    <view wx:else class="container">
      <swiper indicator-dots="{{indicatorDots}}"
        autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}">
        <block wx:for="{{imgUrls}}" wx:key="index">
          <swiper-item>
            <image src="{{item}}" class="slide-image" mode="widthFix"/>
          </swiper-item>
        </block>
      </swiper>
      <navigator class="login" wx:if="{{!hrbustLogin}}" url="./login">
        部分功能未登录不可用，请点击<text class="login-text">登录</text>
      </navigator>
      <view class="modules">
        <block class="module" wx:for="{{modules}}" wx:key="index">
          <navigator wx:if="{{hrbustLogin || !item.needLogin}}" url="{{item.url}}">
            <view class="module">
              <image class="modules__image" src="{{item.image}}" mode="widthFix"/>
              <text>{{item.text}}</text>
            </view>
          </navigator>
          <view wx:else class="module--disable module">
            <image class="modules__image" src="{{item.image}}" mode="widthFix"/>
            <text>{{item.text}}</text>
          </view>
        </block>
        </view>
      </view>
      <!-- <button open-type="getUserInfo">login</button> -->
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Loading from '../components/loading'
  import { connect } from 'wepy-redux'

  @connect({
    loading (state) {
      return state.user.loading
    },
    initPromise(state) {
      return state.user.initPromise
    },
    isLogin(state) {
      return state.user.initPromise
    },
    studentInfo (state) {
      return state.user.studentInfo
    }
  })

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'test'
    }
    components = {
      loading: Loading
    }
    data = {
      isLoading: true,
      modules: [{
        image: '../assets/icon/course.png',
        text: '课表',
        url: './course',
        needLogin: true
      }, {
        image: '../assets/icon/grade.png',
        text: '成绩',
        url: './grade',
        needLogin: true
      }, {
        image: '../assets/icon/exam.png',
        text: '考试',
        url: './exam',
        needLogin: true
      }, {
        image: '../assets/icon/luqu_icon.png',
        text: '录取查询',
        url: '.gaokaoluqu'
      }, {
        image: '../assets/icon/news_icon.png',
        text: '教务公告',
        url: '.news'
      }, {
        image: '../assets/icon/job_icon.png',
        text: '校招信息',
        url: './job'
      },
      {
        image: '../assets/icon/search_icon.png',
        text: '新生速查',
        url: './info'
        // image: '../assets/icon/search_icon.png',
        // text: '新生速查',
        // url: '../info/info',
      }],
      imgUrls: [
        'http://ova96t3fz.bkt.clouddn.com/1c9e9cf6-75fe-4921-a88e-0b3bab801a10',
        'http://ova96t3fz.bkt.clouddn.com/2f7297f7-96a1-4582-92ee-4a09b0936f1c',
        'http://ova96t3fz.bkt.clouddn.com/4d80db82-719c-49ca-b02d-a897a50c5fd2'
      ],
      indicatorDots: false,
      autoplay: false,
      interval: 5000,
      duration: 1000
    }

    computed = {
      now () {
        return +new Date()
      },
      hrbustLogin () {
        return this.studentInfo && this.studentInfo.username
      }
    }

    methods = {
    }

    events = {
      'index-emit': (...args) => {
        let $event = args[args.length - 1]
        console.log(`${this.$name} receive ${$event.name} from ${$event.source.$name}`)
      }
    }

    async onLoad() {
      // const globalData = this.$parent.globalData
      // await globalData.initPromise
      // this.isLogin = globalData.isLogin
      // this.studentInfo = globalData.studentInfo
      // this.isLoading = false
      this.$apply()
    }
  }
</script>
