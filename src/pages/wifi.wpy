<style lang="less">
  @import "../assets/lib.less";
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    padding-bottom: 200rpx;
    .avatar {
      width: 180rpx;
      height: 180rpx;
      border-radius: 50%;
      margin-top: 150rpx;
    }

    .mall-name {
      font-size: 65rpx;
      margin-top: 60rpx;
    }

    .wifi-ssid {
      font-size: 32rpx;
      color: #999;
      margin-top: 20rpx;
      font-weight: 200;
    }

    .tip {
      font-size: 26rpx;
      color: #D6B44C;
      margin-top: 20rpx;
    }

    .clipboard {
      color: #256EFF;
      margin-left: 20rpx;
      font-size: 24rpx;
    }

    button {
      margin-top: 200rpx;
      width: 400rpx;
      // background: #1AAD19;
      // border-color: #1AAD19;
    }

    .go-app {
      color: #256EFF;
      text-align: center;
      margin-top: 40px;
    }
  }

</style>

<template>
  <view class="container">
      <image class="avatar" src="{{wifiPic}}" mode="aspectFill"></image>
      <view class="mall-name">{{wifiName}}</view>
      <view class="wifi-ssid">为您提供 Wi-Fi：<text selectable="{{true}}">{{wifiSsid}}</text></view>
      <view class="wifi-ssid">密码：<text selectable="{{true}}">{{wifiPassword}}</text> <Text class="clipboard" bindtap="setClipboard">复制密码</Text></view>
      <view class="tip">*当无法自动连接时，请直接复制密码进行连接</view>
      <button class="weui-btn" type="primary" bindtap="onClick">立即连接</button>
      <!-- <AtButton
        className="at-button"
        type="primary"
        onClick={this.onClick}
      >立即连接</AtButton> -->
    </view>
</template>

<script>
  import wepy from 'wepy'

  export default class Wifi extends wepy.page {
    config = {
      enablePullDownRefresh: false
    }
    data = {
      wifiSsid: 'wx_ssid',
      wifiPassword: 'wx_password',
      wifiName: 'wifiName',
      wifiPic: '' // http://hrbust-media.smackgg.cn/819e1746-4903-4174-a584-3062441a2937
    }
    onLoad(e) {
      this.startPromise = this.startWifi()
      e.wifiSsid && (this.wifiSsid = e.wifiSsid)
      e.wifiPassword && (this.wifiPassword = e.wifiPassword)
      e.wifiName && (this.wifiName = e.wifiName)
      e.wifiPic && (this.wifiPic = decodeURIComponent(e.wifiPic))

      this.$apply()
      // const storageData = wepy.getStorageSync('yingxin')
      // if (storageData) {
      //   const { id, password } = JSON.parse(storageData)
      //   this.id = id
      //   this.password = password
      // }
      // // wepy.setStorageSync('app_cookie', cookie)

      // // this.lusername = this.username
      // wepy.setNavigationBarTitle({
      //   title: '智能迎新'
      // })
    }
    startWifi() {
      return new Promise(resolve => {
        wx.startWifi({
          success: () => {
            this.startWifiSuccess = true
            this.$apply()
            resolve()
          },
          fail: e => this.showError(e.errMsg)
        })
      })
    }
    showError(msg) {
      wx.showModal({
        title: '错误',
        content: `请重试或复制 wifi 密码到系统设置页面进行连接。错误信息->${msg}`,
        showCancel: false
      })
    }
    methods = {

      setClipboard() {
        wx.setClipboardData({
          data: this.wifiPassword,
          success: () => {
            wx.showToast({
              title: '复制成功',
              icon: 'success',
              duration: 2000
            })
          }
        })
      },

      async onClick() {
        if (!this.startWifiSuccess) {
          await this.startWifi()
        }
        // console.log(111)
        const { wifiSsid, wifiPassword } = this
        wx.showLoading({
          title: '加载中'
        })
        wx.connectWifi({
          SSID: wifiSsid,
          password: wifiPassword,
          success: () => {
            wx.hideLoading()
            wx.showToast({
              title: '连接成功',
              icon: 'success',
              duration: 2000
            })
          },
          fail: err => {
            // console.log('connectWifi fail', err)
            wx.hideLoading()
            this.showError(err.errMsg)
          },
          complete: (err) => {
            console.log('complete', err)
          }
        })
      }
    }
  }
</script>
