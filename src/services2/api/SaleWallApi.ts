/**
 * Test swagger
 * Testing the Fastify swagger API
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import ajax, { AjaxPromise, ExtraFetchParams } from '@ajax'
import * as models from '../model/models'

/* tslint:disable:no-unused-variable member-ordering object-literal-shorthand */

/**
  * @description apiSaleWallIdGet参数
  * @property `id` wall id
  */
export interface ParamsapiSaleWallIdGet {
  // pathParams
  /**
   * wall id
   */
  id: string;
}
/**
  * request body
  */
export type ParamsBodyapiSaleWallLikePut = models.Data4
/**
  * @description apiSaleWallListGet参数
  * @property `[pageNum]` 分页页码
  * @property `[pageSize]` 每页数量
  */
export interface ParamsapiSaleWallListGet {
  // queryParams
  /**
   * 分页页码
   */
  pageNum?: string;
  /**
   * 每页数量
   */
  pageSize?: string;
}
/**
  * @description apiSaleWallListLikeGet参数
  * @property `[pageNum]` 分页页码
  * @property `[pageSize]` 每页数量
  */
export interface ParamsapiSaleWallListLikeGet {
  // queryParams
  /**
   * 分页页码
   */
  pageNum?: string;
  /**
   * 每页数量
   */
  pageSize?: string;
}
/**
  * @description apiSaleWallListPublishGet参数
  * @property `[pageNum]` 分页页码
  * @property `[pageSize]` 每页数量
  */
export interface ParamsapiSaleWallListPublishGet {
  // queryParams
  /**
   * 分页页码
   */
  pageNum?: string;
  /**
   * 每页数量
   */
  pageSize?: string;
}
/**
  * request body
  */
export type ParamsBodyapiSaleWallPost = models.Data3

export class SaleWallApi {
  protected $basePath = ''.replace(/\/$/, '')

  public constructor(basePath?: string) {
    if (basePath !== undefined) {
      this.$basePath = basePath.replace(/\/$/, '')
    }
  }

  /**
   * 获取卖舍友详情
   * @summary 获取卖舍友详情
   * @param params ParamsapiSaleWallIdGet
   
   * @param opt ajax config
   * @returns models.InlineResponse2005
   */
  public apiSaleWallIdGet = (
    params: ParamsapiSaleWallIdGet,
    opt?: ExtraFetchParams
  ) : AjaxPromise<models.InlineResponse2005>  => {
    const {
    id,
} = params
    const url = this.$basePath + `/api/sale-wall/${id}`
    const p: any = {}
    ajax.check(params.id, 'id')
    return ajax.ajax({
      ...opt,
      method: 'GET',
      url,
      ...p
    })
  }
  /**
   * 点赞/取消 卖舍友
   * @summary 点赞/取消 卖舍友
   
   * @param data: ParamsBodyapiSaleWallLikePut// request body
   * @param opt ajax config
   * @returns models.InlineResponse2002
   */
  public apiSaleWallLikePut = (
    
    data: ParamsBodyapiSaleWallLikePut,opt?: ExtraFetchParams
  ) : AjaxPromise<models.InlineResponse2002>  => {
    const url = this.$basePath + '/api/sale-wall/like'
    const p: any = {}
    p.data = data
    return ajax.ajax({
      ...opt,
      method: 'PUT',
      url,
      ...p
    })
  }
  /**
   * 获取卖舍友列表
   * @summary 获取卖舍友列表
   * @param params ParamsapiSaleWallListGet
   
   * @param opt ajax config
   * @returns models.InlineResponse2004
   */
  public apiSaleWallListGet = (
    params: ParamsapiSaleWallListGet,
    opt?: ExtraFetchParams
  ) : AjaxPromise<models.InlineResponse2004>  => {
    const url = this.$basePath + '/api/sale-wall/list'
    const p: any = {}
    p.query = {}
    if ('pageNum' in params) p.query.pageNum = params.pageNum
    if ('pageSize' in params) p.query.pageSize = params.pageSize
    return ajax.ajax({
      ...opt,
      method: 'GET',
      url,
      ...p
    })
  }
  /**
   * 获取用户点赞的卖舍友列表
   * @summary 获取用户点赞的卖舍友列表
   * @param params ParamsapiSaleWallListLikeGet
   
   * @param opt ajax config
   * @returns models.InlineResponse2004
   */
  public apiSaleWallListLikeGet = (
    params: ParamsapiSaleWallListLikeGet,
    opt?: ExtraFetchParams
  ) : AjaxPromise<models.InlineResponse2004>  => {
    const url = this.$basePath + '/api/sale-wall/list/like'
    const p: any = {}
    p.query = {}
    if ('pageNum' in params) p.query.pageNum = params.pageNum
    if ('pageSize' in params) p.query.pageSize = params.pageSize
    return ajax.ajax({
      ...opt,
      method: 'GET',
      url,
      ...p
    })
  }
  /**
   * 获取用户发布的卖舍友列表
   * @summary 获取用户发布的卖舍友列表
   * @param params ParamsapiSaleWallListPublishGet
   
   * @param opt ajax config
   * @returns models.InlineResponse2004
   */
  public apiSaleWallListPublishGet = (
    params: ParamsapiSaleWallListPublishGet,
    opt?: ExtraFetchParams
  ) : AjaxPromise<models.InlineResponse2004>  => {
    const url = this.$basePath + '/api/sale-wall/list/publish'
    const p: any = {}
    p.query = {}
    if ('pageNum' in params) p.query.pageNum = params.pageNum
    if ('pageSize' in params) p.query.pageSize = params.pageSize
    return ajax.ajax({
      ...opt,
      method: 'GET',
      url,
      ...p
    })
  }
  /**
   * 新建卖舍友
   * @summary 新建卖舍友
   
   * @param data: ParamsBodyapiSaleWallPost// request body
   * @param opt ajax config
   * @returns models.InlineResponse2006
   */
  public apiSaleWallPost = (
    
    data: ParamsBodyapiSaleWallPost,opt?: ExtraFetchParams
  ) : AjaxPromise<models.InlineResponse2006>  => {
    const url = this.$basePath + '/api/sale-wall'
    const p: any = {}
    p.data = data
    return ajax.ajax({
      ...opt,
      method: 'POST',
      url,
      ...p
    })
  }
}

export default new SaleWallApi()